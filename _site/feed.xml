<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MIOS Code</title>
    <description>MIOS Codes and Thinks</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 15 Nov 2019 11:29:58 +0900</pubDate>
    <lastBuildDate>Fri, 15 Nov 2019 11:29:58 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>딥러닝(1) - 개요, 퍼셉트론</title>
        <description>&lt;h1 id=&quot;1-ai-dl-ml--neural-network&quot;&gt;1. AI, DL, ML … Neural Network&lt;/h1&gt;
&lt;h2 id=&quot;인공지능ai의-역사&quot;&gt;인공지능(AI)의 역사&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1943년: 최초 신경망 모델 제안&lt;/li&gt;
  &lt;li&gt;1950년: 앨런 튜링이 튜링 테스트 제안&lt;/li&gt;
  &lt;li&gt;(첫 번째 AI 붐) 1950년대 후반 ~ 1970년대 전반
    &lt;ul&gt;
      &lt;li&gt;1956년 : 미국 다트머스의 학회에서 AI 이란 용어 처음 사용&lt;/li&gt;
      &lt;li&gt;1957년 : 코넬 항공 연구소 프랑크 로젠이 Perceptron 고안&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(두 번째 AI 붐) 1980년대: 주로 컴퓨터가 자율적으로 배우고 결정하는 종류가 아닌 인간으로부터 지식을 얻음&lt;/li&gt;
  &lt;li&gt;1990년대: 세계 체스 챔피언을 물리 친 AI&lt;/li&gt;
  &lt;li&gt;(세 번째 AI 붐) 2010년대: 딥 러닝 (머신 러닝)이라는 새로운 기술이 각광&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/history.jpg&quot; width=&quot;80%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;deep-learning-machine-learning&quot;&gt;Deep Learning (Machine Learning)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;딥 러닝은 최신 인공 신경망(Artificial neural network) 기술로 인간 두뇌의 메커니즘을 시뮬레이션&lt;/li&gt;
  &lt;li&gt;인간의 뇌는 정보를 전달하기 위해 뉴런(neuron)과 뉴런들을 연결하는 시냅스(synapse)로 구성&lt;/li&gt;
  &lt;li&gt;인공 신경망(또는 단순히 신경망이라고 함)은 이러한 뉴런과 시냅스를 모델링&lt;/li&gt;
  &lt;li&gt;이 모델은 두 번째 AI 붐 중에 적극적으로 연구되었지만 레이어 매우 작았고, 이후 기술 발전으로 인해 대규모 네트워크로 확장되어 컴퓨터가 심층 학습을 실행할 수 있게됨&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/neural_network.jpg&quot; width=&quot;80%&quot; /&gt;&lt;/center&gt;

&lt;h1 id=&quot;2-perceptron&quot;&gt;2. Perceptron&lt;/h1&gt;

&lt;h2 id=&quot;21-배경&quot;&gt;2.1. 배경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1957년에 코넬 항공 연구소(Cornell Aeronautical Lab)의 프랑크 로젠블랫(Frank Rosenblatt)에 의해 뉴런, 시냅스를 모방 하여 고안&lt;/li&gt;
  &lt;li&gt;뉴런은 특정 자극(impulse) 이 있다면 그 자극이 어느 역치(threshold) 이상이여야 활성화(activation)&lt;/li&gt;
  &lt;li&gt;활동전위(action potential)가 축삭(axon)을 따라 내려가면서 세포막 안팎의 극성이 변화 -&amp;gt; 다른 뉴런에서 온 신호에 반응하여 막이 역치(threshold) 전위에 도달하면 Na+ 및 K+ 개폐 이온 채널이 여닫힘 -&amp;gt; 활동전위가 시작될 때 Na+ 채널이 열리고 Na+가 축삭 안으로 들어와 탈분극(Depolarization) -&amp;gt; 재분극은 K+ 채널이 열리고 K+가 축삭 밖으로 나갈 때 일어남 -&amp;gt; 채널의 개폐로 세포 안팎 극성이 변화 -&amp;gt; 신경 자극은 한 방향으로만 이동하여 축삭 말단(axon ending)에서 다른 뉴런으로 신호를 전달
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/action_potential.gif&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/action_potential.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
    &lt;p&gt;(출처: 위키)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/neural_network_perceptron.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;22-개념&quot;&gt;2.2. 개념&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;입력(input) 신호의 총합이 정해진 임계값($\theta$) 넘었을 때 $1$을 출력(output), 넘지 못하면 $0$ 또는 $-1$ 출력&lt;/li&gt;
  &lt;li&gt;각 입력신호에 고유한 weight 부여되며 기계학습은 이 weight(입력을 조절하니 매개변수로도 볼 수 있음)의 값을 정하는 작업&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/perceptron.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/perceptron_2.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/perceptron_3.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/perceptron_4.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;23-학습-방법&quot;&gt;2.3. 학습 방법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;처음에는 인간이 임의로 weight로 시작&lt;/li&gt;
  &lt;li&gt;머신이 학습 데이터를 퍼셉트론 모형에 입력하며 분류가 잘못됐을 때 weight를 개선 (인간이 문제 틀렸을 때 다시 푸는 것과 유사 -&amp;gt; 학습이라고 부름)&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/machine_learning.jpg&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;24-가중치weight와-편향bias&quot;&gt;2.4. 가중치(weight)와 편향(bias)&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
b+w_1x_1+w_2x_2&lt;0 : 0 %]]&gt;&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;b+w_1x_1+w_2x_2&gt;=0 : 1&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;25-선형-분류linear-classifier&quot;&gt;2.5. 선형 분류(linear classifier)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;퍼셉트론의 출력 값은 앞에서 말했듯이 1 또는 0(or -1)이기 때문에 학습 데이터가 선형적으로 분리될 수 있을 때 적합한 알고리즘&lt;/li&gt;
  &lt;li&gt;선형 분류는 평면 상에 선을 쫙 그어서 여기 넘으면 A, 못 넘으면 B 이런식으로 선을 기준으로 분류하는 것 의미&lt;/li&gt;
  &lt;li&gt;학습이 반복될수록 선 기울기 달라짐 (학습을 하면서 weight가 계속 조정됨)&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/perceptron_example.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;퍼셉트론의-한계점&quot;&gt;퍼셉트론의 한계점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;AND와 OR과 같은 선형 데이터는 분류 가능하지만, XOR과 같은 형태의 비선형 데이터는 분류가 불가능하다
    &lt;ul&gt;
      &lt;li&gt;AND 함수: x1과 x2 중 모두(and) 1일때 1을 출력
|x1|x2|y|
|:-:|:-:|:-:|
|0|0|0|
|0|1|0|
|1|0|0|
|1|1|1|&lt;/li&gt;
      &lt;li&gt;OR 함수: x1과 x2 중 하나만(or) 1이면 1을 출력
|x1|x2|y|
|:-:|:-:|:-:|
|0|0|0|
|0|1|1|
|1|0|1|
|1|1|1|&lt;/li&gt;
      &lt;li&gt;XOR 함수: x1과 x2 중 어느 한쪽이 1일 때만 1을 출력 (둘다 1이면 0 출력)
|x1|x2|y|
|:-:|:-:|:-:|
|0|0|0|
|0|1|1|
|1|0|1|
|1|1|0|&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/xor.gif&quot; width=&quot;80%&quot; /&gt;&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;한계점이 밝혀지면서 한동안 소외 받았고, 퍼셉트론을 제시한 로젠블랫은 자살 같은 사고로 세상을 떠났고 시간이 흐른 뒤에야 그의 업적이 재조명 받았다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다층-퍼셉트론을-통한-한계-극복&quot;&gt;다층 퍼셉트론을 통한 한계 극복&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/Perceptron_XOR.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;neural-network&quot;&gt;Neural Network&lt;/h1&gt;

&lt;h2 id=&quot;개념&quot;&gt;개념&lt;/h2&gt;
&lt;p&gt;Input(입력층), Hidden(은닉층), Output(출력층)
&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/300px-Colored_neural_network.svg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;activation-function&quot;&gt;Activation Function&lt;/h2&gt;

&lt;p&gt;출력 값 결정하게 하는 역할, 변환기
AND, OR, NAND, XOR Gate 다음 단계&lt;/p&gt;

&lt;h3 id=&quot;계단-함수-step-function&quot;&gt;계단 함수 (Step Function)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/download.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;시그모이드-함수-sigmoid-function&quot;&gt;시그모이드 함수 (Sigmoid Function)&lt;/h3&gt;

&lt;p&gt;극단적인 계단 함수 대체하여 사용&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/sigmoid.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오차-역전파-error-backpropagatin&quot;&gt;오차 역전파 (Error Backpropagatin)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;순전파(Forwardpropagation) : 순차적으로 Input -&amp;gt; Output 가중치를 업데이트하면서 활성화 함수를 통해서 결과값을 가져오는 것&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;역전파 : 결과 값을 통해서 다시 역으로 input 방향으로 오차를 다시 보내며 가중치를 재업데이트 하는 것이다. 물론 결과에 영향을 많이 미친 노드(뉴런)에 더 많은 오차를 돌려줄 것이다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/H1KsG.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;한번 역전파를 실행하는 것을 1 epoch 주기라고함&lt;/li&gt;
  &lt;li&gt;epoch를 늘릴 수록 가중치가 계속 업데이트(학습)되면서 점점 오차가 줄어나가는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/Users/somi.han/Documents/Deep%20Learning/997C7A3359EEF5CA1F.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;https://journal.jp.fujitsu.com/en/2016/02/09/01/
https://sacko.tistory.com/10?category=632408
https://www.neuraldesigner.com/blog/perceptron-the-main-component-of-neural-networks
https://github.com/chaitjo/Perceptron
http://ecee.colorado.edu/~ecen4831/lectures/NNet3.html&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/deep%20learning/2019/11/14/DL(1)-perceptron/</link>
        <guid isPermaLink="true">http://localhost:4000/deep%20learning/2019/11/14/DL(1)-perceptron/</guid>
        
        <category>Perceptron</category>
        
        <category>Deep Learning</category>
        
        
        <category>Deep Learning</category>
        
      </item>
    
      <item>
        <title>(MySQL Workbench) MySQL Dump ERROR</title>
        <description>&lt;h1 id=&quot;mysql-workbench---mysql-dump-error&quot;&gt;MySQL Workbench - MySQL Dump ERROR&lt;/h1&gt;
&lt;h2 id=&quot;내용&quot;&gt;내용&lt;/h2&gt;
&lt;p&gt;MySQL Workbench에서 Data Export 시,
Unknown table ‘column_statistics’ in information_schema (1109) Error 나오면서 실패&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql -V
mysql  Ver 15.1 Distrib 10.3.13-MariaDB, for osx10.14 (x86_64) using readline 5.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;해결&quot;&gt;해결&lt;/h2&gt;
&lt;p&gt;MySQL Workbench -&amp;gt; Preference -&amp;gt; Administration -&amp;gt; Path to mysqldump Tool: /usr/local/Cellar/mariadb/10.3.13_1/bin/mysqldump&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql%20workbench/2019/11/12/mysqlworkbench-mysqldump-error/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql%20workbench/2019/11/12/mysqlworkbench-mysqldump-error/</guid>
        
        <category>MySQL</category>
        
        <category>mysqldump</category>
        
        
        <category>MySQL Workbench</category>
        
      </item>
    
      <item>
        <title>(mac) terminal 명령어</title>
        <description>&lt;h1 id=&quot;mac-terminal-명령어&quot;&gt;(mac) terminal 명령어&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;명령어&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
      &lt;th&gt;옵션, 기타&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man &amp;lt;명령어&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;명령어 도움말 보기&lt;/td&gt;
      &lt;td&gt;종료-&amp;gt;q&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;디렉토리 변경 (change directory) (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;dir&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~/&lt;/code&gt; 사용자의 홈 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~&amp;lt;userid&amp;gt;&lt;/code&gt; userid의 홈 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd -&lt;/code&gt; 바로 앞에 작업한 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd &amp;lt;디렉토리명&amp;gt;&lt;/code&gt; 지정한 directory로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd /&lt;/code&gt; 최상위 root directory로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ..&lt;/code&gt; 현재 작업 directory의 parent directory로 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 경로 하위 파일/디렉토리 나열 (list of directory) &lt;br /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; 디렉토리 내의 모든파일(.으로 시작되는 파일 포함)을 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 파일의 아이노드(inode)번호를 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; 파일의 크기를 쉬운 단위로 표시(k: 킬로바이트, m: 메가바이트)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 파일의 다양한 정보를 함께 출력(소유자 정보, 권한 정보, 크기, 날짜)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; 파일을 쉼표로 구분하여 가로로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; kb 단위의파일크기를 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; 파일을 최근에 생성된 시간순으로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-F&lt;/code&gt; 파일의 형태와 함께 출력한다(&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 실행파일, &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; 심볼릭링크, &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 디렉토리)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브 디렉토리의 내용을 포함하여 출력(즉 하위 디렉토리 내용을 모두 출력)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-S&lt;/code&gt; 파일을 크기순으로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt; 도움말 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;관리자 권한으로 실행&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo su root&lt;/code&gt; 루트로 로그인&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;전체 경로 확인&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find &amp;lt;옵션&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일을 이름, 수정날짜, 소유주, 허가 등을 기준으로 하여 검색&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-name &amp;lt;파일명&amp;gt;&lt;/code&gt; 파일명과 일치하는 파일을 찾기&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;. -name &amp;lt;파일명&amp;gt;&lt;/code&gt;현재 디렉토리에서 해당 파일 찾기&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-print&lt;/code&gt; 현재의 경로 이름을 표시&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep &amp;lt;옵션&amp;gt; &amp;lt;패턴&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 안 내용 찾기&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; 파일 내에서 패턴과 일치하는 줄의 총수를 구한다.&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; 여러 개의 파일을 검색할 때, 출력에 파일명이 나타나는 것을 방지한다.&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 대, 소문자를 구별하지 않는다&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; 일치하는 줄의 줄 번호도 같이 출력한다&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; 패턴과 일치하지 않는 줄만 출력한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;history&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;히스토리 보기&lt;/td&gt;
      &lt;td&gt;종료-&amp;gt;q&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;history \ grep &amp;lt;검색어&amp;gt;&lt;/code&gt; 히스토리 안 내용찾기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;화면 클리어 (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;clr&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;ip 보기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat -nat | grep TIME_WAIT | wc -l&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;네트워크&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ps &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 자신이 실행한 프로세스 목록을 출력&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lsof -i :&amp;lt;port번호&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;특정 포트 사용중인 프로세스 출력&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lsof -i -P | grep -i &quot;listen&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;사용중인 프로세스 중 열린(listen) 포트 확인&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill &amp;lt;-signalID&amp;gt; &amp;lt;PID&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;프로세스 kill&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-signalID&lt;/code&gt; 프로세서에게 보낼 시그널을 지정한다. 시그널은 번호로 지정될 도 있고 시그널 이름으로 지정될 수도 있다.(&lt;code class=&quot;highlighter-rouge&quot;&gt;-9&lt;/code&gt;)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 시그널 종류를 나열한다. 시그널의 종류는 시그널 번호 순서대로 이름으로 나열된다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jobs &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 진행중인 작업들을 출력&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 현재 작업하고 있는 디렉토리와 프로세스 그룹 ID를 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir &amp;lt;옵션&amp;gt; &amp;lt;디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;새로운 디렉토리 만들기 (make directory)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 만들고자하는 디렉토리의 상위 디렉토리가 없는 경우 상위 디렉토리까지 같이 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir &amp;lt;옵션&amp;gt; &amp;lt;디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;디렉토리 삭제 (remove directory)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 제거된 디렉토리에 대한 메시지가 표시됨&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 제거된 디렉토리에 대한 메시지가 표시되지 않음(Default)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch &amp;lt;파일명.확장자&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 생성&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm &amp;lt;옵션&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 삭제, 삭제하고자 하는 디렉토리에 파일이나 부 디렉토리가 없어야만 삭제가 가능 (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 디렉토리 안의 파일을 삭제할 때 사용자에게 확인을 요구하지 않음&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 인수 list 에서 지정한 디렉토리 혹은 그 아래의 subdirectory를 삭제&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-rf&lt;/code&gt; 디렉토리 안에 파일, 디렉토리 등 모든 내용물들도 같이 삭제&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; whrite permission 이 없는 파일의 삭제를 위해 대화식으로 확인&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 디렉토리 dir-name과 비어있는 부모 디렉토리를 사용자가 제거할 수 있으며, 전체 경로명이 삭제 되거나 어떤 이유로 인해 경로명의 일부가 남은것과 무관하게 표준출력에 메세지가 출력됨&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s -p&lt;/code&gt; 선택항목 지정시 표준오류에 출력되는 메시지를 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp &amp;lt;옵션&amp;gt; &amp;lt;원본파일명&amp;gt; &amp;lt;목적파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;복사 (copy) (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;copy&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 파일 복사시 동일 파일명이 있을시에 사용자에게 덮어 쓸 것인지를 물어봄&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 동일파일명 발생시에도 모두 강제적으로 복사함&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 원본 파일의 시간 및 소유 권한 보존&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 포함된 자식 디렉토리까지 모두 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mv &amp;lt;옵션&amp;gt; &amp;lt;원본파일명&amp;gt; &amp;lt;새로운파일명/이동할디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일의 위치를 바꾸거나(경로) 이름을 바꾸는데(존재하지 않는 파일명) 사용&lt;br /&gt;한번에 여러 개의 파일 이동도 가능(마지막만 이동할 디렉토리면됨)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 대상 파일이 존재할 대 새로운 파일로 대체&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 대상파일이 있을 때 확인 후 작업, 같은 이름의 파일이 이미 존재하여서 그것을 덮어쓰기를 하지 않으려면 사용&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 파일의 이동 과정을 보여준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;텍스트 파일 열기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;vim 편집기 실행&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ln -s &amp;lt;타겟 경로&amp;gt; &amp;lt;심볼릭 링크 경로&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;심볼릭 링크 걸기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod &amp;lt;옵션&amp;gt; &amp;lt;파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 권한 변경&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브디렉토리까지 모든 파일의 권한 변경&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;777&lt;/code&gt; 모든 권리&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;755&lt;/code&gt; 읽기만&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;700&lt;/code&gt; 오너만 조작 가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chown &amp;lt;옵션&amp;gt; &amp;lt;파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 소유자 변경&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브디렉토리까지 모든 파일의 권한 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zip &amp;lt;압축파일명.zip&amp;gt; &amp;lt;파일 또는 폴더&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 또는 폴더를 zip으로 압축&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip &amp;lt;압축파일명.zip&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;압축 풀기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;diff&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;두개의 파일이 일치되도록 변경시키기 위한 정보를 제공 man (differential file comparator)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;whoami&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 사용자&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;https://macinjune.com/all-posts/mac/terminal/terminal-mv-command%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EC%98%AE%EA%B8%B0%EA%B8%B0/
https://slayer95.tistory.com/entry/Tip%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%84%B0%EB%AF%B8%EB%84%90-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/terminal/2019/10/10/mac-terminal-command/</link>
        <guid isPermaLink="true">http://localhost:4000/terminal/2019/10/10/mac-terminal-command/</guid>
        
        <category>mac</category>
        
        <category>terminal</category>
        
        <category>command</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>(Python) jupyter notebook 실행</title>
        <description>&lt;h1 id=&quot;jupyter-notebook-실행&quot;&gt;jupyter notebook 실행&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /Users/&amp;lt;사용자계정&amp;gt;/anaconda/python.app -m notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;notebook-저장-경로-변경해서-저장&quot;&gt;notebook 저장 경로 변경해서 저장&lt;/h1&gt;
&lt;p&gt;주피터 노트북은 기본적으로 C:\Users&amp;lt;사용자계정&amp;gt; 폴더에 노트북 파일을 저장
노트북 파일 저장 경로를 바꾸려면 –notebook-dir 옵션에 폴더를 지정&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /Users/&amp;lt;사용자계정&amp;gt;/anaconda/python.app -m notebook --notebook-dir &amp;lt;경로&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://dojang.io/mod/page/view.php?id=2457&quot;&gt;https://dojang.io/mod/page/view.php?id=2457&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/python/2019/09/04/python-jupyter-run/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/09/04/python-jupyter-run/</guid>
        
        <category>Python</category>
        
        <category>jupyter</category>
        
        <category>notebook</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>(mac) terminal에서 port 실행 중인 PID kill</title>
        <description>&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./server.py
Traceback (most recent call last):
  File &quot;./server.py&quot;, line 7, in &amp;lt;module&amp;gt;
    s.bind((host, port))        # Bind to the port
OSError: [Errno 98] Address already in use
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;go&quot;&gt;Go&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./server
2019/09/02 20:12:33 InitDB1
2019/09/02 20:12:33 InitDB2
2019/09/02 20:12:33 Check JWT1
2019/09/02 20:12:33 config%!(EXTRA middleware.JWTConfig={&amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; [65 38 72 105 83 35 86 81 117 48 88 55] map[]   0xc0001a0000   &amp;lt;nil&amp;gt;})

   ____    __
  / __/___/ /  ___
 / _// __/ _ \/ _ \
/___/\__/_//_/\___/ v4.1.10
High performance, minimalist Go web framework
https://echo.labstack.com
____________________________________O/_______
                                    O\
{&quot;time&quot;:&quot;2019-09-02T20:12:33.851741+09:00&quot;,&quot;level&quot;:&quot;FATAL&quot;,&quot;prefix&quot;:&quot;echo&quot;,&quot;file&quot;:&quot;server.go&quot;,&quot;line&quot;:&quot;86&quot;,&quot;message&quot;:&quot;listen tcp :32101: bind: address already in use&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;
&lt;h2 id=&quot;오류에서-언급한-포트-사용중인-프로세스-확인&quot;&gt;오류에서 언급한 포트 사용중인 프로세스 확인&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsof -i :&amp;lt;port 번호&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsof -i :32101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;프로세스-강제-종료&quot;&gt;프로세스 강제 종료&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kill -9 &amp;lt;process id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;https://stackoverflow.com/questions/17780291/python-socket-error-errno-98-address-already-in-use&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/terminal/2019/09/02/kill-process-using-port/</link>
        <guid isPermaLink="true">http://localhost:4000/terminal/2019/09/02/kill-process-using-port/</guid>
        
        <category>mac</category>
        
        <category>terminal</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>Git 명령어</title>
        <description>&lt;h1 id=&quot;create&quot;&gt;Create&lt;/h1&gt;
&lt;p&gt;원하는 작업 폴더 새로 만들고 폴더 안으로 이동해서 새로운 git 저장소 만들기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd 작업디렉토리
$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;clone&quot;&gt;Clone&lt;/h1&gt;
&lt;h2 id=&quot;local-저장소-복제&quot;&gt;(local) 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone /로컬/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-저장소-복제&quot;&gt;(remote) 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone 사용자명@호스트:/원격/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;변경-사항-제거&quot;&gt;변경 사항 제거&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;로컬 변경을 수행 할 때 파일 범주는 세 가지
Type 1. Staged Tracked files : 준비 됨 – 준비 영역으로 이동 / 색인에 추가됨
Type 2. Unstaged Tracked files : 추적 된 – 수정 된 파일
Type 3. Unstaged UnTracked files a.k.a UnTracked files : 새 파일. 항상 무대 뒤에서. 준비가되면 추적된다는 의미입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;무인-추적-파일-만-제거-type-2&quot;&gt;무인 추적 파일 만 제거 (Type 2)&lt;/h2&gt;
&lt;h3 id=&quot;all&quot;&gt;All&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout . 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;특정-파일&quot;&gt;특정 파일&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -- &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ex) src/hello.c 의 변경을 취소하는 경우&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -- src/hello.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;unstaged-untracked-파일-만-제거-type-3&quot;&gt;Unstaged UnTracked 파일 만 제거 (Type 3)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clean -f 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;단계별-추적-및-비-스테이지-추적-파일을-제거-type-1-type-2&quot;&gt;단계별 추적 및 비 스테이지 추적 파일을 제거 (Type 1, Type 2)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git reset --hard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;모든-변경-사항을-제거-type-1-type-2-type-3&quot;&gt;모든 변경 사항을 제거 (Type 1, Type 2, Type 3)&lt;/h2&gt;
&lt;p&gt;모든 수정 사항을 버리므로 주의&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git stash -u
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;commit&quot;&gt;Commit&lt;/h1&gt;
&lt;h2 id=&quot;변경-파일-index에-추가&quot;&gt;변경 파일 Index에 추가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;변경-내용-확정-commit--head에-반영&quot;&gt;변경 내용 확정 (Commit) = Head에 반영&lt;/h2&gt;
&lt;p&gt;변경 파일들을 로컬 저장소에 등록하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 명령어 사용 &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;은 message&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit -m &quot;이번 확정본에 대한 설명&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;push&quot;&gt;Push&lt;/h1&gt;
&lt;p&gt;변경 내용 발행&lt;/p&gt;

&lt;h2 id=&quot;remote-서버-주소를-git에-등록&quot;&gt;remote 서버 주소를 git에 등록&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin https://~~~.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 origin을 사용하면 원격 저장소에 접근 가능해진다&lt;/p&gt;

&lt;h2 id=&quot;변경-내용-remote-서버에-올리기&quot;&gt;변경 내용 remote 서버에 올리기&lt;/h2&gt;
&lt;p&gt;새로 만든 로컬 branch를 리모트 저장소에 전송하기 전까지는 다른 사람 접근 불가&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;branch-관리&quot;&gt;Branch 관리&lt;/h1&gt;
&lt;h2 id=&quot;local-branch-새로-만들고-변경&quot;&gt;(local) branch 새로 만들고 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -b &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-기존-branch-변경&quot;&gt;(local) 기존 branch 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-branch-삭제&quot;&gt;(local) branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch -d &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-branch-목록-보기&quot;&gt;(local) branch 목록 보기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-branch-목록-보기&quot;&gt;(remote) branch 목록 보기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-branch-삭제&quot;&gt;(remote) branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin --delete &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-새로운-branch-복제&quot;&gt;(remote) 새로운 branch 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -t origin/&amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;pull&quot;&gt;Pull&lt;/h1&gt;
&lt;p&gt;로컬 저장소를 원격 저장소에 맞춰 갱신
원격 저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고(fetch), 병합(merge)&lt;/p&gt;

&lt;h2 id=&quot;remote-fetch&quot;&gt;(remote) fetch&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-local-pull&quot;&gt;(remote-&amp;gt;local) pull&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git pull origin &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;status&quot;&gt;Status&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;merge&quot;&gt;Merge&lt;/h1&gt;
&lt;p&gt;다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에 병합하려면 아래 명령 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git merge &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;충돌 나면 충돌 부분 수정해서 해결&lt;/p&gt;

&lt;p&gt;충돌을 해결했다면, 아래 명령으로 git에게 아까의 파일을 병합하라고 명령&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교 가능&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff &amp;lt;원래 brunch&amp;gt; &amp;lt;비교 대상 brunch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rogerdudler.github.io/git-guide/index.ko.html&quot;&gt;https://rogerdudler.github.io/git-guide/index.ko.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeday.me/ko/qa/20190306/4868.html&quot;&gt;https://codeday.me/ko/qa/20190306/4868.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/09/02/git-command/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/09/02/git-command/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>(Rust) 설치 및 실행 + nightly 버전</title>
        <description>&lt;h1 id=&quot;rust-설치&quot;&gt;Rust 설치&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;설치-확인&quot;&gt;설치 확인&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;nightly-rust&quot;&gt;nightly Rust&lt;/h1&gt;
&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup toolchain install nightly
info: syncing channel updates for 'nightly-x86_64-apple-darwin'
info: latest update on 2019-07-09, rust version 1.38.0-nightly (78ca1bda3 2019-07-08)
info: downloading component 'rustc'
 58.7 MiB /  58.7 MiB (100 %)   7.7 MiB/s in  7s ETA:  0s
info: downloading component 'rust-std'
168.5 MiB / 168.5 MiB (100 %)   7.9 MiB/s in 21s ETA:  0s
info: downloading component 'cargo'
info: downloading component 'rust-docs'
 11.6 MiB /  11.6 MiB (100 %)   8.7 MiB/s in  1s ETA:  0s
info: installing component 'rustc'
 58.7 MiB /  58.7 MiB (100 %)   9.7 MiB/s in  5s ETA:  0s
info: installing component 'rust-std'
168.5 MiB / 168.5 MiB (100 %)  17.5 MiB/s in  9s ETA:  0s
info: installing component 'cargo'
info: installing component 'rust-docs'
 11.6 MiB /  11.6 MiB (100 %)   1.1 MiB/s in  8s ETA:  0s

  nightly-x86_64-apple-darwin installed - rustc 1.38.0-nightly (78ca1bda3 2019-07-08)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;실행&quot;&gt;실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup run nightly rustc --version
rustc 1.38.0-nightly (78ca1bda3 2019-07-08)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;디폴트-설정&quot;&gt;디폴트 설정&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup default nightly
info: using existing install for 'nightly-x86_64-apple-darwin'
info: default toolchain set to 'nightly-x86_64-apple-darwin'

  nightly-x86_64-apple-darwin unchanged - rustc 1.38.0-nightly (78ca1bda3 2019-07-08)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;참고-업데이트&quot;&gt;(참고) 업데이트&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup update

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;build&quot;&gt;Build&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd &amp;lt;프로젝트 폴더&amp;gt;
$ cargo build --release
    Finished release [optimized] target(s) in 0.30s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;h2 id=&quot;내용&quot;&gt;내용&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo build --release
   Compiling rocket v0.4.1
error[E0432]: unresolved import `std::boxed::FnBox`
 --&amp;gt; /Users/somi.han/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.1/src/fairing/ad_hoc.rs:2:5
  |
2 | use std::boxed::FnBox;
  |     ^^^^^^^^^^^^^^^^^ no `FnBox` in `boxed`

error: aborting due to previous error

For more information about this error, try `rustc --explain E0432`.
error: Could not compile `rocket`.

To learn more, run the command again with --verbose.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;해결&quot;&gt;해결&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo --version
cargo 1.37.0-nightly (4c1fa54d1 2019-06-24)
$ cargo update
$ cargo build --release

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rustup.rs#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/rust/2019/07/09/rust-install-build/</link>
        <guid isPermaLink="true">http://localhost:4000/rust/2019/07/09/rust-install-build/</guid>
        
        <category>Rust</category>
        
        <category>nightly</category>
        
        
        <category>Rust</category>
        
      </item>
    
      <item>
        <title>(Vue.js) Quasar 1.0 CLI 설치하기</title>
        <description>&lt;h1 id=&quot;0-환경&quot;&gt;0. 환경&lt;/h1&gt;
&lt;p&gt;node &amp;gt;= 8, npm &amp;gt;= 5 설치되어있는지 확인한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm version    
{ npm: '6.4.1',
  ares: '1.15.0',
  cldr: '33.1',
  http_parser: '2.8.0',
  icu: '62.1',
  modules: '64',
  napi: '3',
  nghttp2: '1.34.0',
  node: '10.15.3',
  openssl: '1.1.0j',
  tz: '2018e',
  unicode: '11.0',
  uv: '1.23.2',
  v8: '6.8.275.32-node.51',
  zlib: '1.2.11' }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ node -v
v10.15.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;1-quasar-cli-설치&quot;&gt;1. Quasar CLI 설치&lt;/h1&gt;
&lt;p&gt;Uninstall quasar-cli if you have it from &amp;lt;1.0 versions&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm uninstall -g quasar-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Node.js &amp;gt;= 8.9.0 is required.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g @quasar/cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;v1.0 + CLI는 v1.0 이전 프로젝트 폴더와도 호환되므로 이전 프로젝트가 더 이상 실행되지 않는다고 걱정할 필요 없다.
Quasar 프로젝트 폴더를 생성하기 위해 vue cli를  더 이상 설치하지 않아도 된다.&lt;/p&gt;

&lt;h1 id=&quot;2-quasar-프로젝트-생성&quot;&gt;2. Quasar 프로젝트 생성&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quasar create &amp;lt;ProjectName&amp;gt;
  ___                             
 / _ \ _   _  __ _ ___  __ _ _ __ 
| | | | | | |/ _` / __|/ _` | '__|
| |_| | |_| | (_| \__ \ (_| | |   
 \__\_\\__,_|\__,_|___/\__,_|_|   

? Project name (internal usage for dev) custody_vue_client
? Project product name (must start with letter if building mobile apps) Quasar App
? Project description A Quasar Framework app
? Author somee.han &amp;lt;somee.han@aiotholdings.com&amp;gt;
? Pick your favorite CSS preprocessor: (can be changed later) Sass
? Pick a Quasar components &amp;amp; directives import strategy: (can be changed later) Auto import
? Check the features needed for your project: ESLint, Vuex, Axios, Vue-i18n, IE11 support
? Pick an ESLint preset: Standard
? Cordova/Capacitor id (disregard if not building mobile apps) com.aiotholdings.custody.mobild.app
? Should we run `npm install` for you after the project has been created? (recommended) NPM

...

 [*] Quasar Project initialization finished!

To get started:

  cd ArgusPoC
  quasar dev

Documentation can be found at: https://quasar.dev

Quasar is relying on donations to evolve. We'd be very grateful if you can
read our manifest on &quot;Why donations are important&quot;: https://quasar.dev/why-donate
Donation campaign: https://donate.quasar.dev
Any amount is very welcomed.
If invoices are required, please first contact razvan@quasar.dev

Please give us a star on Github if you appreciate our work:
https://github.com/quasarframework/quasar

Enjoy! - Quasar Team

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-실행&quot;&gt;3. 실행&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ProjectName
$ quasar dev
...
 app:dev-server Opening default browser at http://localhost:8080/ +11s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://quasar.dev/quasar-cli/installation&quot;&gt;https://quasar.dev/quasar-cli/installation&lt;/a&gt;
&lt;a href=&quot;https://godffs.tistory.com/3268&quot;&gt;https://godffs.tistory.com/3268&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/quasar/2019/07/02/vuejs-quasar-cli-install/</link>
        <guid isPermaLink="true">http://localhost:4000/quasar/2019/07/02/vuejs-quasar-cli-install/</guid>
        
        <category>Vue.js</category>
        
        <category>Quasar</category>
        
        
        <category>Quasar</category>
        
      </item>
    
      <item>
        <title>(Git) 원격저장소 url 변경</title>
        <description>&lt;h1 id=&quot;1-우선-git-이-있는-프로젝트로-이동&quot;&gt;1. 우선 .git 이 있는 프로젝트로 이동&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd myproj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-원격-url을-확인하려면&quot;&gt;2. 원격 URL을 확인하려면&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
origin	ssh://future@imot1/home/git/myproj.git (fetch)
origin	ssh://future@imot1/home/git/myproj.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-이제-다음과-같은-명령으로-변경할-수-있다&quot;&gt;3. 이제 다음과 같은 명령으로 변경할 수 있다.&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote set-url origin ssh://future@localhost:10022/home/git/myproj.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-다시-확인해-보면&quot;&gt;4. 다시 확인해 보면&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
origin	ssh://future@localhost:10022/home/git/myproj.git (fetch)
origin	ssh://future@localhost:10022/home/git/myproj.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;이제는-기존과-동일하게-동작&quot;&gt;이제는 기존과 동일하게 동작&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://egloos.zum.com/mcchae/v/11237088&quot;&gt;http://egloos.zum.com/mcchae/v/11237088&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/06/27/git-url-change/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/06/27/git-url-change/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>마스터링 이더리움 1장~5장</title>
        <description>&lt;h1 id=&quot;1장-이더리움이란-무엇인가&quot;&gt;1장. 이더리움이란 무엇인가?&lt;/h1&gt;
&lt;h2 id=&quot;이더리움&quot;&gt;이더리움?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;“스마트 컨트랙트라는 프로그램을 실행하는 오픈 소스에 기반을 둔, 전 세계에 걸쳐 탈중앙화된 컴퓨팅 인프라스트럭처다.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Blockchain Computer&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;World Computer&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Globally Accesible singleton state and virtual machine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;State Machine&lt;/li&gt;
  &lt;li&gt;Decentralized Computer&lt;/li&gt;
  &lt;li&gt;Platform
    &lt;ul&gt;
      &lt;li&gt;for developer&lt;/li&gt;
      &lt;li&gt;smart contract&lt;/li&gt;
      &lt;li&gt;decentralized application (DApp)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;비트코인-vs-이더리움&quot;&gt;비트코인 vs 이더리움&lt;/h2&gt;
&lt;h3 id=&quot;공통점&quot;&gt;공통점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;P2P&lt;/li&gt;
  &lt;li&gt;Byzantine fault-tolerant consensus&lt;/li&gt;
  &lt;li&gt;디지털 서명과 해쉬&lt;/li&gt;
  &lt;li&gt;디지털 화폐
    &lt;h3 id=&quot;차이점&quot;&gt;차이점&lt;/h3&gt;
    &lt;p&gt;| |비트코인|이더리움|
|—|—|—|
|목적|디지털 화폐 지급 네트워크|유틸리티 화폐|
|컨셉|디지털 화폐|스마트 컨트랙트|
|설계|스크립트 언어|가상 머신 운영(범용 프로그래밍)|
|언어|지불 조건에 대한 단순한 참/거짓 평가에 제한|튜링 완전 언어|
|트랜잭션|send from alice to bob|send from alice to bob if… (date=jan 1,2018, bob’s balance &amp;lt; 10eth)|&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2장-이더리움-기초&quot;&gt;2장. 이더리움 기초&lt;/h1&gt;
&lt;h2 id=&quot;이더-화폐-단위&quot;&gt;이더 화폐 단위&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이더(ether): 기본 단위&lt;/li&gt;
  &lt;li&gt;웨이(wei): 가장 작은 단위
    &lt;ul&gt;
      &lt;li&gt;$1 \ ETH = 1 * 10^{18} \ wei$ (100경(quintillion)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이더의 가치는 항상 이더리움 내부에서 웨이로 표시된 부호 없는 정숫값으로 표현됨
    &lt;ul&gt;
      &lt;li&gt;1이더를 거래할 때, 그 트랜잭션은 1000000000000000000웨이 값으로 인코딩해서 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;월드-컴퓨터&quot;&gt;월드 컴퓨터&lt;/h2&gt;
&lt;h3 id=&quot;evmethereum-virtual-machine-evm&quot;&gt;EVM(Ethereum Virtual Machine, EVM)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;글로벌 싱글톤
    &lt;ul&gt;
      &lt;li&gt;전 세계에 걸친 단일 인스턴스 컴퓨터처럼 작동&lt;/li&gt;
      &lt;li&gt;세상 어디에서든 실행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이더리움 네트워크의 각 노드는 컨트랙트 실행을 확인하기 위해 EVM의 로컬 사본을 실행하고, 이더리움 블록체인은 트랜잭션과 스마트 컨트랙트를 처리할 때 월드 컴퓨터의 변화하는 상태를 기록한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;외부-소유-계정eoa-externally-owned-account-및-컨트랙트contract-account&quot;&gt;외부 소유 계정(EOA, Externally Owned Account) 및 컨트랙트(contract account)&lt;/h2&gt;
&lt;p&gt;| |EOA|컨트랙트|
|—|:-:|:-:|
|개인키 유무|O|X|
|스마트 컨트랙트 코드|X|O|
|역할|자금 또는 컨트랙트에 대한 접근 제어|스마트 컨트랙트의 로직으로 제어|
|트랜잭션 시작|가능(개인키 있으므로)|불가능(개인키 없으므로)|&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스마트 컨트랙트 코드: 컨트랙트 계정 생성 시 이더리움 블록체인에 기록되고 EVM에 의해 실행되는 소프트웨어 프로그램&lt;/li&gt;
  &lt;li&gt;컨트랙트에는 EOA와 마찬가지로 주소가 있으며, 이더를 보내고 받을 수 있다&lt;/li&gt;
  &lt;li&gt;트랜잭션 목적지가 컨트랙트 주소일 때, 트랜잭션과 트랜잭션 데이터를 입력으로 사용하여 컨트랙트가 EVM에서 실행된다(run)&lt;/li&gt;
  &lt;li&gt;컨트랙트는 블록체인에 바이트코드를 등록하는 특별한 트랜잭션에 의해 생성됨&lt;/li&gt;
  &lt;li&gt;컨트랙트가 블록체인에서 생성되면 지갑과 마찬가지로 이더리움 주소를 갖게됨&lt;/li&gt;
  &lt;li&gt;누군가 컨트랙트 주소로 트랜잭션을 보낼 때마다 그 트랜잭션에는 이더, 데이터 또는 둘다 포함할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;트랜잭션이 이더를 포함하면 커트랙트 잔액에 &lt;strong&gt;예치된다&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;데이터가 포함되면 데이터에서는 컨트랙트에 명명된 함수를 지정하고 호출(call)하여 함수에 인수를 전달할 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컨트랙트 계정은 트랜잭션을 실행할 수 없지만, 복잡한 실행 경로를 구축하여 다른 컨트랙트를 호출해서 컨트랙트에 반응(react)할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;예: 다중 서명 스마트 트랜잭션 지갑에 지급요청 트랜잭션을 전송하여 일부 ETH를 다른 주소로 보낼 수 있음
        &lt;ul&gt;
          &lt;li&gt;일반적인 DApp 프로그래밍 패턴은 컨트랙트 A가 컨트랙트 B를 호출하게 하는 것인데, 이렇게 하면 컨트랙트 A의 사용자들 간에 공유된 상태를 유지할 수 있게 됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3장-이더리움-클라이언트&quot;&gt;3장. 이더리움 클라이언트&lt;/h1&gt;
&lt;h2 id=&quot;클라이언트&quot;&gt;클라이언트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Parity, written in Rust&lt;/li&gt;
  &lt;li&gt;Geth, written in Go&lt;/li&gt;
  &lt;li&gt;cpp-ethereum, written in C++&lt;/li&gt;
  &lt;li&gt;py-evm, written in Python&lt;/li&gt;
  &lt;li&gt;Mantis, written in Scala&lt;/li&gt;
  &lt;li&gt;Harmony, written in Java&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4장-암호학&quot;&gt;4장. 암호학&lt;/h1&gt;
&lt;h2 id=&quot;공개키-암호화&quot;&gt;공개키 암호화&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이전 자료 대체&lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;이더리움-주소&quot;&gt;이더리움 주소&lt;/h2&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Keccak-256 단방향 해시 함수를 사용하는 공개키 또는 컨트랙트에서 파생한 고유 식별자(unique identifier)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;private key k&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;k=f8f8a2f43c8376......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;public key K(x, y 좌표가 연결되고 16진수로 표현됨)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;K=6e145ccef...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Keccak-256을 사용해서 공개키의 해시를 계산&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keccak256(K)=2a5bc342....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;마지막 20바이트(최하위 바이트)만 이더리움 주소로 사용&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;001d3flef827552ae1114027bd3ecf1f086a0f9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;접두어 0x로 표시되어 16진수로 인코딩&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x001d3flef827552ae1114027bd3ecf1f086a0f9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;5장-지갑&quot;&gt;5장. 지갑&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;넓은 의미
이더리움 주요 사용자 인터페이스를 제공하는 소프트웨어 애플리케이션&lt;/li&gt;
    &lt;li&gt;좁은 의미(개발자 시각)
사용자의 키를 보괂고 관리하기 위해 사용되는 시스템을 의미하며 모든 지갑은 키 관리 구성요소를 갖고 있다. (그 자체로 전부인 지갑, 브라우저 일부, DApp의 일부 등)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;h3 id=&quot;지갑-설계-고려사항&quot;&gt;지갑 설계 고려사항&lt;/h3&gt;
&lt;p&gt;편의성, 프라이버시 사이 균형&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;편리함&lt;/th&gt;
      &lt;th&gt;불편함&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;프라이버시 좋음&lt;/td&gt;
      &lt;td&gt;모든 트랜잭션에 새로운 키 사용&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;프라이버시 나쁨&lt;/td&gt;
      &lt;td&gt;하나의 개인키와 주소를 가지고 이를 재사용해서 모든 것을 처리&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;지갑-형태&quot;&gt;지갑 형태&lt;/h2&gt;
&lt;p&gt;지갑이 포함하는 키가 서로 관련이 있느냐 없느냐에 따라 구분&lt;/p&gt;
&lt;h3 id=&quot;1-비결정적-지갑nondeterministic-wallet&quot;&gt;1. 비결정적 지갑(nondeterministic wallet)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;JBOK(Just a Bunch Of Keys, 그냥 열쇠뭉치)&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;첫 번째 이더리움 지갑(이더리움 사전 판매용으로 생성)은 각 지갑 파일에 부작위로 추출된 단일 개인키를 저장함&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-결정적-지갑deterministic-wallet&quot;&gt;2. 결정적 지갑(deterministic wallet)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;모든 키가 seed라고 하는 단일 마스터 키로부터 파생
모든 키는 서로 관련이 있고 원래의 시드를 갖고 있다면 다시 키를 파생시킬 수 있다
여러 가지 키 파생(key derivation)방식이 있는데 가장 많이 사용하는 방식은 트리 같은 구조(&lt;strong&gt;HD 지갑&lt;/strong&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;hd지갑&quot;&gt;HD지갑(&lt;/h4&gt;
</description>
        <pubDate>Wed, 26 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ethereum/2019/06/26/mastering-ethereum-1-5/</link>
        <guid isPermaLink="true">http://localhost:4000/ethereum/2019/06/26/mastering-ethereum-1-5/</guid>
        
        <category>Ethereum</category>
        
        <category>Blockchian</category>
        
        
        <category>Ethereum</category>
        
      </item>
    
      <item>
        <title>Jekyll Admin 실행</title>
        <description>&lt;h1 id=&quot;1-jekyll-admin-플러그인-추가&quot;&gt;1. Jekyll Admin 플러그인 추가&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 파일 오픈해서 아래와 같이 추가&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'jekyll-admin', group: :jekyll_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;루트 디렉토리에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; 실행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;http://localhost:4000/admin 접속 시 관리자 보임&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll-admin/blob/master/README.md&quot;&gt;https://github.com/jekyll/jekyll-admin/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/06/11/jekyll-admin/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/06/11/jekyll-admin/</guid>
        
        <category>Jekyll</category>
        
        <category>Github</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>ECC, ECDSA 이해하기 (ft. 수학)</title>
        <description>&lt;h1 id=&quot;0-목적&quot;&gt;0. 목적&lt;/h1&gt;
&lt;p&gt;ECDSA 작동 방식, 알고리즘, 디지털 서명 확인 방법 및 그러한 서명을 위조하는 것이 불가능한 방법을 설명한다.&lt;/p&gt;

&lt;h2 id=&quot;기본-내용&quot;&gt;기본 내용&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ECDSA는 정수만 사용(실수는 사용하지 않는다)&lt;/li&gt;
  &lt;li&gt;일반적으로 ECDSA는 총 160bits를 사용(49자릿수)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-필요한-수학-개념&quot;&gt;1. 필요한 수학 개념&lt;/h1&gt;

&lt;h2 id=&quot;modular&quot;&gt;Modular&lt;/h2&gt;
&lt;p&gt;한 방향으로는 쉽지만 다른 방향으로는 어려운 일방향 함수를 고안하기 위해 탄생되었다.
시계 연산으로도 알려져있다.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;x\ mod\ p&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;46\ mod\ 12 \equiv 10&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;modular-합동&quot;&gt;Modular 합동&lt;/h2&gt;
&lt;p&gt;정수 $a, b$와 양의 정수 $m$에 대하여 $a-b$가 $m$으로 나누어 떨어진다면, $a$와 $b$ 는 모듈로 $m$ 합동(a is congruent to b modulo m)이다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a\equiv b\ (mod\ m)&lt;/script&gt;

&lt;h2 id=&quot;modular-합동의-필요충분조건&quot;&gt;Modular 합동의 필요충분조건&lt;/h2&gt;
&lt;p&gt;$a\equiv b\ (mod\ m)$의 필요충분조건은, $a\ mod\ m = b\ mod\ m$이다.&lt;/p&gt;

&lt;p&gt;정수 $a, b$가 모듈로 $m$ 합동이기 위한 필요충분조건은, $a = b+km$을 만족하는 $k$의 존재이다.
($a-b=km$이란 뜻이므로 합동의 정의와 같다)&lt;/p&gt;

&lt;h2 id=&quot;modular-사칙연산&quot;&gt;Modular 사칙연산&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a+b)\ mod\ m&amp;=&amp;((a\ mod\ m)+(b\ mod\ m))\ mod\ m\\
(a-b)\ mod\ m&amp;=&amp;((a\ mod\ m)-(b\ mod\ m))\ mod\ m\\
(a\times b)\ mod\ m&amp;=&amp;((a\ mod\ m)\times(b\ mod\ m))\ mod\ m\\
(a\div b)\ mod\ m&amp;=&amp;((a\ mod\ m)\div(b\ mod\ m))\ mod\ m ????
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;사칙연산 중 나눗셈에 닫혀있다. 
역원의 곱셈으로 변경하면 성립된다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;modular-역원&quot;&gt;Modular 역원&lt;/h2&gt;
&lt;p&gt;$b^{-1}$은 모듈러 group 중에서 $b$와 곱하고 모듈러를 취했을 때 $1$이되는 값이다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(b\times b^{-1})\ mod\ m \equiv 1&lt;/script&gt;

&lt;p&gt;$m$과 서로소인 수($m$과 공통 소인수가 없는 수)만 모듈러 역원($mod\ m$)을 가진다.&lt;/p&gt;

&lt;p&gt;모듈러 group에서 곱셈에 대한 역원을 구하는 방법은 여러가지가 있다.
가장 무식하게는 group 내 모든 원소($0$ ~ $m-1$)에 대해서 곱셈을 해본 후 모듈러를 취했을때 1이 나오는 값을 찾으면 된다.&lt;/p&gt;

&lt;p&gt;하지만 수학적으로 더 빠르게 구할 수 있는 방법을 알아보자.&lt;/p&gt;

&lt;h3 id=&quot;페르마의-소정리&quot;&gt;페르마의 소정리&lt;/h3&gt;

&lt;p&gt;정수 $a$를 선택해서 거듭제곱 $a^2, a^3, a^4 … (mod\ p)$를 계산하면 어떤 규칙성이 있는가?&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/fermat_little_theorem.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;패턴을 찾으면, $a\equiv 0$이 아니면 $a^2\equiv 1\ (mod\ 3), a^4\equiv 1\ (mod\ 5), a^6\equiv 1\ (mod\ 7)$&lt;/p&gt;

&lt;p&gt;소수 $p$와 서로소인 정수 $a$에 대해 다음과 같은 식이 존재한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^{p-1}\equiv 1\quad (mod\ p)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^p\equiv a\ mod\ p&lt;/script&gt;

&lt;p&gt;식을 전개하면,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^{p-1}=a\times a^{p-2}\equiv 1 \ (mod\ p)&lt;/script&gt;

&lt;p&gt;$a의$ 역원을 한번에 구할 수 있다. ($a^{p-2}$)&lt;/p&gt;

&lt;p&gt;단, $m$은 소수여야하고 $a$는 $m$과 서로소라는 가정이 충족되어야 한다.&lt;/p&gt;

&lt;p&gt;다시 구하려던 식을 정리해보자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{m-2}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;h4 id=&quot;소스코드&quot;&gt;소스코드&lt;/h4&gt;
&lt;p&gt;재귀&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;long long get_pow(long long a, long long b, long long mod){
    if(b==0) return 1;
    if(b&amp;amp;1) return a * get_pow(a*a%mod, (b-1)/2, mod) % mod;
    return get_pow(a*a%mod, b/2, mod) % mod;
}
 
long long mod_inverse(long long a, long long mod){
    long long b = mod-2;
    return get_pow(a,b,mod);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;반복문&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;long long mod_inverse(long long a, long long mod){
    long long ret = 1;
    int b = mod-2;
    while(b!=0){
        if(b&amp;amp;1) ret = (ret*a)%mod;
        a = (a*a)%mod;
        b&amp;gt;&amp;gt;=1;
    }
    return ret;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;확장-유클리드-알고리즘&quot;&gt;확장 유클리드 알고리즘&lt;/h3&gt;
&lt;p&gt;페르마의 소정리는 $m$이 소수라는 제약조건이 있다.&lt;/p&gt;

&lt;p&gt;확장 유클리드 호제법은 $m$이 소수가 아니어도 $a$와 $m$이 서로소라는 조건만 만족하면 곱셈에 대한 역원을 구할 수 있다.&lt;/p&gt;

&lt;p&gt;확장 유클리드 알고리즘(Extended Euclidian Algorithm)은 유클리드 호제법을 확장한 것이다.
$a$와 $b$에 대해서 아래 식을 만족하는 정수 $x, y$짝을 찾아낼 수 있다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ax+by=gcd(a,b)&lt;/script&gt;

&lt;h4 id=&quot;계산방법&quot;&gt;계산방법&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;(초기조건)&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_0=1, x_1=0, y_0=0, y_1=1, r_0=a, r_1=b&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;(진행)&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix}
q_i&amp;\gets&amp; |r_{i-1}/r_i|\ (i\ge 1)\\
r_i&amp;\gets&amp; r_{i-2}-r_{i-1}\times q_{i-1}\ (i\ge 2)\\
x_i&amp;\gets&amp; x_{i-2}-x_{i-1}\times q_{i-1}\\
y_i&amp;\gets&amp; y_{i-2}-y_{i-1}\times q_{i-1}
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$x_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$y_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$r_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$q_i$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor a/b\rfloor$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a\ mob\ b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;(예제) $15x+6y=3$을 만족시키는 $x,y$ 찾기&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$x_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$y_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$r_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$q_i$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a=15$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b=6$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor 15/6\rfloor=2$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=2$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1-0\times 2=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0-1\times 2=-2$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$15\ mod\ 6=3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor 6/3\rfloor=2$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$6\ mod\ 3=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;$r_i$이 $0$이 되는 순간 나머지가 $0$이 되는, 즉 식이 나누어 떨어지는 $x, y$를 찾았다는 의미이다.&lt;/p&gt;

&lt;p&gt;즉, $x_{i-1}$와 $y_{i-1}$이 우리가 구하고자하는 답이다.&lt;/p&gt;

&lt;p&gt;검산해보면,
&lt;script type=&quot;math/tex&quot;&gt;15x+6y=15\times 1+6\times (-2)=15-12=3&lt;/script&gt;
인 것을 확인할 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;소스코드-1&quot;&gt;소스코드&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;int exgcd(int a, int b, int &amp;amp;cx, int &amp;amp;cy){
	if(b == 0){
		cx = 1;
		cy = 0;
		return a;
	}
	int nx, ny;
	int g = exgcd(b, a % b, nx, ny);
	cx = ny;
	cy = nx - (a / b) * ny;
	return g;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;확장 유클리드 호제법과 모듈러 곱셈에 대한 역원을 연결해보자.&lt;/p&gt;

&lt;p&gt;$a$의 곱셈에 대한 역원을 $x$라고 하면 
&lt;script type=&quot;math/tex&quot;&gt;ax\equiv 1\ (mod\ m)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;모듈로 합동의 필요충분조건에 의해 아래와 같이 전개된다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ax=1+my&lt;/script&gt;

&lt;p&gt;이 식을 다시쓰면 확장 유클리드 호제법과 같은 식으로 변환할 수 있다.
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{matrix}
ax&amp;=&amp;1+my\\
ax-my&amp;=&amp;1
\end{matrix} %]]&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;그리고 앞에서 전제한 대로 $a$와 $m$이 서로소라면 아래와 같이 변경가능하다.
&lt;script type=&quot;math/tex&quot;&gt;ax-my=gcd(a,m)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;($a$와 $m$의 최대공약수가 1(즉, 서로소)이면 해가 존재하고, 그렇지 않으면 a−1은 존재하지 않는다)&lt;/p&gt;

&lt;p&gt;따라서 $a$와 $m$에 대해서 확장 유클리드 호제법을 이용해서 $x$와 $y$를 구하면 $a$의 곱셈에 대한 역원 $x$를 구할 수 있다.&lt;/p&gt;

&lt;p&gt;이를 이용해서 처음에 구하려던 식을 정리해보자.&lt;/p&gt;

&lt;p&gt;다시 구하려던 식을 정리해보자.
확장 유클리드 호제법을 이용해서 $bx−my=1$ 를 만족하는 $b$의 곱셈에 대한 역원 $x$를 구하면 아래와 같이 바꿀 수 있다.
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(x^{m}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;소수의-modular-연산&quot;&gt;소수의 Modular 연산&lt;/h2&gt;
&lt;p&gt;소수 $17$ 사용하되, 약수인 $3$ 사용&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix} 
3^1\, mod\, 17 \equiv 3
\\3^2\, mod\, 17 \equiv 9
\\3^3\, mod\, 17 \equiv 10
\\3^4\, mod\, 17 \equiv 13
\\3^5\, mod\, 17 \equiv 5
\\3^6\, mod\, 17 \equiv 15
\\3^7\, mod\, 17 \equiv 11
\\3^8\, mod\, 17 \equiv 16
\\3^9\, mod\, 17 \equiv 14
\\3^{10}\, mod\, 17 \equiv 8
\\3^{11}\, mod\, 17 \equiv 7
\\3^{12}\, mod\, 17 \equiv 4
\\3^{13}\, mod\, 17 \equiv 12
\\3^{14}\, mod\, 17 \equiv 2
\\3^{15}\, mod\, 17 \equiv 6
\\3^{16}\, mod\, 17 \equiv 1
\end{matrix}&lt;/script&gt;

&lt;p&gt;연산의 해가 획일적으로 분포
$3$을 generator라고 한다.&lt;/p&gt;

&lt;p&gt;만약 $3$에 어떤 지수인 $x$를 올리면 그 해는 똑같은 확률로 $0$에서 $17$사이의 하나의 정수가 된다.&lt;/p&gt;

&lt;p&gt;단, 반대의 경우는 어렵다.
$mod$ 연산값으로 $12$이 주어지고 지수인 $13$ 찾기 어렵고, 계속 계산하는 방법 밖에 없다.&lt;/p&gt;

&lt;p&gt;이것을 &lt;strong&gt;이산로그 문제&lt;/strong&gt;라고 한다.&lt;/p&gt;

&lt;h1 id=&quot;2-타원곡선-elliptic-curve&quot;&gt;2. 타원곡선 (Elliptic Curve)&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;수학의 역사에서 타원의 둘레를 구하는 적분의 과정에서 도출된 식이라 타원곡선이라 부름&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일반적으로 타원 곡선 방정식은 다음과 같다.
&lt;script type=&quot;math/tex&quot;&gt;y^2+b_1xy+b_2y=x^3+a_1x^2+a_2x+a_3&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;실수상의 타원 곡선은 다음과 같은 특별한 범주에 속하는 타원 곡선을 사용한다.
&lt;script type=&quot;math/tex&quot;&gt;y^2 = x^3 + ax + b&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;우변인 $x^3+ax+b$가 중근을 갖지 않으면, 즉 $4a^3+27b^2=0$이 아니면 타원곡선은 군(Group)을 정의 할 수 있는 대수적 특성을 제공한다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;특징&quot;&gt;특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;$X$축을 중심으로 대칭
    &lt;ul&gt;
      &lt;li&gt;어떤 $x$ 좌표 에 대해서도(정수만 사용), $X$축에 대칭 되는 두 값의 $y$을 가진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;타원곡선에서 직각이 아니도록 그은 모든 직선은 곡선과 항상 3번 교차&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;연산&quot;&gt;연산&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;표현&lt;/th&gt;
      &lt;th&gt;예&lt;/th&gt;
      &lt;th&gt;연산&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;스칼라(scalar)&lt;/td&gt;
      &lt;td&gt;소문자&lt;/td&gt;
      &lt;td&gt;p, n, a, b&lt;/td&gt;
      &lt;td&gt;덧셈, 곱셈, 역원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;점(point)&lt;/td&gt;
      &lt;td&gt;대문자&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;덧셈, 곱셈&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;점point&quot;&gt;점(point)&lt;/h3&gt;
&lt;h4 id=&quot;덧셈법칙&quot;&gt;덧셈법칙&lt;/h4&gt;
&lt;p&gt;(일반적인 좌표의 덧셈이 아니라 타원곡선 위에서의 덧셈 정의)&lt;/p&gt;

&lt;p&gt;곡선위의 점 $P, Q$를 정해 직선으로 연결한 뒤 연장선 상에서 지나는 또 다른 점($-R$)을 찾고 이를 $X$축에 그대로 대칭시키면 곡선 위의 $R$ 좌표가 등장한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P+Q=R&lt;/script&gt;

&lt;p&gt;&amp;lt;/center&amp;gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_addition.png&quot; width=&quot;100%&quot; /&gt;&amp;lt;/center&amp;gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;서로 다른 두점 $P+Q$&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix}\lambda=(y_2-y_1)/(x_2-x_1)\\ x_3=\lambda^2-x_1-x_2\\ y_3=\lambda(x_1-x_3)-y_1 \end{matrix}&lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;같은 점 $P$&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix}\lambda=(3x_1^2+a)/(2y_1)\\ x_3=\lambda^2-x_1-x_2\\ y_3=\lambda(x_1-x_3)-y_1 \end{matrix}&lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;수학적으로 이런 경우 교점이 무한대 있다고 말한다. 그리고 그점을 $O$이라고 정의하고 무한원점(point at infinity)혹은 영점(zero point)라고 부른다. 이것이 바로 이 군의 덧셈에 대한 항등원이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;곱셈법칙&quot;&gt;곱셈법칙&lt;/h4&gt;
&lt;p&gt;타원곡선 덧셉에 대한 정의로(같은 점) 스칼라 곱셈 연산도 표현 가능하다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;kP=P+P+P+...&lt;/script&gt;

&lt;center&gt;&lt;img src=&quot;https://blog.cloudflare.com/content/images/image02.gif&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;P에서 접선을 그려 이를 지나는 또 다른 점을 찾고, 그 대칭인 2P를 찾는다. (P+P=2P)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2P와 P를 교차하는 연장선을 그어서 이를 지나는 또 다른 점을 찾고, 대칭인 3P를 찾는다. (2P+P=3P)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반복&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;덧셈을 할 때 R 의 대칭점을 취해야하는 이유를 이미 추측 할 수 있다. 
그렇지 않으면 동일한 점을 여러 번 더할때 항상 동일한 선과 동일한 세 교차점이 나타난다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;군group&quot;&gt;군(Group)&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;G에 속한 임의의 점 P, Q에 대해서 P + Q 또한 G에 속한다&lt;/li&gt;
  &lt;li&gt;(P + Q) + R = P + (Q+ R)&lt;/li&gt;
  &lt;li&gt;ideal point 0이 있으며 P + 0 = 0 + P = P&lt;/li&gt;
  &lt;li&gt;Q가 P의 역원이면 P + Q = 0&lt;/li&gt;
  &lt;li&gt;P + Q = Q + P&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;trap-door-function&quot;&gt;Trap door Function&lt;/h2&gt;
&lt;p&gt;점 곱셈의 특수성은 $R=k\times P$일 때 $R$과 $P$를 알고 있어도 $k$의 값을 알 수 없다.
뺼셈, 나눗셈이 없으므로 $k=R/P$로 해결할 수 없다.&lt;/p&gt;

&lt;h1 id=&quot;3-ecc-elliptic-curve-cryptography&quot;&gt;3. ECC (Elliptic Curve Cryptography)&lt;/h1&gt;
&lt;p&gt;ECC는 유한 필드에 대한 타원 곡선을 기반으로하는 공개 키 암호화에 대한 접근 방식이다.&lt;/p&gt;

&lt;h2 id=&quot;유한체finite-field-상의-타원곡선elliptic-curve&quot;&gt;유한체(Finite Field) 상의 타원곡선(Elliptic Curve)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;유한체(Finite Field)&lt;/strong&gt;
“집합에 속해 있는 원소의 수가 한정되어 있으며, 덧셈, 곱셈 연산에 대하여 닫혀 있는 집합”을 의미한다.&lt;br /&gt;
“닫혀 있다” 란, 연산의 결과 값도 집합에 속해있다는 것을 의미한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;암호학에서는 그래프와 부딪히는 값(k)의 추측을 더욱 어렵게 하기 위해서 정의역과 치역을 소수 p 체계로 한정한다.&lt;/li&gt;
  &lt;li&gt;또한 암호학에서 필수적이 속성은 그룹에 한정된 수의 포인트가 있다는 것이다(실수에 계산은 반올림 근사로 인해 느리고 부정확함). 암호화 어플리케이션은 빠르고 정확한 산술 연산이 필요하다.&lt;/li&gt;
  &lt;li&gt;유한체는 컴퓨터 계산에 매우 적합하므로 타원곡선에 사용된다. ECC는 p를 가지고 mod 연산을 하는데 이는 유한체이다.&lt;/li&gt;
  &lt;li&gt;참고로, 타원곡선이 암호학에 적합한 이유는, 실수(Real Number)상에서 연산을 하든, 유한체 상에서 연산을 하든, 동일한 수학법칙이 적용되기 때문이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;수식&quot;&gt;수식&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;y^2 \equiv (x^3 + ax + b)\,\, mod\, p&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;집합&quot;&gt;집합&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;E(F_p) = \left\{(x,y)|y^2=x^3+ax+b\right\}\cup \left\{O\right\}&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;특징-1&quot;&gt;특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;방정식에 $mod\ p$하면 $y^2$의 값은 $0$에서 $p-1$이다.&lt;/li&gt;
  &lt;li&gt;정수만 사용하고 있기 떄문에, 사각수(제곱수)는 작은 그룹이며 가능한 점들의 갯수를 $N$이라고 한다. ($N&amp;lt;p$)&lt;/li&gt;
  &lt;li&gt;어떤 $x$ 좌표에 대해서든 두 점을 가지기 때문에, 가능한 $x$ 좌표는 $N/2$개 이다. 즉, 이 타원 곡선은 유한 한 수의 점을 가지고 있다.(정수 계산과 modular 때문)&lt;/li&gt;
  &lt;li&gt;이렇게 바뀐 타원곡선함수는 곡선이 아닌 점들이 뭉쳐 있는 구름 형태이다.&lt;/li&gt;
  &lt;li&gt;암호학에서는 타원곡선의 난이도를 높이기 위해 곡선에 부딪히는 횟수도 소수 단위로 한정한다.&lt;/li&gt;
  &lt;li&gt;또 일정한 한계치 값을 넘치면 새로운 값에서 함수를 시작시키는 등 제약을 도입하게 되는데 이렇게 추가적으로 암호화한 값은 해독하기가 매우 어렵다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;E: y^2=x^3+x \ over\ Z_{23}\ (p=23)&lt;/script&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_finite_filed.png&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;만약 $x=9$라고할 때 $y^2\ mod\ 23=(729+ 9)\ mod\ 23=738\ mod\ 23=2$이다.
이때 만족하는 $y$는 $5*\ mod\ 23=2$이므로 $y$는 $5$가 될 수 있다.&lt;/p&gt;

&lt;p&gt;이때 갈루아 필드의 $p$가 조금만 더 커지면 우리는 $y$를 쉽게 찾을 수 없게 된다.
따라서 이를 통해 암호학에 적용 할 수 있게 된다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://blog.cloudflare.com/content/images/image01.gif&quot; width=&quot;70%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_torus.png&quot; width=&quot;70%&quot; /&gt;&lt;/center&gt;

&lt;h1 id=&quot;4-ecdsa-elliptic-curve-digital-signature-algorithm&quot;&gt;4. ECDSA (Elliptic Curve Digital Signature Algorithm)&lt;/h1&gt;
&lt;p&gt;비트코인 등 블록체인 기반 기술에서는 키 쌍의 생성에 ECDSA를 사용하여 키 길이 256 비트 이상을 사용한다.
미국국립표준기술원(NIST)에서 개발한 secp256k1 표준에 정의된 타원 곡선을 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;y^2\ mod\ p=(x^3+7)\ mod\ p&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;p=2^{256}-2^{32}-2^9-2^8-2^7-2^6-2^4-1&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;domain-parameterssecp256k1&quot;&gt;Domain Parameters(secp256k1)&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;값&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;p&lt;/td&gt;
      &lt;td&gt;FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFC2F&lt;/td&gt;
      &lt;td&gt;modulo prime number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000=0&lt;/td&gt;
      &lt;td&gt;방정식 계수&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000007=7&lt;/td&gt;
      &lt;td&gt;방정식 계수&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;02 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 (compressed form)&lt;/td&gt;
      &lt;td&gt;Base Point/Generator Point&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt;FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B BFD25E8C D0364141&lt;/td&gt;
      &lt;td&gt;order of point G(G를 n번 더하면 무한원점이 되는 값)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;h&lt;/td&gt;
      &lt;td&gt;01&lt;/td&gt;
      &lt;td&gt;cofactor&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;총 점의 수 N값은 Schoof’s algorithm을 통해 구한다(Hasse’s theorem on elliptic curves과 중국인의 나머지정리를 기반으로 만들어짐).&lt;/li&gt;
  &lt;li&gt;전체 집합 원소의 수 N에서 부분집합의 수인 n을 결정한다(n은 소수이면서 N의 약수).&lt;/li&gt;
  &lt;li&gt;보조 인자(cofactor)인 $h=N/n$ 를 구한다.&lt;/li&gt;
  &lt;li&gt;타원곡선 위 임의의 점 $P$를 골라서 기준점 $G=hP$를 구한다.&lt;/li&gt;
  &lt;li&gt;$G$가 $0$이면 다른 $P$를 골라서 반복한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;기본-원리&quot;&gt;기본 원리&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;타원곡선에서 임의의 점(&lt;strong&gt;Point of Origin&lt;/strong&gt;)을 선택한다.&lt;/li&gt;
  &lt;li&gt;임의의 숫자(&lt;strong&gt;Private Key&lt;/strong&gt;)를 생성한다.&lt;/li&gt;
  &lt;li&gt;원점과 임의의 숫자를 사용하는 마법의 수학 방정식을 쓰면 타원곡선 위에서 두번째 점(&lt;strong&gt;Public Key&lt;/strong&gt;)이 된다.&lt;/li&gt;
  &lt;li&gt;파일의 &lt;strong&gt;Hash&lt;/strong&gt;와 함께 이 &lt;strong&gt;Private Key&lt;/strong&gt;를 마법의 방정식에 넣으면 &lt;strong&gt;서명&lt;/strong&gt;이 부여된다. 서명은 &lt;strong&gt;R&lt;/strong&gt;과 &lt;strong&gt;S&lt;/strong&gt; 두 부분으로 나뉜다.&lt;/li&gt;
  &lt;li&gt;서명이 올바른지 확인하려면 &lt;strong&gt;Public Key&lt;/strong&gt;,&lt;strong&gt;S&lt;/strong&gt;,&lt;strong&gt;R&lt;/strong&gt;를 또다른 마법의 방정식에 넣으면 &lt;strong&gt;R&lt;/strong&gt;이 나오는 것을 확인한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-private-key-d&quot;&gt;(1) Private Key (d)&lt;/h2&gt;
&lt;p&gt;RSA와 달리 Private Key를 먼저 정한다.
난수생성기를 사용하여 ${1, …, p-1}$ 범위 중 랜덤 integer $d$를 선택한다. (20 bytes=160 bit)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;$y^2=x^3-2x+15$
$G=[4,5]$
$d_A=3$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-public-key-q&quot;&gt;(2) Public Key (Q)&lt;/h2&gt;
&lt;p&gt;타원곡선의 publlic key는 generation point인 시작점 $G$가 private key에 해당하는 숫자, $d$만큼 타원곡선 상의 덧셈 연산을 실행해 곡선에 안착한 좌표, $Q$에 해당한다&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Q(x,y)=d\times G(x_0, y_0)&lt;/script&gt;

&lt;p&gt;$G$는 이미 알려져있고, $Q$는 Public Key 생성 후 공개되지만, 이 두 값으로 $d$를 유추해 내기 굉장히 어렵다(ECDLP,Elliptic Curve Discrete Logarithm Problem).
직접 대입 방식 말고는 아직까지 해답이 없다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;$Q_A=d_A&lt;em&gt;G=3&lt;/em&gt;[4,5]=[13,22]$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-sign&quot;&gt;(3) Sign&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;파일의 해시(파일 고유 번호)와 함께 개인키를 방정식에 넣으면 서명됨&lt;/li&gt;
  &lt;li&gt;서명은 각각 20바이트의 $r$과 $s$ 두값으로 나뉨 $(r,s)$&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;r&quot;&gt;$r$&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;먼저 임의의 값인 ‘$k$(20 bytes)’를 생성하고 점의 곱셈을 사용하여 $P=k\times G$를 계산한다.&lt;/li&gt;
  &lt;li&gt;점 $P$의 $x$값이 ‘$r$’을 나타낸다(20 bytes).&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;s&quot;&gt;$s$&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;$s$를 계산하려면 메시지의 SHA1 해시를 만들어야한다. 이 값은 매우 큰 정수로 간주되는 20 bytes 값을 제공하며 ‘$z$’라고 한다.&lt;/li&gt;
  &lt;li&gt;다음 등식을 사용하여 $s$ 를 계산할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;s=k^{-1}(z+dA\times r)\ mod\ P&lt;/script&gt;

&lt;h2 id=&quot;4-검증&quot;&gt;(4) 검증&lt;/h2&gt;
&lt;p&gt;public key만 있으면 가능하다.
아래 방정식을 통해 점 P를 계산한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P=s^{-1}\times z \times G+s^{-1}\times r \times Qa&lt;/script&gt;

&lt;p&gt;점 $P$의 $X$좌표가 $r$과 같으면 서명이 유효함을 의미하고 그렇지 않으면 유효하지 않다.&lt;/p&gt;

&lt;h3 id=&quot;검증식-증명&quot;&gt;검증식 증명&lt;/h3&gt;
&lt;p&gt;검증식이 서명식으로 전개되는 것을 증명한다.&lt;/p&gt;

&lt;p&gt;$P=s^{-1}\times z \times G+s^{-1}\times r \times Qa$
$(Qa=dA\times G)$
$P=s^{-1}\times z \times G+s^{-1}\times r \times dA\times G$
$k\times G=s^{-1}(z+dA\times r)\times G$
$k=s^{-1}(z+dA\times r)$
$s=k^{-1}(z+dA\times r)$&lt;/p&gt;

&lt;h3 id=&quot;5-public-key-recover-ethereum&quot;&gt;(5) Public Key Recover (Ethereum)&lt;/h3&gt;
&lt;p&gt;For $j$ from $0$ to $h$ do the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Let $x = r + jn$.&lt;/li&gt;
  &lt;li&gt;Convert the integer $x$ to an octet string $X$ of length $mlen$ using the conversion routine specified in Section 2.3.7, where $mlen = \lceil(log_{2} p)/8e\rceil$ or $mlen = \lceil m/8e\rceil$.&lt;/li&gt;
  &lt;li&gt;Convert the octet string 0216kX to an elliptic curve point R using the conversion routine specified in Section 2.3.4. If this conversion routine outputs “invalid”, then do another iteration of Step 1.&lt;/li&gt;
  &lt;li&gt;If $nR \ne O$, then do another iteration of Step 1.&lt;/li&gt;
  &lt;li&gt;Compute e from M using Steps 2 and 3 of ECDSA signature verification.&lt;/li&gt;
  &lt;li&gt;For k from 1 to 2 do the following.
    &lt;ol&gt;
      &lt;li&gt;Compute a candidate public key as:&lt;/li&gt;
    &lt;/ol&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;Q=r^{-1}(sR-eG)&lt;/script&gt;

    &lt;ol&gt;
      &lt;li&gt;Verify that $Q$ is the authentic public key. (For example, verify the signature of a certification authority in a certificate which has been truncated by the omission of $Q$ from the certificate.) If $Q$ is authenticated, stop and output $Q$.&lt;/li&gt;
      &lt;li&gt;Change $R$ to $-R$.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;go-ethereumcryptosecp256k1secp256go&quot;&gt;go-ethereum/crypto/secp256k1/secp256.go&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// RecoverPubkey returns the public key of the signer.
// msg must be the 32-byte hash of the message to be signed.
// sig must be a 65-byte compact ECDSA signature containing the
// recovery id as the last element.
func RecoverPubkey(msg []byte, sig []byte) ([]byte, error) {
	if len(msg) != 32 {
		return nil, ErrInvalidMsgLen
	}
	if err := checkSignature(sig); err != nil {
		return nil, err
	}

	var (
		pubkey  = make([]byte, 65)
		sigdata = (* /*line :103:15*/_Ctype_uchar /*line :103:22*/)(unsafe.Pointer(&amp;amp;sig[0]))
		msgdata = (* /*line :104:15*/_Ctype_uchar /*line :104:22*/)(unsafe.Pointer(&amp;amp;msg[0]))
	)
	if func() _Ctype_int{ _cgo0 := /*line :106:35*/context; var _cgo1 *_Ctype_uchar = /*line :106:44*/(*_Ctype_uchar)(unsafe.Pointer(&amp;amp;pubkey[0])); var _cgo2 *_Ctype_uchar = /*line :106:84*/sigdata; var _cgo3 *_Ctype_uchar = /*line :106:93*/msgdata; _cgoCheckPointer(_cgo0); return _Cfunc_secp256k1_ext_ecdsa_recover(_cgo0, _cgo1, _cgo2, _cgo3); }() == 0 {
		return nil, ErrRecoverFailed
	}
	return pubkey, nil
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;보안&quot;&gt;보안&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;$s$를 계산하려면 ‘$k$’(난수)와 ‘$dA$’(개인 키)가 필요하지만 서명을 검증하기 위해서는 $r$과 $Qa$(공개 키)만 있으면 된다.&lt;/li&gt;
  &lt;li&gt;$r=k&lt;em&gt;G$ 와 $Qa=dA&lt;/em&gt;G$ 그리고 ECDSA 포인트 곱셈에서 트랩 도어 기능으로 인해, $Qa$와 $R$을 알지 못하여 $dA$ 또는 $k$를 계산할 수 없으므로 보안적으로 안전하다.&lt;/li&gt;
  &lt;li&gt;개인 키를 찾을 수있는 방법이 없으며 개인 키를 모른 채 서명을 위조 할 방법이 없다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://noasax.github.io/problem%20solving/2017/09/24/Division-in-modular.html&quot;&gt;https://noasax.github.io/problem%20solving/2017/09/24/Division-in-modular.html&lt;/a&gt;
&lt;a href=&quot;https://www.weeklyps.com/entry/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0?category=795989&quot;&gt;https://www.weeklyps.com/entry/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0?category=795989&lt;/a&gt;
&lt;a href=&quot;https://www.instructables.com/id/Understanding-how-ECDSA-protects-your-data/&quot;&gt;https://www.instructables.com/id/Understanding-how-ECDSA-protects-your-data/&lt;/a&gt;
&lt;a href=&quot;https://www.mk.co.kr/news/economy/view/2019/03/168095/&quot;&gt;https://www.mk.co.kr/news/economy/view/2019/03/168095/&lt;/a&gt;
&lt;a href=&quot;http://slidesplayer.org/slide/11329530/&quot;&gt;http://slidesplayer.org/slide/11329530/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/math/2019/06/10/understanding-ECC-ECDSA/</link>
        <guid isPermaLink="true">http://localhost:4000/math/2019/06/10/understanding-ECC-ECDSA/</guid>
        
        <category>math</category>
        
        <category>cryptography</category>
        
        <category>ECC</category>
        
        <category>ECDSA</category>
        
        
        <category>math</category>
        
      </item>
    
      <item>
        <title>Rust 설치, Hello World</title>
        <description>&lt;h1 id=&quot;1-rustup-설치&quot;&gt;1. Rustup 설치&lt;/h1&gt;
&lt;p&gt;rustup: a command line tool for managing Rust versions and associated tools
&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(macOS)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;11-error&quot;&gt;1.1. Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) Proceed with installation (default)
2) Customize installation
3) Cancel installation
&amp;gt;1

error: could not write rcfile file: '/Users/somi.han/.profile'
info: caused by: Permission denied (os error 13)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;12-solution&quot;&gt;1.2. Solution&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra&quot;&gt;https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–no-modify-path    Don’t configure the PATH environment variable&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Rust!

This will download and install the official compiler for the Rust programming
language, and its package manager, Cargo.

It will add the cargo, rustc, rustup and other commands to Cargo's bin
directory, located at:

  /Users/somi.han/.cargo/bin

This path needs to be in your PATH environment variable, but will not be added
automatically.

You can uninstall at any time with rustup self uninstall and these changes will
be reverted.

....

Rust is installed now. Great!

To get started you need Cargo's bin directory ($HOME/.cargo/bin) in your PATH
environment variable.

To configure your current shell run source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;터미널을 다시 시작하는 대신 Rust를 바로 사용하려면 쉘에서 다음 명령을 실행하여 시스템 PATH에 수동으로 Rust를 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-hello-world&quot;&gt;2. Hello World&lt;/h1&gt;
&lt;h2 id=&quot;21-프로젝트-생성&quot;&gt;2.1. 프로젝트 생성&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo new (프로젝트 이름) --bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;프로젝트 이름으로 된 폴더가 생기며, 안에 Rust의 Hello, world를 출력하는 코드파일과 cargo 프로젝트 속성 파일이 생김&lt;/p&gt;
&lt;h2 id=&quot;22-컴파일&quot;&gt;2.2. 컴파일&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-rust-nightly-install&quot;&gt;3. Rust nightly install&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;31-toolchain-설치&quot;&gt;3.1. toolchain 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup toolchain install nightly
info: syncing channel updates for 'nightly-x86_64-apple-darwin'
376.4 KiB / 376.4 KiB (100 %) 188.2 KiB/s in  2s ETA:  0s
info: latest update on 2019-06-07, rust version 1.37.0-nightly (5eeb567a2 2019-06-06)
info: downloading component 'rustc'
 81.9 MiB /  81.9 MiB (100 %)  11.2 MiB/s in  8s ETA:  0s
info: downloading component 'rust-std'
 56.1 MiB /  56.1 MiB (100 %)   9.8 MiB/s in  5s ETA:  0s
info: downloading component 'cargo'
info: downloading component 'rust-docs'
 11.2 MiB /  11.2 MiB (100 %)   9.5 MiB/s in  1s ETA:  0s
info: installing component 'rustc'
 81.9 MiB /  81.9 MiB (100 %)  12.5 MiB/s in  6s ETA:  0s
info: installing component 'rust-std'
 56.1 MiB /  56.1 MiB (100 %)  14.7 MiB/s in  3s ETA:  0s
info: installing component 'cargo'
info: installing component 'rust-docs'
 11.2 MiB /  11.2 MiB (100 %)   2.1 MiB/s in  5s ETA:  0s

  nightly-x86_64-apple-darwin installed - rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;32-테스트-실행&quot;&gt;3.2. 테스트 실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup run nightly rustc --version
rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;33-nightly로-디폴트-변경&quot;&gt;3.3. nightly로 디폴트 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup default nightly
info: using existing install for 'nightly-x86_64-apple-darwin'
info: default toolchain set to 'nightly-x86_64-apple-darwin'

  nightly-x86_64-apple-darwin unchanged - rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/&lt;/a&gt;
&lt;a href=&quot;https://doc.rust-lang.org/book/title-page.html&quot;&gt;https://doc.rust-lang.org/book/title-page.html&lt;/a&gt;
&lt;a href=&quot;http://sarojaba.github.io/rust-doc-korean/doc/tutorial.html&quot;&gt;http://sarojaba.github.io/rust-doc-korean/doc/tutorial.html&lt;/a&gt;
&lt;a href=&quot;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/rust/2019/06/05/rust-install/</link>
        <guid isPermaLink="true">http://localhost:4000/rust/2019/06/05/rust-install/</guid>
        
        <category>Rust</category>
        
        
        <category>Rust</category>
        
      </item>
    
      <item>
        <title>mysql 명령어</title>
        <description>&lt;h1 id=&quot;login&quot;&gt;Login&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql -u root -p
Enter password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;database-보기&quot;&gt;Database 보기&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| test               |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;user-추가&quot;&gt;User 추가&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; create user '사용자'@'localhost' identified by '비밀번호';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DB 권한 부여하기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; grant all privileges on *.* to '사용자'@'localhost';
MariaDB [(none)]&amp;gt; grant all privileges on DB이름.* to '사용자'@'localhost';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;모든 DB에 접근 가능하도록 하려면 &lt;em&gt;.&lt;/em&gt;, 특정 DB에만 접근 가능하도록 하려면 DB이름으로 지정해주면 된다.&lt;/p&gt;

&lt;h1 id=&quot;사용자-계정-삭제&quot;&gt;사용자 계정 삭제&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; drop user '사용자'@'localhost';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;외부에서-접속-가능한-사용자&quot;&gt;외부에서 접속 가능한 사용자&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; create user '사용자'@'%' identified by '비밀번호'; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;’%’ 의 의미는 외부에서의 접근을 허용&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql/2019/06/04/mysql-command/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql/2019/06/04/mysql-command/</guid>
        
        <category>MySQL</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>macOS 에서 mysql 실행 시 Can't read dir of '/usr/local/etc/my.cnf.d' 해결</title>
        <description>&lt;h2 id=&quot;error&quot;&gt;Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql.server start

/usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
Starting MariaDB
./usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
/usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
190604 10:28:40 mysqld_safe Logging to '/usr/local/var/mysql/macbook-2.local.err'.
190604 10:28:40 mysqld_safe Starting mysqld daemon with databases from /usr/local/var/mysql
/usr/local/bin/mysql.server: line 264: kill: (5900) - No such process
 ERROR!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;✗ mkdir /usr/local/etc/my.cnf.d

✗ mysql.server start

Starting MariaDB
.190604 10:29:02 mysqld_safe Logging to '/usr/local/var/mysql/macbook-2.local.err'.
190604 10:29:02 mysqld_safe Starting mysqld daemon with databases from /usr/local/var/mysql
 SUCCESS!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/issues/31760&quot;&gt;https://github.com/Homebrew/legacy-homebrew/issues/31760&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql/2019/06/04/mac-mysql-can't-read-dir-of-usr-local-etc-my.cnf.d/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql/2019/06/04/mac-mysql-can't-read-dir-of-usr-local-etc-my.cnf.d/</guid>
        
        <category>mac</category>
        
        <category>MySQL</category>
        
        <category>error</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>Python Anaconda environment.yml error 해결</title>
        <description>&lt;h2 id=&quot;error-1&quot;&gt;Error 1&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ conda env create -f environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Preparing transaction: done
Verifying transaction: done
Executing transaction: done
Invalid requirement: 'libcxxabi=4.0.1'
= is not a valid operator. Did you mean == ?

CondaValueError: pip returned an error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;원래는 이 명령을 통해 jekyll이 내장하고 있는 서버를 동작시키고 이를 로컬 PC(localhost:4000)에서 확인 가능한데, 에러&lt;/p&gt;

&lt;h2 id=&quot;처리&quot;&gt;처리&lt;/h2&gt;
&lt;p&gt;프로젝트 폴더 environment.yml 에서 pip 밑에&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx=4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi=4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran=3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;를 아래로 수정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx==4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi==4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran==3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;error-2&quot;&gt;Error 2&lt;/h2&gt;
&lt;p&gt;위 내용대로 수정 후 업데이트&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ conda env update -f environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Could not find a version that satisfies the requirement libcxx==4.0.1 (from -r /Volumes/data_mb2/project/Server/condaenv.m4ug0hfc.requirements.txt (line 7)) (from versions: )
No matching distribution found for libcxx==4.0.1 (from -r /Volumes/data_mb2/project/Server/condaenv.m4ug0hfc.requirements.txt (line 7))

CondaValueError: pip returned an error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;프로젝트 폴더 environment.yml 에서 pip 밑에&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx=4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi=4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran=3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;모두 삭제&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ContinuumIO/anaconda-issues/issues/10183&quot;&gt;https://github.com/ContinuumIO/anaconda-issues/issues/10183&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/python/2019/06/03/python-anaconda-environment-error/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/06/03/python-anaconda-environment-error/</guid>
        
        <category>Python</category>
        
        <category>Anaconda</category>
        
        <category>error</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Jekyll Github page 오류 해결</title>
        <description>&lt;h2 id=&quot;error&quot;&gt;Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;원래는 이 명령을 통해 jekyll이 내장하고 있는 서버를 동작시키고 이를 로컬 PC(localhost:4000)에서 확인 가능한데, 에러 발생&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:319:in `check_for_activated_spec!': You have already activated addressable 2.6.0, but your Gemfile requires addressable 2.5.2. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:31:in `block in setup'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/spec_set.rb:148:in `each'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/spec_set.rb:148:in `each'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:26:in `map'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:26:in `setup'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler.rb:107:in `setup'
from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/lib/jekyll/plugin_manager.rb:50:in `require_from_bundler'
from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/exe/jekyll:11:in `&amp;lt;top (required)&amp;gt;'
from /usr/local/bin/jekyll:22:in `load'
from /usr/local/bin/jekyll:22:in `&amp;lt;main&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;번들러는 Ruby에서 필요한 정확한 gem과 버전을 추적하고 설치하여 루비 프로젝트를 위한 일관된 환경을 제공한다.
번들러는 의존성 지옥에서 벗어나게 하고, 필요한 gem이 개발, 스테이징, 프로덕션에 있는지 확인해준다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: /Users/somi.han/Dropbox/mioscode.github.io/_config.yml
Remote Theme: Using theme mmistakes/minimal-mistakes
Source: /Users/somi.han/Dropbox/mioscode.github.io
Destination: /Users/somi.han/Dropbox/mioscode.github.io/_site
Incremental build: disabled. Enable with --incremental
Generating...
Remote Theme: Using theme mmistakes/minimal-mistakes
Jekyll Feed: Generating feed for posts
GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.
done in 4.287 seconds.
Auto-regeneration: enabled for '/Users/somi.han/Dropbox/mioscode.github.io'
Server address: http://127.0.0.1:4000
Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://aisiunme.github.io/jekyll/2018/07/25/troubleshooting-in-jekyll-serve/&quot;&gt;https://aisiunme.github.io/jekyll/2018/07/25/troubleshooting-in-jekyll-serve/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/05/23/jekyll-github-page-error/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/05/23/jekyll-github-page-error/</guid>
        
        <category>Github Page</category>
        
        <category>error</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>(mac) 단축키</title>
        <description>&lt;h2 id=&quot;chrome&quot;&gt;Chrome&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 닫은창 복구&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;~&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;아래로 스크롤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;Space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;위로 스크롤&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;작업창-컨트롤&quot;&gt;작업창 컨트롤&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+(&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;)+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;작업창 전환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+(&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;)+&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;특정 프로그램 내 작업창 전환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;~&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;작업창 하나 외 숨기기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;현재 작업창 숨기기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;F3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;모든창 숨기기&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;mission-control&quot;&gt;Mission Control&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;왼쪽 또는 오른쪽으로 한 작업공간 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;,&lt;kbd&gt;2&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;첫번째, 두번째 작업공간 이동&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;전체&quot;&gt;전체&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;줄 내 이동 (맨앞, 맨뒤)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;finder&quot;&gt;Finder&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌫ Delete&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;, &lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;V&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;잘라내기, 붙여넣기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;/&lt;kbd&gt;2&lt;/kbd&gt;/&lt;kbd&gt;3&lt;/kbd&gt;/&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;보기 모드&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;스크린샷&quot;&gt;스크린샷&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;+&lt;kbd&gt;space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;촬영 대상이 하늘색으로 강조&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;스크린샷 클립보드에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일, 화면&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;클립보드, 화면&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일, 영역 선택&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;클립보드, 영역 선택&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 22 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mac/2019/05/22/mac-shortcuts/</link>
        <guid isPermaLink="true">http://localhost:4000/mac/2019/05/22/mac-shortcuts/</guid>
        
        <category>mac</category>
        
        <category>shorcuts</category>
        
        
        <category>mac</category>
        
      </item>
    
      <item>
        <title>Eclipse에 ERMaster plugin 설치</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Eclipse 실행&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Install New Software&lt;/strong&gt; 선택&lt;/li&gt;
  &lt;li&gt;URL: http://ermaster.sourceforge.net/update-site/&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31693697/cant-install-ermaster-plugin-in-eclipse&quot;&gt;https://stackoverflow.com/questions/31693697/cant-install-ermaster-plugin-in-eclipse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ermaster/2019/04/15/ERMaster-plugin-in-Eclipse/</link>
        <guid isPermaLink="true">http://localhost:4000/ermaster/2019/04/15/ERMaster-plugin-in-Eclipse/</guid>
        
        <category>Eclipse</category>
        
        <category>ERMaster</category>
        
        
        <category>ERMaster</category>
        
      </item>
    
      <item>
        <title>(macOS) Go-Vue.js 2-Quasar 개발 셋팅</title>
        <description>&lt;h1 id=&quot;setting&quot;&gt;Setting&lt;/h1&gt;
&lt;h2 id=&quot;1-homebrew&quot;&gt;1. Homebrew&lt;/h2&gt;
&lt;p&gt;update&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;xcode command line tool 없으면 설치&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-nodejsnpm-최신-버전-설치&quot;&gt;2. node.js/npm 최신 버전 설치&lt;/h2&gt;
&lt;p&gt;nodejs.org
설치 확인&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm -v
6.4.1
$ node -v
v10.15.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-golang-최신-버전-설치&quot;&gt;3. golang 최신 버전 설치&lt;/h2&gt;
&lt;p&gt;golang.org&lt;/p&gt;

&lt;h2 id=&quot;4-github-desktop-설치&quot;&gt;4. GitHub Desktop 설치&lt;/h2&gt;
&lt;p&gt;github.com&lt;/p&gt;

&lt;h2 id=&quot;5-mariadb-설치&quot;&gt;5. mariaDB 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install mariadb 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6-quasar-설치&quot;&gt;6. Quasar 설치&lt;/h2&gt;
&lt;p&gt;vue-cli 설치&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g vue-cli # or @vue/cli @vue/cli-init // recommended
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;61-quasar-cli-설치&quot;&gt;6.1. quasar-cli 설치&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm uninstall -g quasar-cli
removed 1111 packages in 9.432s
$ npm i -g quasar-cli@0.6.5
$ quasar
...
Commands
init          Create a project folder
dev           Start a dev server for your App
build         Build your app for production
clean         Clean all build artifacts
new           Quickly scaffold page/layout/component/... vue file
mode          Add/remove Quasar Modes for your App
info          Display info about your machine and your App
serve         Create an ad-hoc (production-ready) server on App distributables
help          Displays this message
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;62-cordova-설치&quot;&gt;6.2. Cordova 설치&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g cordova
/usr/local/bin/cordova -&amp;gt; /usr/local/lib/node_modules/cordova/bin/cordova
+ cordova@9.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;quasar-cli가-전역-적으로-설치되면-이제-새로운-프로젝트를-생성-가능&quot;&gt;Quasar CLI가 전역 적으로 설치되면 이제 새로운 프로젝트를 생성 가능&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quasar init &amp;lt;folder-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;개발-시작&quot;&gt;개발 시작&lt;/h1&gt;

&lt;h2 id=&quot;developing-a-spa&quot;&gt;Developing a SPA&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quasar dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;or&quot;&gt;…or&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quasar dev -m spa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;developing-for-ssr&quot;&gt;Developing for SSR&lt;/h2&gt;
&lt;p&gt;$ quasar dev -m ssr&lt;/p&gt;

&lt;h2 id=&quot;developing-a-pwa&quot;&gt;Developing a PWA&lt;/h2&gt;
&lt;p&gt;$ quasar dev -m pwa&lt;/p&gt;

&lt;h2 id=&quot;developing-a-mobile-app-through-cordova&quot;&gt;Developing a Mobile App (through Cordova)&lt;/h2&gt;
&lt;p&gt;$ quasar dev -m cordova -T [android|ios]&lt;/p&gt;

&lt;h2 id=&quot;developing-an-electron-app&quot;&gt;Developing an Electron App&lt;/h2&gt;
&lt;p&gt;$ quasar dev -m electron&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
# DB Start, Create
## Conf 폴더 생성
## Start 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;$ mysql.service start&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## Create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;$ mysql -uroot
[mysql]
CREATE DATABASE db_name;
CREATE USER ‘user_name’ IDENTIFIED BY ‘user_name’;
CREATE USER ‘user_name’@’%’ IDENTIFIED BY ‘user_name’;
CREATE USER ‘user_name’@’localhost’ IDENTIFIED BY ‘user_name’;
CREATE USER ‘user_name’@’127.0.0.0’ IDENTIFIED BY ‘user_name’;&lt;/p&gt;

&lt;p&gt;GRANT ALL PRIVILEGES ON db_name.* TO user_name;
GRANT ALL PRIVILEGES ON db_name.* TO user_name@’%’;
GRANT ALL PRIVILEGES ON db_name.* TO user_name@’127.0.0.0’ with grant option;
GRANT ALL PRIVILEGES ON db_name.* TO user_name@’localhost’ with grant option;&lt;/p&gt;

&lt;p&gt;SET SESSION FOREIGN_KEY_CHECKS=0;&lt;/p&gt;

&lt;p&gt;/* Drop Tables */&lt;/p&gt;

&lt;p&gt;DROP TABLE IF EXISTS USER;&lt;/p&gt;

&lt;p&gt;/* Create Tables */&lt;/p&gt;

&lt;p&gt;CREATE TABLE USER
(
USER_IDX int NOT NULL AUTO_INCREMENT,
LOGIN_ID varchar(100) COMMENT ‘email’,
PASSWORD text,
NAME varchar(100),
EMAIL varchar(100),
LOGIN_TIME datetime COMMENT ‘last login datetime’,
UPDATE_TIME datetime COMMENT ‘last updated datetime’,
CREATE_TIME datetime NOT NULL COMMENT ‘created datetime’,
PRIMARY KEY (USER_IDX)
);&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
## (macOS) golang backend service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd /…/ProjectName
export GOROOT=”/usr/local/go”
export GOPATH=”/…/ProjectName” // Cloned Location
go get github.com/dgrijalva/jwt-go
go get github.com/jmoiron/sqlx
go get github.com/go-sql-driver/mysql
go get github.com/labstack/echo
go get github.com/sirupsen/logrus
//go get github.com/spf13/viper
go build server.go
./server&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
## (macOS) vue.js 2 frontend service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd /…/ProjectName/web
npm install
npm run dev&lt;/p&gt;

&lt;p&gt;chrome: http://localhost:8890/#/
```&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://flutter.dev/docs/get-started/install/macos&quot;&gt;https://flutter.dev/docs/get-started/install/macos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 11 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/quasar/2019/04/11/Go-Vue.js-Quasar-dev-setting/</link>
        <guid isPermaLink="true">http://localhost:4000/quasar/2019/04/11/Go-Vue.js-Quasar-dev-setting/</guid>
        
        <category>Go</category>
        
        <category>Vue.js</category>
        
        <category>Quasar</category>
        
        
        <category>Quasar</category>
        
      </item>
    
      <item>
        <title>(macOS) Flutter 설치하기</title>
        <description>&lt;h1 id=&quot;minimum-requirements&quot;&gt;Minimum requirements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Operating Systems: macOS (64-bit)&lt;/li&gt;
  &lt;li&gt;Disk Space: 700 MB (does not include disk space for IDE/tools).&lt;/li&gt;
  &lt;li&gt;Tools: Flutter depends on these command-line tools being available in your environment.
    &lt;ul&gt;
      &lt;li&gt;bash&lt;/li&gt;
      &lt;li&gt;curl&lt;/li&gt;
      &lt;li&gt;git 2.x&lt;/li&gt;
      &lt;li&gt;mkdir&lt;/li&gt;
      &lt;li&gt;rm&lt;/li&gt;
      &lt;li&gt;unzip&lt;/li&gt;
      &lt;li&gt;which&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;download&quot;&gt;Download&lt;/h1&gt;
&lt;h2 id=&quot;최신-stable-release-받기&quot;&gt;최신 stable release 받기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_v1.2.1-stable.zip&quot;&gt;flutter_macos_v1.2.1-stable.zip&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;원하는-위치로-이동해서-파일-실행&quot;&gt;원하는 위치로 이동해서 파일 실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~/development
$ unzip ~/Downloads/flutter_macos_v1.2.1-stable.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;path-지정&quot;&gt;Path 지정&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ export PATH=&quot;$PATH:`pwd`/flutter/bin&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;flutter-doctor-실행&quot;&gt;Flutter doctor 실행&lt;/h1&gt;
&lt;p&gt;셋업 완료하기 위해 설치해야하는 depedencies 있는지 확인&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flutter doctor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 명령어 실행하면 environment 검사 후 터미널에 리포트를 보여준다.
Dart SDK는 Flutter와 번들로 제공되므로 설치할 필요 없다.
리포트에서 설치할 다른 소프트웨어 있는지 확인&lt;/p&gt;

&lt;p&gt;아래는 내 리포트&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, v1.2.1, on Mac OS X 10.14 18A391, locale en-KR)
[!] Android toolchain - develop for Android devices (Android SDK version 28.0.3)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses
[✗] iOS toolchain - develop for iOS devices
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.
        Download at: https://developer.apple.com/xcode/download/
        Or install Xcode via the App Store.
        Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
    ✗ libimobiledevice and ideviceinstaller are not installed. To install with Brew, run:
        brew update
        brew install --HEAD usbmuxd
        brew link usbmuxd
        brew install --HEAD libimobiledevice
        brew install ideviceinstaller
    ✗ ios-deploy not installed. To install:
        brew install ios-deploy
    ✗ CocoaPods not installed.
        CocoaPods is used to retrieve the iOS platform side's plugin code that responds to your
        plugin usage on the Dart side.
        Without resolving iOS dependencies with CocoaPods, plugins will not work on iOS.
        For more info, see https://flutter.io/platform-plugins
        To install:
        brew install cocoapods
        pod setup
[!] Android Studio (version 3.2)
    ✗ Flutter plugin not installed; this adds Flutter specific functionality.
    ✗ Dart plugin not installed; this adds Dart specific functionality.
[!] Connected device
    ! No devices available
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;리포트에서 말하는대로 순서대로 설치
먼저 안드로이드 라이센스&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flutter doctor --android-licenses
Warning: File /Users/somi.han/.android/repositories.cfg could not be loaded.    
5 of 6 SDK package licenses not accepted. 100% Computing updates...             
Review licenses that have not been accepted (y/N)? y
....
Accept? (y/N): y
.....
Accept? (y/N): y
.....
Accept? (y/N): y
....
Accept? (y/N): y
...
Accept? (y/N): y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew update
$ brew install --HEAD usbmuxd
$ brew link usbmuxd
$ brew install --HEAD libimobiledevice
$ brew install ideviceinstaller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install ios-deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install cocoapods
$ pod setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;안드로이드 스튜디오에서 Dart, Flutter repository검색해서 설치
(Flutter 설치하면 Dart 함께 설치됨)&lt;/p&gt;

&lt;h1 id=&quot;update-path&quot;&gt;Update Path&lt;/h1&gt;

&lt;h1 id=&quot;platform-setup&quot;&gt;Platform setup&lt;/h1&gt;
&lt;h2 id=&quot;ios&quot;&gt;iOS&lt;/h2&gt;
&lt;h3 id=&quot;install-xcode&quot;&gt;Install Xcode&lt;/h3&gt;
&lt;p&gt;Xcode 9.0 이후 버전 필요
설치 (web or Mac App Store)&lt;/p&gt;

&lt;h3 id=&quot;set-up-the-ios-simulator&quot;&gt;Set up the iOS simulator&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;시뮬레이터 찾아서 실행하거나, 아래 커맨드 사용
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ open -a Simulator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;시뮬레이터 메뉴 Hadrware &amp;gt; Device 에서 64-bit 디바이스(iPhone 5s 이후) 사용하는지 확인&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;create-and-run-a-simple-flutter-app&quot;&gt;Create and run a simple Flutter app&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;앱 생성
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flutter create my_app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;스타터 앱이 포함된 my_app 디렉토리 만들어진다. 디렉토리 안으로 이동
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd my_app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;시뮬레이터에서 앱 실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flutter run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;./assets/image/flutter_demo_app.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;ios-devices로-배포&quot;&gt;iOS devices로 배포&lt;/h3&gt;

&lt;h2 id=&quot;android&quot;&gt;Android&lt;/h2&gt;
&lt;h3 id=&quot;install-android-studio&quot;&gt;Install Android Studio&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Android Studio 다운로드 및 설치&lt;/li&gt;
  &lt;li&gt;Android Studio를 시작하고 ‘Android Studio 설치 마법사’를 실행한다. Android 용으로 개발할 때 Flutter에서 필요로하는 최신 Android SDK, Android SDK Platform-Tools 및 Android SDK Build-Tools가 설치된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;set-up-the-android-emulator&quot;&gt;Set up the Android emulator&lt;/h3&gt;

&lt;h1 id=&quot;set-up-an-editor&quot;&gt;Set up an editor&lt;/h1&gt;
&lt;p&gt;Android Studio or IntelliJ or Visual Studio Code&lt;/p&gt;

&lt;h1 id=&quot;test-dirve-android-studio&quot;&gt;Test dirve (Android Studio)&lt;/h1&gt;

&lt;h2 id=&quot;create-the-app&quot;&gt;Create the App&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Start a new Flutter project&lt;/strong&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Flutter Application&lt;/strong&gt; 선택, &lt;strong&gt;Next&lt;/strong&gt; 버튼 클릭&lt;/li&gt;
  &lt;li&gt;Flutter SDK Path 텍스트 필드에 SDK의 위치가 지정되어 있는지 확인 (SDK를 아직 설치하지 않은 경우 설치)&lt;/li&gt;
  &lt;li&gt;프로젝트 이름 입력 (예: myapp) 후 &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Finish&lt;/strong&gt; 클릭&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;run-the-app&quot;&gt;Run the app&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;./assets/image/android_toolbar.png&quot; alt=&quot;&quot; /&gt;
안드로이드 스튜디오 메인 툴바에서 Target 선택 후 Run 아이콘 클릭
안드로이드 디바이스가 사용 가능한 것으로 표시되지 않으면 &lt;strong&gt;Tools &amp;gt; Android &amp;gt; AVD Manager&lt;/strong&gt;를 선택하고 거기에 아이콘을 생성&lt;/p&gt;

&lt;h2 id=&quot;try-hot-reload&quot;&gt;Try hot reload&lt;/h2&gt;
&lt;p&gt;Flutter는 재부팅이 빠른 개발주기를 제공하며 앱 상태를 다시 시작하거나 잃지 않고 실행중인 앱의 코드를 다시로드 할 수 있다.
소스 변경을 IDE, CLI에 바로 반영하여 시뮬레이터, 에뮬레이터, 실제 장치에 변경
APP 실행 중 아래 대로 변경해보자&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;lib/main.dart&lt;/strong&gt; 오픈&lt;/li&gt;
  &lt;li&gt;다음 String을
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'You have pushed the button this many times'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;다음으로 변경&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'You have clicked the button this many times'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;변화 저장: &lt;strong&gt;Save All&lt;/strong&gt; 호출하거나 &lt;strong&gt;Hot Reload&lt;/strong&gt; 클릭 (cmd+)&lt;/li&gt;
  &lt;li&gt;실행 중인 앱에 String 업데이트 거의 즉시 반영됨&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://flutter.dev/docs/get-started/install/macos&quot;&gt;https://flutter.dev/docs/get-started/install/macos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 03 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/04/03/flutter-install/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/04/03/flutter-install/</guid>
        
        <category>Flutter</category>
        
        <category>install</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>한 대의 컴퓨터에서 여러 개의 github 계정 사용하기</title>
        <description>&lt;h1 id=&quot;1-새로운-ssh-키-생성&quot;&gt;1. 새로운 SSH 키 생성&lt;/h1&gt;
&lt;p&gt;SSH 키들은 기본적으로 사용자의 ~/.ssh 디렉토리에 저장됨
먼저 기존의 키들을 확인&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~/.ssh
$ ls
id_rsa.pub    id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;.pub 이 붙은 파일과 그렇지 않은 파일을 볼 수 있는데, .pub 이 붙은 것이 공개키이고 다른 것은 개인키&lt;/p&gt;

&lt;p&gt;새로운 SSH 키를 만들기
기존에 생성된 SSH 키가 없거나, .ssh 디렉토리가 없어도 다음 명령으로 만들 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &quot;username@gmail.com&quot; // 새 계정의 이메일 주소
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;새로운 키를 저장할 경로를 묻는데 이 때, 기존의 키를 덮어쓰지 않도록 조심
id_second 라는 이름으로 SSH 키를 생성&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ Enter file in which to save the key (/Users/YOURNAME/.ssh/id_rsa):/Users/YOURNAME/.ssh/id_rsa_second
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;암호를 두 번 입력하라고 하는데 엔터를 쳐서 넘어가면 새로운 키가 생성된 것을 확인 가능&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls
id_rsa.pub    id_rsa_second.pub   id_rsa    id_rsa_second   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;id_rsa_second.pub 의 내용을 복사해서 다음 단계에서 사용&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat id_rsa_second.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBvlgEqRqaVp/zOoxtAnKdMr6/y9SaP0Y3MGG4648N+MLD6yy+JjOYE3HnLNDWsOhsOXkjr7phVHYBqVd6QtpHZrgw5PXOEo1V00Es+HGcHU0sONLWK/OWtV7598eULXnQfNjPlND/09BW+D5IXI8plNRcjfaD4dRxtSOtolZ5jxxxT4gpR5v17Axm3ut4ukS+6f6GHNYZ4QcZJtlaps+eN0Ol/juEYy47r3l5CPIc9sxyQGE4o5Mm4LhLk769yVQGgGcR21Aj0DuEVN0HyeEZcAbqFqze9ZY5kdtYcI2L4B23X781nlX6zfpeVL9iU9pxkw/UGLUx2bcSGHOfrvhX username@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-ssh-키-설정&quot;&gt;2. SSH 키 설정&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt; 사이트에서 두 번쨰 계정 생성하고 로그인&lt;/p&gt;

&lt;p&gt;오른쪽 위 아이콘 클릭
Settings -&amp;gt; SSH Keys -&amp;gt; Nes SSH key 클릭&lt;/p&gt;

&lt;p&gt;Title : 구별 가능한 간단한 이름
Key : 복사해둔 키&lt;/p&gt;

&lt;p&gt;Add SSH key 버튼 눌러서 완료&lt;/p&gt;

&lt;p&gt;터미널에서 생성한 키를 SSH에 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-add ~/.ssh/id_second
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-config-파일-만들기&quot;&gt;3. Config 파일 만들기&lt;/h1&gt;
&lt;p&gt;로컬 저장소에서 github으로 푸시할 때 어떤 키 참조할 것인지 결정하도록 config 만들기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd .ssh
$ vim config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;config 파일에 다음 내용 입력&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Default account
Host github.com
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa
# Second account
Host github.com-second
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_second
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-새-계정으로-push&quot;&gt;4. 새 계정으로 Push&lt;/h1&gt;
&lt;p&gt;지금까지의 작업이 잘 되었는지 확인
먼저 github 사이트에서 새 repository 를 만든다. 그리고 로컬에서 원하는 위치에 새 폴더를 만들고 다음 명령을 입력&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git init
$ git commit -am &quot;first commit&quot;
$ git remote add origin git@github.com-second:YOURNAME/REPOSITORY.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기서 YOURNAME 에는 github 계정의 이름, REPOSITORY 에는 새로 만든 repository의 이름을 입력
유의해야 할 점은, config 파일에서 Host github.com-second 라고 입력했으므로 원격저장소 설정시 git@github.com 대신 git@github.com-second 를 입력해야 한다는 점
이것은 clone 시에도 마찬가지&lt;/p&gt;

&lt;p&gt;만약 기존의 계정으로 작업하려면 원래하던 방법으로 git@github.com으로 하면 된다.&lt;/p&gt;

&lt;p&gt;추가적으로, 새 계정으로 작업하는 폴더에서 다음 명령으로 commit 시 사용될 이름과 이메일 주소를 변경할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config user.name &quot;YOURNAME&quot;
$ git config user.email &quot;YOUREMAIL&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;note--만약-잘-사용하다가-갑자기-git-access-denied-라는-메세지가-뜨면-아래-명령을-입력한-뒤-다시-시도&quot;&gt;NOTE : 만약 잘 사용하다가 갑자기 git access denied 라는 메세지가 뜨면 아래 명령을 입력한 뒤 다시 시도&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-add ~/.ssh/id_rsa_second
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aweekj.github.io/using-multiple-accounts-in-git/&quot;&gt;https://aweekj.github.io/using-multiple-accounts-in-git/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574&quot;&gt;How to Work with GitHub and Multiple Accounts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-SSH-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot;&gt;Git 서버 - SSH 공개키 만들기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 31 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/03/31/using-multiple-accounts-in-git/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/03/31/using-multiple-accounts-in-git/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>Git 명령어</title>
        <description>&lt;h1 id=&quot;1-새로운-git-저장소-만들기&quot;&gt;1. 새로운 Git 저장소 만들기&lt;/h1&gt;
&lt;p&gt;원하는 작업 폴더 새로 만들고 폴더 안으로 이동해서 새로운 git 저장소 만들기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd 작업디렉토리
$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-저장소-받아오기&quot;&gt;2. 저장소 받아오기&lt;/h1&gt;
&lt;h2 id=&quot;21-로컬-저장소-복제&quot;&gt;2.1. 로컬 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone /로컬/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;22-원격-서버-저장소-복제&quot;&gt;2.2. 원격 서버 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone 사용자명@호스트:/원격/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-변경-파일-index에-추가&quot;&gt;3. 변경 파일 Index에 추가&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;4-변경-내용-확정-commit--head에-반영&quot;&gt;4. 변경 내용 확정 (Commit) = Head에 반영&lt;/h1&gt;
&lt;p&gt;변경 파일들을 로컬 저장소에 등록하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 명령어 사용 &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;은 message&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit -m &quot;이번 확정본에 대한 설명&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;5-변경-내용-발행-push&quot;&gt;5. 변경 내용 발행 (Push)&lt;/h1&gt;
&lt;p&gt;만약 기존 원격 서버 저장소 복제한 것이 아니라면 원격 서버 주소를 git에 등록
이제 origin을 사용하면 원격 저장소에 접근 가능해진다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin https://~~~.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변경 내용 원격 서버에 올리기 (master brunch)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다른 brunch로 발행하려면 이름만 변경&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;6-brunch-관리&quot;&gt;6. brunch 관리&lt;/h1&gt;
&lt;h2 id=&quot;61-로컬에서-branch-만들고-갈아타기&quot;&gt;6.1. 로컬에서 branch 만들고 갈아타기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -b &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;62-로컬에서-master로-돌아오기&quot;&gt;6.2. 로컬에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;로 돌아오기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;63-로컬-branch-삭제&quot;&gt;6.3. 로컬 branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch -d &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;64-로컬-branch-목록-보기&quot;&gt;6.4 로컬 branch 목록 보기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch
  issue1
* master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;65-새로-만든-로컬-branch를-리모트-저장소에-전송하기-전까지는-다른-사람-접근-불가&quot;&gt;6.5. 새로 만든 로컬 branch를 리모트 저장소에 전송하기 전까지는 다른 사람 접근 불가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;66-리모트-branch-삭제&quot;&gt;6.6. 리모트 branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin --delete &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;7-pull&quot;&gt;7. pull&lt;/h1&gt;
&lt;p&gt;로컬 저장소를 원격 저장소에 맞춰 갱신
원격 저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고(fetch), 병합(merge)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에 병합하려면 아래 명령 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git merge &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;충돌 나면 충돌 부분 수정해서 해결&lt;/p&gt;

&lt;p&gt;충돌을 해결했다면, 아래 명령으로 git에게 아까의 파일을 병합하라고 명령&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교 가능&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff &amp;lt;원래 brunch&amp;gt; &amp;lt;비교 대상 brunch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rogerdudler.github.io/git-guide/index.ko.html&quot;&gt;https://rogerdudler.github.io/git-guide/index.ko.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 31 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/03/31/git-command/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/03/31/git-command/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>Jekyll 테마 변경</title>
        <description>&lt;h1 id=&quot;gem-based-테마-구조&quot;&gt;Gem-based 테마 구조&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;gem-based-테마-설치&quot;&gt;Gem-based 테마 설치&lt;/h1&gt;
&lt;h2 id=&quot;gemfile-에-다음-줄-추가&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 에 다음 줄 추가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;minimaldmistakes-jekyll&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;terminal에서-bundler실행&quot;&gt;Terminal에서 Bundler실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mioscode.github.io$ bundle
The dependency tzinfo-data (&amp;gt;= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Using concurrent-ruby 1.1.5
Following files may not be writable, so sudo is needed:
/Library/Ruby/Gems/2.3.0
/Library/Ruby/Gems/2.3.0/build_info
/Library/Ruby/Gems/2.3.0/cache
/Library/Ruby/Gems/2.3.0/doc
/Library/Ruby/Gems/2.3.0/extensions
/Library/Ruby/Gems/2.3.0/gems
/Library/Ruby/Gems/2.3.0/specifications
Using i18n 0.9.5
Using minitest 5.8.5
Using thread_safe 0.3.6
Using tzinfo 1.2.5
Using activesupport 4.2.10
Using public_suffix 3.0.3
Using addressable 2.5.2
Using bundler 2.0.1
Using coffee-script-source 1.11.1
Using execjs 2.7.0
Using coffee-script 2.4.1
Using colorator 1.1.0
Using ruby-enum 0.7.2
Using commonmarker 0.17.13
Using dnsruby 1.61.2
Using eventmachine 1.2.7
Using http_parser.rb 0.6.0
Using em-websocket 0.5.1
Using ffi 1.10.0
Using ethon 0.12.0
Using multipart-post 2.0.0
Using faraday 0.15.4
Using forwardable-extended 2.6.0
Using gemoji 3.0.0
Using sawyer 0.8.1
Using octokit 4.13.0
Using typhoeus 1.3.1
Using github-pages-health-check 1.16.1
Using rb-fsevent 0.10.3
Using rb-inotify 0.10.0
Using sass-listen 4.0.0
Using sass 3.7.3
Using jekyll-sass-converter 1.5.2
Using ruby_dep 1.5.0
Using listen 3.1.5
Using jekyll-watch 2.2.1
Using kramdown 1.17.0
Using liquid 4.0.0
Using mercenary 0.3.6
Using pathutil 0.16.2
Using rouge 2.2.1
Using safe_yaml 1.0.5
Using jekyll 3.7.4
Using jekyll-avatar 0.6.0
Using jekyll-coffeescript 1.1.1
Using jekyll-commonmark 1.3.1
Using jekyll-commonmark-ghpages 0.1.5
Using jekyll-default-layout 0.1.4
Using jekyll-feed 0.11.0
Using jekyll-gist 1.5.0
Using jekyll-github-metadata 2.12.1
Using mini_portile2 2.4.0
Using nokogiri 1.10.2
Using html-pipeline 2.10.0
Using jekyll-mentions 1.4.1
Using jekyll-optional-front-matter 0.3.0
Using jekyll-paginate 1.1.0
Using jekyll-readme-index 0.2.0
Using jekyll-redirect-from 0.14.0
Using jekyll-relative-links 0.6.0
Using rubyzip 1.2.2
Using jekyll-remote-theme 0.3.1
Using jekyll-seo-tag 2.5.0
Using jekyll-sitemap 1.2.0
Using jekyll-swiss 0.4.0
Using jekyll-theme-architect 0.1.1
Using jekyll-theme-cayman 0.1.1
Using jekyll-theme-dinky 0.1.1
Using jekyll-theme-hacker 0.1.1
Using jekyll-theme-leap-day 0.1.1
Using jekyll-theme-merlot 0.1.1
Using jekyll-theme-midnight 0.1.1
Using jekyll-theme-minimal 0.1.1
Using jekyll-theme-modernist 0.1.1
Using jekyll-theme-primer 0.5.3
Using jekyll-theme-slate 0.1.1
Using jekyll-theme-tactile 0.1.1
Using jekyll-theme-time-machine 0.1.1
Using jekyll-titles-from-headings 0.5.1
Using jemoji 0.10.2
Using minima 2.5.0
Using unicode-display_width 1.5.0
Using terminal-table 1.8.0
Using github-pages 197
Bundle complete! 3 Gemfile dependencies, 85 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;_configyml-에-테마-셋팅&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 에 테마 셋팅&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;theme: minimal-mistakes-jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/&quot;&gt;https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/03/28/jekyll-theme-change/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/03/28/jekyll-theme-change/</guid>
        
        <category>Jekyll</category>
        
        <category>Github</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>Jekyll 사용하여 GitHub Pages 블로그 만들기</title>
        <description>&lt;h1 id=&quot;jekyll&quot;&gt;Jekyll?&lt;/h1&gt;
&lt;p&gt;jekyll은 Markdown (또는 Textile), Liquid, HTML &amp;amp; CSS 로 구성된 페이지를 repository 에 push 하면 포스팅이 가능하게 해준다.&lt;/p&gt;

&lt;h1 id=&quot;ruby-설치&quot;&gt;Ruby 설치&lt;/h1&gt;
&lt;p&gt;mac은 설치되어 있어 생략&lt;/p&gt;

&lt;h1 id=&quot;jekyll-설치&quot;&gt;Jekyll 설치&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;gem: Ruby 언어에서 서드파티 라이브러리를 설치하도록 도와주는 시스템&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;jekyll-로-지역-저장소에-블로그-만들기&quot;&gt;Jekyll 로 지역 저장소에 블로그 만들기&lt;/h1&gt;
&lt;p&gt;원하는 지역 저장소 위치로 이동&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd local-repository-path/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;블로그 생성&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll new username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;이때 username 안쓰면 연동 오류 생기는 듯&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;로컬에서 테스트 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd username.github.io
~/username.github.io $ jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;실행 후 웹브라우저에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt; 입력&lt;/p&gt;

&lt;h1 id=&quot;github-pages로-원격-저장소-만들기&quot;&gt;GitHub Pages로 원격 저장소 만들기&lt;/h1&gt;
&lt;h2 id=&quot;git으로-블로그-변동-추적하고-원격-저장소-등록&quot;&gt;Git으로 블로그 변동 추적하고 원격 저장소 등록&lt;/h2&gt;
&lt;p&gt;Jekyll로 만든 지역 저장소&lt;code class=&quot;highlighter-rouge&quot;&gt;local-repository-path&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 명령어 사용하여 Git 저장소 생성(해당 저장소의 변경사항을 Git이 추적 가능해짐)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add&lt;/code&gt; 명령어로 원격 저장소&lt;code class=&quot;highlighter-rouge&quot;&gt;remote-repository-url&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;이라는 이름으로 등록(이제 origin을 사용하면 원격 저장소에 접근 가능)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;방법 1:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin https://github.com/username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;방법 2:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin git@github.com:username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;블로그-변동-사항-지역-저장소에-저장하기&quot;&gt;블로그 변동 사항 지역 저장소에 저장하기&lt;/h2&gt;
&lt;p&gt;블로그 파일 변경되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 명령어 사용해서 지역 저장소에 변경 사항 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변경 파일들을 로컬 저장소에 등록하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 명령어 사용 &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;은 message&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit -m &quot;first commit&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;지역-저장소-내용을-원격-저장소로-push하여-블로그-업데이트&quot;&gt;지역 저장소 내용을 원격 저장소로 push하여 블로그 업데이트&lt;/h2&gt;
&lt;p&gt;지역 저장소의 master에 있는 내용을 아까 등록한 원격 저장소 &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;끝-확인하기&quot;&gt;끝! 확인하기&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://username.github.io&lt;/code&gt; 주소로 블로그 업데이트된 것 확인 가능&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb-ko.github.io/&quot;&gt;https://jekyllrb-ko.github.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jekyll 기반의 GitHub Pages에 블로그 만들기 &lt;a href=&quot;http://xho95.github.io/blog/github/jekyll/git/2016/01/11/Make-a-blog-with-Jekyll.html&quot;&gt;http://xho95.github.io/blog/github/jekyll/git/2016/01/11/Make-a-blog-with-Jekyll.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jekyll 테마 &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/03/26/github-pages-blog-used-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/03/26/github-pages-blog-used-jekyll/</guid>
        
        <category>Jekyll</category>
        
        <category>Github</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
  </channel>
</rss>
