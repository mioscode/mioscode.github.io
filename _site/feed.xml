<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MIOS Code</title>
    <description>MIOS Codes and Thinks</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 06 May 2020 10:48:23 +0900</pubDate>
    <lastBuildDate>Wed, 06 May 2020 10:48:23 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Flutter VSCode Extension(플러그인) 추천</title>
        <description>&lt;h1 id=&quot;1-flutter&quot;&gt;1. Flutter&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;option + control + F5 : Run, Debugger&lt;/p&gt;

&lt;h1 id=&quot;2-awesome-flutter-snippets&quot;&gt;2. Awesome Flutter Snippets&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=Nash.awesome-flutter-snippets
Flutter 클래스와 메소드의 모음, Shortcut&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Shortcut&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Expanded&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;statelessW&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stateless Widget&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stateless widget 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;statefulW&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stateful Widget&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stateful widget 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;build&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Build Method&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;위젯으로 표시되는 사용자 인터페이스 부분을 설명합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;initS&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;InitState&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 객체가 트리에 삽입 될 때 호출됩니다. 프레임 워크는 작성된 각 State 객체에 대해이 메소드를 정확히 한 번만 호출합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;dis&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Dispose&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 객체가 트리에서 영구적으로 제거 될 때 호출됩니다. 프레임 워크는이 State 객체가 다시는 빌드되지 않을 때이 메소드를 호출합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;reassemble&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Reassemble&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;디버깅 중, 예를 들어 핫 리로드와 같이 응용 프로그램이 재 조립 될 때마다 호출됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;didChangeD&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;didChangeDependencies&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 State 객체의 종속성이 변경 될 때 호출됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;didUpdateW&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;didUpdateWidget&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;위젯 구성이 변경 될 때마다 호출됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;customClipper&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Custom Clipper&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;custom shapes을 만드는데 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;customPainter&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Custom Painter&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;custom paint을 만드는데 사용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;listViewB&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ListView.Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;요청시 생성되는 스크롤 가능한 선형 배열 위젯을 만듭니다 .Null이 아닌 itemCount를 제공하면 ListView의 최대 스크롤 범위를 추정하는 기능이 향상됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;customScrollV&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Custom ScrollView&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;silver를 사용하여 사용자 지정 스크롤 효과를 만드는 ScrollView를 만듭니다. 기본 인수가 true이면 컨트롤러가 널이어야합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;streamBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stream Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;지정된 stream과의 최신 상호 작용 snapshot을 기반으로 자체 빌드하는 새 StreamBuilder를 만듭니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;animatedBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Animated Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;애니메이션 빌더를 만듭니다. child에 지정된 위젯이 빌더로 전달됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;statefulBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stateful Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;상태가 있고 빌드를 콜백에 위임하는 위젯을 작성합니다. 위젯 트리의 특정 섹션을 다시 작성하는 데 유용합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;orientationBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orientation Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;장치의 방향을 지정하고 참조 할 수있는 빌더를 작성합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;layoutBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Layout Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;프레임 워크가 레이아웃 시 빌더 함수를 호출하고 상위 위젯의 제한 조건을 제공한다는 점을 제외하면 Builder widget 과 유사합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;singleChildSV&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Single Child Scroll View&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;single child로 scroll view를 만듭니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;futureBldr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Future Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Future Builder를 만듭니다. 이는 Future와의 최신 상호 작용 snapshot을 기반으로합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;nosm&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No Such Method&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 메소드는 존재하지 않는 메소드 또는 특성에 액세스 할 때 호출됩니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;inheritedW&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Inherited Widget&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;위젯 트리 아래로 정보를 전파하는 데 사용되는 클래스입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;mounted&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Mounted&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 State 객체가 현재 트리에 있는지 여부&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;snk&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sink&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Sink는 stream의 입력 입니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;strm&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Stream&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비동기 데이터 이벤트의 소스. stream은 모든 데이터 유형이 될 수 있습니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;subj&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Subject&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;BehaviorSubject는 broadcast StreamController이며 Stream이 아닌 Observable을 리턴합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;toStr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;To String&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;이 객체의 string 표현을 리턴합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;debugP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Debug Print&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;flutter 도구의 logs 명령 (flutter logs)을 사용하여 액세스 할 수있는 메시지를 콘솔에 인쇄합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;importM&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Material Package&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Import Material package.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;importC&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cupertino Package&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Import Cupertino package.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;mateapp&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Material App&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Create a new Material App.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cupeapp&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cupertino Package&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Create a New Cupertino App.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;tweenAnimationBuilder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Tween Animation Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;대상 값이 변경 될 때마다 위젯의 특성을 대상 값으로 애니메이션하는 Widget builder .&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;valueListenableBuilder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Value Listenable Builder&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ValueListenable과 구체적인 T 값에서 위젯을 빌드하는 빌더가 제공되면이 클래스는 자동으로 ValueListenable의 리스너로 등록하고 값이 변경 될 때 업데이트 된 값으로 빌더를 호출합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;3-flutter-files&quot;&gt;3. Flutter Files&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=gornivv.vscode-flutter-files
빠르게 Scaffold Flutter BLoC template 사용&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;lib 폴더에서 마우스 오른쪽 버튼 클릭해서 New Big Pack BloC, New Index, New BloC 등 사용&lt;/p&gt;

&lt;h1 id=&quot;4-flutter-tree&quot;&gt;4. Flutter Tree&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=marcelovelasquez.flutter-tree
기본 위젯 트리를 빌드하기위한 extension&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;기본-문법&quot;&gt;기본 문법&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OneChild&amp;gt;MultipleChild[OneChild,MultipleChild[OneChild,OneChild],OneChild&amp;gt;OneChild]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OneChild(
    child: MultipleChild(
        children: &amp;lt;Widget&amp;gt;[
            OneChild(),
            MultipleChild(
                children: &amp;lt;Widget&amp;gt;[
                    OneChild(),
                    OneChild(),
                ]
            ),
            OneChild(
                child: OneChild(),
            ),
        ]
    ),
), 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;사용-예&quot;&gt;사용 예&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Center&amp;gt;Column[Cotainer, Expanded&amp;gt;Container, Text]&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;body: Center(
    child: Column(
        children: &amp;lt;Widget&amp;gt;[
            Container(),
            Expanded(
                child: Container(),
            ),
            Text(),
        ]
    ),
), 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;5-bracket-pair-colorizer-2&quot;&gt;5. Bracket Pair Colorizer 2&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2
부모 scope의 괄호 사이에 선을 그어줌 (깊이 따라 색상 다르게)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;option-활성화-할-리스트&quot;&gt;Option 활성화 할 리스트&lt;/h2&gt;
&lt;p&gt;VSCode &amp;gt; Preference &amp;gt; Settings &amp;gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;showBracketsInGutter : 코드줄 번호 왼쪽 부분에 현재 활성화된 괄호 보여줌&lt;/li&gt;
  &lt;li&gt;showBracketsInRuler : ruler에 활성화된 괄호 보여줌&lt;/li&gt;
  &lt;li&gt;showVerticalScopeLine : 괄호 사이 세로선 그어줌 (디폴트 설정)&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 13 Feb 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2020/02/13/flutter-vscode-extension/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2020/02/13/flutter-vscode-extension/</guid>
        
        <category>Flutter</category>
        
        <category>VSCode</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>Tmux 사용법</title>
        <description>&lt;h1 id=&quot;구성요소&quot;&gt;구성요소&lt;/h1&gt;
&lt;h2 id=&quot;session&quot;&gt;session&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;tmux 실행 단위, 여러개의 window로 구성됨
    &lt;h2 id=&quot;window&quot;&gt;window&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;터미널 화면, session 내에서 탭처럼 사용할 수 있음
    &lt;h2 id=&quot;pane&quot;&gt;pane&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;window 내에서 화면 분
    &lt;h2 id=&quot;status-bar&quot;&gt;status bar&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;화면 아래 표시되는 상태&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;설치&quot;&gt;설치&lt;/h1&gt;
&lt;h2 id=&quot;mac-homebrew&quot;&gt;Mac (homebrew)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;명령어&quot;&gt;명령어&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;모든 명령어를 실행하기 전에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+b&lt;/code&gt;를 입력해야 함&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;session-관련&quot;&gt;session 관련&lt;/h2&gt;
&lt;h3 id=&quot;tumx-진입-전&quot;&gt;tumx 진입 전&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 새 세션 생성&lt;/span&gt;
tmux new &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &amp;lt;session-name&amp;gt;
        
&lt;span class=&quot;c&quot;&gt;# 세션 목록 보기 (list-session)&lt;/span&gt;
tmux &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
        
&lt;span class=&quot;c&quot;&gt;# 세션 다시 시작&lt;/span&gt;
tmux attach &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;session-number or session-name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;tumx-진입-전-1&quot;&gt;tumx 진입 전&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 세션 종료&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tmux에서&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
        
&lt;span class=&quot;c&quot;&gt;# 세션 이름 수정&lt;/span&gt;
ctrl + b, &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
        
&lt;span class=&quot;c&quot;&gt;# 세션 중단하기 (detached)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ctrl + b, d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;window-관련&quot;&gt;window 관련&lt;/h2&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 새 윈도우 생성&lt;/span&gt;
ctrl + b, c

&lt;span class=&quot;c&quot;&gt;# 세션 생성시 윈도우랑 같이 생성&lt;/span&gt;
tmux new &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &amp;lt;session-name&amp;gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &amp;lt;window-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# 윈도우 이름 수정&lt;/span&gt;
ctrl + b, ,

&lt;span class=&quot;c&quot;&gt;# 윈도우 종료&lt;/span&gt;
ctrl + b, &amp;amp;
ctrl + d

&lt;span class=&quot;c&quot;&gt;# 윈도우 이동&lt;/span&gt;
ctrl + b, 0-9 : window number
          n : next window
          p : prev window
          l : last window
          w : window selector
          f : find by name

&lt;span class=&quot;c&quot;&gt;# 윈도우 번호설정&lt;/span&gt;
ctrl + b, :move-window &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 윈도우 번호
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;pane-관련&quot;&gt;pane 관련&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 틀 나누기&lt;/span&gt;
ctrl + b, % : 횡 분할
ctrl + b, &lt;span class=&quot;s2&quot;&gt;&quot; : 종 분할

# 틀 확대
ctrl + b, z

# 틀 이동
ctrl + b, q : 화면에 나오는 숫자키
ctrl + b, o : 순서대로 이동
ctrl + b, arrow : 방향키 이동

# 틀 삭제
ctrl + b, x
ctrl + d

# 틀 사이즈 조절
(ctrl + b, :)
resize-pane -L 10
            -R 10
            -D 10
            -U 10

# 틀 레이아웃 변경
ctrl + b, spacebar
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;기타&quot;&gt;기타&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 단축키 목록&lt;/span&gt;
ctrl + b, ?

&lt;span class=&quot;c&quot;&gt;# 키 연결 및 해제 bind and unbind&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ctrl + b, :&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
bind-key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-cnr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; key-table] key &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments]
unbind-key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-acn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;t key-table] key

&lt;span class=&quot;c&quot;&gt;# copy mode 진입&lt;/span&gt;
ctrl + b, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 빠져나오기&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;copy mode에서&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; q or ESC

&lt;span class=&quot;c&quot;&gt;# 이동&lt;/span&gt;
arrow : 커서 이동
pageUp, pageDown : 페이지 이동 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;iTerm에서는 fn + up, down, terminal에서는 alt + up, down&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 옵션 설정 `set` and `setw`&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &amp;lt;option-name&amp;gt; &amp;lt;option-value&amp;gt;  : set-option
setw &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &amp;lt;option-name&amp;gt; &amp;lt;option-value&amp;gt; : set-window-option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;설정-tmuxconf&quot;&gt;설정 (~/.tmux.conf)&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt; 파일을 생성해 시작할 때 자동으로 설정을 불러옴&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; mouse on

setw &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; mode-keys vi

&lt;span class=&quot;c&quot;&gt;# Use Alt-arrow keys without prefix key to switch panes&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; M-Left &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-pane&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; M-Right &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-pane&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; M-Up &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-pane&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; M-Down &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-pane&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Shift arrow to switch windows&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; S-Left  previous-window
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; S-Right next-window

&lt;span class=&quot;c&quot;&gt;# scrollback buffer size increase&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; history-limit 100000

&lt;span class=&quot;c&quot;&gt;# change window order&lt;/span&gt;
bind-key &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; C-S-Left swap-window &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;
bind-key &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; C-S-Right swap-window &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; +1

&lt;span class=&quot;c&quot;&gt;# disable window name auto change&lt;/span&gt;
set-option &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; allow-rename off

&lt;span class=&quot;c&quot;&gt;# bar color&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; status-bg black
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; status-fg white

&lt;span class=&quot;c&quot;&gt;# 동시 명령어 사용&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;synchronize-panes on
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;synchronize-panes on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 09 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tmux/2020/01/09/tmux/</link>
        <guid isPermaLink="true">http://localhost:4000/tmux/2020/01/09/tmux/</guid>
        
        <category>Tmux</category>
        
        <category>terminal</category>
        
        
        <category>Tmux</category>
        
      </item>
    
      <item>
        <title>(Flutter) UI - 1. Widgets 이란</title>
        <description>&lt;blockquote&gt;
  &lt;h3 id=&quot;ui-목차&quot;&gt;UI 목차&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Introduction to widgets&lt;/li&gt;
    &lt;li&gt;Building layouts
      &lt;ul&gt;
        &lt;li&gt;Layouts in Flutter&lt;/li&gt;
        &lt;li&gt;Tutorial&lt;/li&gt;
        &lt;li&gt;Creating responsive apps&lt;/li&gt;
        &lt;li&gt;Box constraints&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Adding interactivity&lt;/li&gt;
    &lt;li&gt;Asserts &amp;amp; Images&lt;/li&gt;
    &lt;li&gt;Navigation &amp;amp; routing&lt;/li&gt;
    &lt;li&gt;Animations
      &lt;ul&gt;
        &lt;li&gt;Introduction&lt;/li&gt;
        &lt;li&gt;Overviews&lt;/li&gt;
        &lt;li&gt;Tutorial&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introduction-to-widgets&quot;&gt;Introduction to widgets&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://flutter.dev/docs/development/ui/widgets-intro&quot;&gt;https://flutter.dev/docs/development/ui/widgets-intro&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/20/flutter-ui-introduction-of-widgets/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/20/flutter-ui-introduction-of-widgets/</guid>
        
        <category>Flutter</category>
        
        <category>widget</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>(Flutter) UI - 2.1. Layouts</title>
        <description>&lt;blockquote&gt;
  &lt;h3 id=&quot;ui-목차&quot;&gt;UI 목차&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Introduction to widgets&lt;/li&gt;
    &lt;li&gt;Building layouts
      &lt;ul&gt;
        &lt;li&gt;Layouts in Flutter&lt;/li&gt;
        &lt;li&gt;Tutorial&lt;/li&gt;
        &lt;li&gt;Creating responsive apps&lt;/li&gt;
        &lt;li&gt;Box constraints&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Adding interactivity&lt;/li&gt;
    &lt;li&gt;Asserts &amp;amp; Images&lt;/li&gt;
    &lt;li&gt;Navigation &amp;amp; routing&lt;/li&gt;
    &lt;li&gt;Animations
      &lt;ul&gt;
        &lt;li&gt;Introduction&lt;/li&gt;
        &lt;li&gt;Overviews&lt;/li&gt;
        &lt;li&gt;Tutorial&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;layouts&quot;&gt;Layouts&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://flutter.dev/docs/development/ui/layout&quot;&gt;https://flutter.dev/docs/development/ui/layout&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;들어가기-전에&quot;&gt;들어가기 전에&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;위젯은 UI를 만들때 사용하는 클래스다&lt;/li&gt;
  &lt;li&gt;위젯은 layout 과 UI 구성요소 모두에 사용된다&lt;/li&gt;
  &lt;li&gt;Flutter layout 메카니즘의 핵심은 widget 이다&lt;/li&gt;
  &lt;li&gt;Flutter에서 거의 모든 것은 widget 이다&lt;/li&gt;
  &lt;li&gt;심지어 layout modes 도 widgets 이다&lt;/li&gt;
  &lt;li&gt;보이는 것(images, icons, text …) 뿐 아니라 보이지 않는 것(rows, columns, grids …)도 widget이다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(예)
&lt;img src=&quot;https://flutter.dev/assets/ui/layout/lakes-icons-visual-f9e45691d76ba85d4ea2160941f42c8a2ce1a17d41d6e6aac8f3feb89e679f99.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://flutter.dev/assets/ui/layout/sample-flutter-layout-46c76f6ab08f94fa4204469dbcf6548a968052af102ae5a1ae3c78bc24e0d915.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위 예에서 Container는 그 아래 child widget을 customize할 수 있게 하는 widget class이다
    &lt;ul&gt;
      &lt;li&gt;padding, margins, borders, background color 등을 추가하길 원할 때 container를 사용한다&lt;/li&gt;
      &lt;li&gt;위 예에서는 각각의 Text widet이 margins을 추가하기 위해 Container가 감싸고 있다&lt;/li&gt;
      &lt;li&gt;또한 전체 Row(행)은  row 주위에 padding을 추가하기 위해 Container가 감싸고 있다
….&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lay-out-a-widget&quot;&gt;Lay out a widget&lt;/h2&gt;
&lt;h3 id=&quot;1-select-a-layout-widget&quot;&gt;1. Select a layout widget&lt;/h3&gt;
&lt;h3 id=&quot;2-create-a-visible-widget&quot;&gt;2. Create a visible widget&lt;/h3&gt;
&lt;h3 id=&quot;3-add-the-visible-widget-to-the-layout-widget&quot;&gt;3. Add the visible widget to the layout widget&lt;/h3&gt;
&lt;h3 id=&quot;4-add-the-layout-widget-to-the-page&quot;&gt;4. Add the layout widget to the page&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Flutter app 자체로 하나의 widget 이다&lt;/li&gt;
  &lt;li&gt;대부분의 widget은 &lt;code class=&quot;highlighter-rouge&quot;&gt;build()&lt;/code&gt; 메소드를 가지며, 인스턴스화하여 widget을 display 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;material-apps&quot;&gt;Material apps&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Material app 을 위해 Scaffold widget을 사용할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;scaffold발판-골격-비계-widget&quot;&gt;Scaffold(발판, 골격, 비계) widget&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;default banner, background color, API for adding drawers, snack bars, bottom sheets 를 제공한다&lt;/li&gt;
  &lt;li&gt;body 속성에 직접 Center widget을 추가할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-flutter&quot;&gt;class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter layout demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter layout demo'),
        ),
        body: Center(
          child: Text('Hello World'),
        ),
      ),
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;non-material-apps&quot;&gt;Non-Material apps&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Non-Material app의 경우 Center widget을 app의 build () 메소드에 추가 할 수 있다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class MyApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
  return Container(
    decoration: BoxDecoration(color: Colors.white),
    child: Center(
      child: Text(
        'Hello World',
        textDirection: TextDirection.ltr,
        style: TextStyle(
          fontSize: 32,
          color: Colors.black87,
        ),
      ),
    ),
  );
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lay-out-multiple-widgets-vertically-and-horizontally&quot;&gt;Lay out multiple widgets vertically and horizontally&lt;/h2&gt;
</description>
        <pubDate>Fri, 20 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/20/flutter-UI-layouts/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/20/flutter-UI-layouts/</guid>
        
        <category>Flutter</category>
        
        <category>layout</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>(Flutter) Native Android, IOS 처럼 Splash screen 적용하기</title>
        <description>&lt;h1 id=&quot;0-why&quot;&gt;0. Why?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;공홈에서 샘플 코드 실행 시 앱 빌드 전 하얀 splash 화면 몇초간 로딩 후 main으로 넘어감&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-실패한-시도&quot;&gt;1. 실패한 시도&lt;/h1&gt;
&lt;h2 id=&quot;11-maindart-에-splash-widget-추가&quot;&gt;1.1. &lt;code class=&quot;highlighter-rouge&quot;&gt;main.dart&lt;/code&gt; 에 splash widget 추가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import 'package:flutter/material.dart';
import 'package:project_name/ui/home.dart';
import 'package: project_name/utils/uidata.dart';
import 'dart:async';

void main(){
  runApp(new MaterialApp(
    title: UIData.appName,
    debugShowCheckedModeBanner: false,
    showPerformanceOverlay: false,
    theme: new ThemeData(
        primarySwatch: Colors.blue,
        primaryColor: Colors.black,
        primaryIconTheme: IconThemeData(color: Colors.black),
        primaryTextTheme: TextTheme(
            title: TextStyle(color: Colors.black, fontFamily: &quot;Aveny&quot;)),
        textTheme: TextTheme(title: TextStyle(color: Colors.black))),
    home: new MyApp(),
  ));
}

class MyApp extends StatelessWidget {
  final materialApp = MaterialApp(
      title: UIData.appName,
      debugShowCheckedModeBanner: false,
      theme: new ThemeData(
          primarySwatch: Colors.blue,
          primaryColor: Colors.black,
          primaryIconTheme: IconThemeData(color: Colors.black),
          primaryTextTheme: TextTheme(
              title: TextStyle(color: Colors.black, fontFamily: &quot;Aveny&quot;)),
          textTheme: TextTheme(title: TextStyle(color: Colors.black))),
      home: new SplashScreen(),
      //routes
      routes: &amp;lt;String, WidgetBuilder&amp;gt; {

      }
  );

  Widget build(BuildContext context) {
    return materialApp;
  }
}

class SplashScreen extends StatefulWidget {

  @override
  State&amp;lt;StatefulWidget&amp;gt; createState() {
    return SplashScreenState();
  }
}

class SplashScreenState extends State&amp;lt;SplashScreen&amp;gt; {

  @override
  void initState() {
    super.initState();

    loadData();
  }

  Future&amp;lt;Timer&amp;gt; loadData() async {
    return new Timer(Duration(seconds: 1), onDoneLoading);
  }

  onDoneLoading() async {
    Navigator.of(context).pushReplacement(MaterialPageRoute(builder: (context) =&amp;gt; new Home()));
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        image: DecorationImage(
            fit: BoxFit.cover
        ) ,
      ),
      child: Center(
        child: CircularProgressIndicator(
          valueColor: AlwaysStoppedAnimation&amp;lt;Color&amp;gt;(Colors.redAccent),
        ),
      ),
    );
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Splash 추가 되긴 했는데, 기존 흰색 splash 뒤에 추가됨&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;12-패키지-찾아서-적용해봄-splashscreen&quot;&gt;1.2. 패키지 찾아서 적용해봄 (splashscreen)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/packages/splashscreen&quot;&gt;https://pub.dev/packages/splashscreen&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import 'package:flutter/material.dart';
import 'package:splashscreen/splashscreen.dart';
void main(){
  runApp(new MaterialApp(
    home: new MyApp(),
  ));
}


class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() =&amp;gt; new _MyAppState();
}

class _MyAppState extends State&amp;lt;MyApp&amp;gt; {
  @override
  Widget build(BuildContext context) {
    return new SplashScreen(
      seconds: 14,
      navigateAfterSeconds: new AfterSplash(),
      title: new Text('Welcome In SplashScreen',
      style: new TextStyle(
        fontWeight: FontWeight.bold,
        fontSize: 20.0
      ),),
      image: new Image.network('https://i.imgur.com/TyCSG9A.png'),
      backgroundColor: Colors.white,
      styleTextUnderTheLoader: new TextStyle(),
      photoSize: 100.0,
      onClick: ()=&amp;gt;print(&quot;Flutter Egypt&quot;),
      loaderColor: Colors.red
    );
  }
}

class AfterSplash extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new Scaffold(
      appBar: new AppBar(
      title: new Text(&quot;Welcome In SplashScreen Package&quot;),
      automaticallyImplyLeading: false
      ),
      body: new Center(
        child: new Text(&quot;Done!&quot;,
        style: new TextStyle(
          fontWeight: FontWeight.bold,
          fontSize: 30.0
        ),),

      ),
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Flutter 보다 Native splash가 먼저 도는 것으로 예상됨&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;2-해결-flutter_native_splash-패키지&quot;&gt;2. 해결 (flutter_native_splash 패키지)&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://pub.dev/packages/flutter_native_splash&quot;&gt;flutter_native_splash 0.1.9 패키지 적용&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;20-dependency-가져오기&quot;&gt;2.0. Dependency 가져오기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일 내 &lt;code class=&quot;highlighter-rouge&quot;&gt;dev_dependencies&lt;/code&gt; 에 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dev_dependencies:
  flutter_native_splash: ^0.1.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;우측 상단 &lt;code class=&quot;highlighter-rouge&quot;&gt;Package Get&lt;/code&gt; 버튼 누르거나 명령어 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub get
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;21-splash-screen-설정&quot;&gt;2.1. Splash screen 설정&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일 하단(&lt;code class=&quot;highlighter-rouge&quot;&gt;flutter:&lt;/code&gt; 아래) 설정을 추가&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter:
  assets:
   - assets/images/logo.png
   - assets/images/icon.png
   - assets/images/splash.png

  fonts:
    - family: Billabong
      fonts:
        - asset: assets/fonts/Billabong.ttf
    - family: Aveny
      fonts:
        - asset: assets/fonts/AvenyTRegular.otf
          style: normal
        - asset: assets/fonts/AvenyTMedium.otf
          style: italic
    - family: Dongkang
      fonts:
        - asset: assets/fonts/JSDongkang-Bold.otf
          style: normal
        - asset: assets/fonts/JSDongkang-Regular.otf
          style: italic

flutter_native_splash:
  image: assets/images/splash.png
  color: &quot;42a5f5&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설정 기타 옵션은 공식 페이지 참고&lt;/p&gt;

&lt;p&gt;2.2. Package 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub pub run flutter_native_splash:create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 19 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/19/flutter-native-splash-screen/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/19/flutter-native-splash-screen/</guid>
        
        <category>Flutter</category>
        
        <category>splash</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>(Flutter Codelabs) Layout 컨셉</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Flutter는 UI가 XML 파일 등이 아닌 Code로 작성되므로 다른 프레임 워크와 다르다&lt;/li&gt;
  &lt;li&gt;widget은 Flutter UI의 기본 구성 블록&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;row-and-column-classes&quot;&gt;Row and Column classes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Row(행) Column(열)은 위젯 포함, 배치하는 클래스&lt;/li&gt;
  &lt;li&gt;Row, Column 내부 위젯 = Children, Row, Column = Parents&lt;/li&gt;
  &lt;li&gt;Row는 위젯을 가로로 배치하고 Column은 위젯을 세로로 배치&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;axis-size-and-alignment&quot;&gt;Axis size and alignment&lt;/h2&gt;
&lt;h3 id=&quot;mainaxissize-property&quot;&gt;mainAxisSize property&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Row의 main axis는 horizontal(수평선), Column의 main axis는 vertical(수직선)&lt;/li&gt;
  &lt;li&gt;mainAxisSize property는 main axis에서 행과 열이 차지할 수있는 공간을 결정함 (2가지 값 가능)
    &lt;ul&gt;
      &lt;li&gt;MainAxisSize.max : default value, 행과 열이 main axis 모든 공간 차지, children(widgets) 합이 main axis보다 작아도 추가 공간 가짐&lt;/li&gt;
      &lt;li&gt;MainAxisSize.min : 행과 열은 main axis에서 children(widgets)를 위한 공간만 차지, chidren은 여분의 공간과 주축의 중앙에 배치&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;flexible-widget&quot;&gt;Flexible widget&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;행과 열은 먼저 고정 된 크기의 위젯을 배치하며 이 후에 스스로 크기를 조정할 수 없기 때문에 inflexible로 간주&lt;/li&gt;
  &lt;li&gt;플렉서블 위젯은 위젯을 래핑하므로 위젯의 크기를 조정할 수 있음
    &lt;ul&gt;
      &lt;li&gt;FlexFit.loose&lt;/li&gt;
      &lt;li&gt;FlexFit.tight
        &lt;h2 id=&quot;expanded-widget&quot;&gt;Expanded widget&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 17 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/17/flutter-layout-concepts-codelab/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/17/flutter-layout-concepts-codelab/</guid>
        
        <category>Flutter</category>
        
        <category>ERROR</category>
        
        <category>Web</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>(Flutter) Web build Error 해결</title>
        <description>&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This application is not configured to build on the web.
To add web support to a project, run `flutter create .`.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flutter create . &lt;/code&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &quot;Flutter-Instagram-UI-Clone&quot; is not a valid Dart package name.

 From the [Pubspec format description](https://www.dartlang.org/tools/pub/pubspec.html):

 **DO** use `lowercase_with_underscores` for package names.

 Package names should be all lowercase, with underscores to separate words,
 `just_like_this`.  Use only basic Latin letters and Arabic digits: [a-z0-9_].
 Also, make sure the name is a valid Dart 	identifier -- that it doesn't start
 with digits and isn't a reserved word.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;package 이름 &lt;strong&gt;소문자+언더바&lt;/strong&gt;로 수정 후 rebuild&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/16/flutter-web-build-error/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/16/flutter-web-build-error/</guid>
        
        <category>Flutter</category>
        
        <category>ERROR</category>
        
        <category>Web</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>(Flutter) AndroidX migration Error 해결</title>
        <description>&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;p&gt;Flutter Android build 시 에러&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Launching lib/main.dart on Android SDK built for x86 in debug mode...
[!] Your app isn't using AndroidX.
    To avoid potential build failures, you can quickly migrate your app by following the steps on https://goo.gl/CP92wY.
Running Gradle task 'assembleDebug'...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://goo.gl/CP92wY&quot;&gt;AndroidX Migration&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Android Studio 3.2 이상 필요함 &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;https://developer.android.com/studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Android Studio 를 실행하고 &lt;strong&gt;Open an existing Android Studio Project&lt;/strong&gt; 선택&lt;/li&gt;
  &lt;li&gt;(Flutter 프로젝트 루트 디렉토리가 아니라) &lt;strong&gt;Flutter 프로젝트 내 Anroid 디렉토리&lt;/strong&gt;를 오픈&lt;/li&gt;
  &lt;li&gt;프로젝트 &lt;strong&gt;Sync successfully&lt;/strong&gt; 될때까지 기다린다. (프로젝트를 열면 자동으로 Sync 하지만 그렇지 않은 경우 &lt;strong&gt;File&lt;/strong&gt; 메뉴에서 &lt;strong&gt;Sync Project with Gradle Files&lt;/strong&gt;를 선택)
    &lt;ul&gt;
      &lt;li&gt;ERROR : No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android
        &lt;ul&gt;
          &lt;li&gt;Solution : &lt;strong&gt;app 수준의 buile.gradle&lt;/strong&gt; 에서 &lt;strong&gt;com.android.tools.build:gradle:3.2.1&lt;/strong&gt;로  gradle 올리기 &lt;a href=&quot;https://ddaying.tistory.com/82&quot;&gt;ref&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;gradle &amp;gt; wrapper &amp;gt; gradle-wrapper.properties&lt;/strong&gt; 에서 &lt;strong&gt;distributionUrl=https://services.gradle.org/distributions/gradle-4.10.2-all.zip&lt;/strong&gt; 로 올리기&lt;/li&gt;
      &lt;li&gt;Warning : The option setting ‘android.enableR8=true’ is experimental and unsupported.
The current default is ‘false’
Consider disabling R8 by removing ‘android.enableR8=true’ from your gradle.properties before publishing your app.
        &lt;ul&gt;
          &lt;li&gt;Solution : &lt;strong&gt;gradle.properties&lt;/strong&gt;에서 &lt;strong&gt;android.enableR8 = true&lt;/strong&gt; 제거&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Android 디렉토리 오른쪽 클릭 후 &lt;strong&gt;Refactor &amp;gt; Migrate to AndroidX&lt;/strong&gt; 선택
    &lt;ul&gt;
      &lt;li&gt;ERROR :&lt;/li&gt;
    &lt;/ul&gt;
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/flutter_androidx_1.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; - Solution : **build.gradle** 에서 **compileSdkVersion, targetSdkVersion** 을 **28**로 수정
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/flutter/2019/12/16/flutter-androidx-migration/</link>
        <guid isPermaLink="true">http://localhost:4000/flutter/2019/12/16/flutter-androidx-migration/</guid>
        
        <category>Flutter</category>
        
        <category>ERROR</category>
        
        <category>AndroidX</category>
        
        
        <category>Flutter</category>
        
      </item>
    
      <item>
        <title>딥러닝(3) - Backpropagation</title>
        <description>&lt;h1 id=&quot;backpropagation&quot;&gt;Backpropagation&lt;/h1&gt;

&lt;h2 id=&quot;역전파란-backpropagation&quot;&gt;역전파란? Backpropagation?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;지난 시간까지는 Input에서 Output으로 가중치를 업데이트하면서 활성화 함수를 통해서 결과값을 가져오는 것까지 배웠다. 이렇게 쭉 오는 것을 순전파(foward)라고 하며 말 그대로 앞쪽으로 input 값을 전파, 보내는 것이라고 보면 된다.&lt;/li&gt;
  &lt;li&gt;하지만 우리가 임의로 한 번 순전파 했다고 출력 값이 정확하지는 않을 것이다. 우리가 임의로 설정한 가중치 값이 input에 의해서 한 번 업데이트 되긴 했지만 많은 문제가 있을 수 있다.&lt;/li&gt;
  &lt;li&gt;역전파 방법은 결과 값을 통해서 다시 역으로 input 방향으로 오차를 다시 보내며 가중치를 재업데이트 하는 것이다. 물론 결과에 영향을 많이 미친 노드(뉴런)에 더 많은 오차를 돌려줄 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/backpropagation_3.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;위의 그림을 보면 Input이 들어오는 방향(순전파)으로 output layer에서 결과 값이 나온다. 결과값은 오차(error)를 가지게 되는데 역전파는 이 오차(error)를 다시 역방향으로 hidden layer와 input layer로 오차를 다시 보내면서 가중치를 계산하면서 output에서 발생했던 오차를 적용시키는 것이다.&lt;/li&gt;
  &lt;li&gt;한 번 돌리는 것을 1 epoch 주기라고 하며 epoch를 늘릴 수록 가중치가 계속 업데이트(학습)되면서 점점 오차가 줄어나가는 방법이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/backpropagation_4.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;위의 그림을 보면 Output layer에서 나온 결과 값이 가진 오차가 0.6이라고 되어 있다. 이전 노드(뉴런에서) Output layer에 각각 3, 2라는 값을 전달하였기 때문에 Ouput의 Error에 위 노드는 60%, 아래 노드는 40% 영향을 주었다고 볼 수 있다. 균등하게 가중치를 나눠줄 수 있지만 영향을 미친 만큼 오차를 다시 역전파하는게 맞는 것 같다.&lt;/li&gt;
  &lt;li&gt;error 0.6을 0.6, 0.4를 곱하니  위 노드에는 error가 0.36이, 아래 노드에는 0.24가 전달된다.&lt;/li&gt;
  &lt;li&gt;오차 역전파는 말 그대로 이렇게 오차를 점점 거슬러 올라가면서 다시 전파하는 것을 의미한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/backpropagation.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;왜-역전파를-사용하는가-why-we-use-backpropagation&quot;&gt;왜 역전파를 사용하는가? Why we use Backpropagation?&lt;/h2&gt;
&lt;p&gt;입력 데이터를 정확히 분류할 수 있는 최적의 Weight와 Bias를 찾기 위해 역전파를 실시한다.
만약 역전파가 없다면 사람이 일일이 계산해야 하는데 그것은 현실적으로 불가능하다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/backpropagation_2.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;역전파-순서-backpropagation-flow&quot;&gt;역전파 순서 Backpropagation Flow&lt;/h2&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/flow.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://subinium.github.io/Keras-1/&quot;&gt;https://subinium.github.io/Keras-1/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sacko.tistory.com/17?category=632408&quot;&gt;https://sacko.tistory.com/17?category=632408&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sacko.tistory.com/37?category=632408&quot;&gt;https://sacko.tistory.com/37?category=632408&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rickiepark/deep-learning-with-python-notebooks&quot;&gt;https://github.com/rickiepark/deep-learning-with-python-notebooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 24 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/deep%20learning/2019/11/24/DL(3)/</link>
        <guid isPermaLink="true">http://localhost:4000/deep%20learning/2019/11/24/DL(3)/</guid>
        
        <category>Backpropagation</category>
        
        <category>Deep Learning</category>
        
        
        <category>Deep Learning</category>
        
      </item>
    
      <item>
        <title>딥러닝(2) - Multi Layer Network, Activate Function, Loss Function</title>
        <description>&lt;h1 id=&quot;1-신경망-neural-network&quot;&gt;1. 신경망 (Neural Network)&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;퍼셉트론이 가중치를 직접 수동으로 설정하는 작업을 했다는 한계가 있었는데 이를 해결할 방법이 바로 신경망이다. 
딥러닝을 이야기할 때 ‘자동으로 알아서 학습하는’ 이라는 말을 많이 한다.
알아서 가중치 값을 설정하고 조정하는 것이 자동으로 학습한다는 말과 동일하며 이것이 신경망의 가장 큰 특징 중 하나이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;11-다중-퍼셉트론과-신경망-multi-layer-perceptron--neural-network&quot;&gt;1.1. 다중 퍼셉트론과 신경망 (Multi Layer Perceptron &amp;amp; Neural Network)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;단일 퍼셉트론 : 여러 개의 신호가 들어오면 이를 조합하여 다음으로 신호를 보낼지 말지 &lt;strong&gt;유무&lt;/strong&gt;(0 또는 1)를 결정한다.&lt;/li&gt;
  &lt;li&gt;다중 퍼셉트론 : 단일 퍼셉트론을 발전 시킨 개념으로 하나의 단일 퍼셉트론에 여러 신호가 들어오면, 다음 퍼셉트론에 보낼 신호의 &lt;strong&gt;강도&lt;/strong&gt;를 결정한다. XOR과 같은 비선형 분리도 가능해진다.&lt;/li&gt;
  &lt;li&gt;신경망 구성
    &lt;ul&gt;
      &lt;li&gt;Input(입력층)&lt;/li&gt;
      &lt;li&gt;Hidden(은닉층)&lt;/li&gt;
      &lt;li&gt;Output(출력층)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/multi_layer_network.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;12-활성화-함수-activate-function&quot;&gt;1.2. 활성화 함수 (Activate Function)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;불필요한 모든 자극(Input)에 반응(Output) 한다면 제대로 된 학습이 되었다고 할 수 없다. 
다양하고 수많은 Input 중에 의미 있는 정보만 다음 Perceptron으로 보내야 좋은 신경망이라 할 수 있다. 
이때 다음 퍼셉트론으로 전달하거나 출력하는 값를 정하는(변환하는) 방법이 활성화 함수이다. 
활성화 함수는 모든 입력값을 연산 후 그대로 출력값을 내보내지 않고 변환시켜 내보낸다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;단일 퍼셉트론 : 여러 개의 신호가 들어오면 이를 조합하여 다음으로 신호를 보낼지 말지 &lt;strong&gt;유무&lt;/strong&gt;(0 또는 1)를 결정한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;step function(임계값을 넘어섰을 때 출력을 1로 하는 함수)을 활성화 함수로 사용한 모델&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다중 퍼셉트론 : 단일 퍼셉트론을 발전 시킨 개념으로 하나의 단일 퍼셉트론에 여러 신호가 들어오면, 다음 퍼셉트론에 보낼 신호의 &lt;strong&gt;강도&lt;/strong&gt;를 결정한다. XOR과 같은 비선형 분리도 가능해진다.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;층이 여러개이며 sigmoid function을 활성화 함수로 사용하는 네트워크&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;121-linear-activation-function-linear-function&quot;&gt;1.2.1. Linear Activation Function (=Linear Function)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;선형함수는 복잡한 신경망을 쌓을 수 없다.&lt;/li&gt;
  &lt;li&gt;선형함수는 Backpropagation(역전파)이 불가능하다. (왜냐하면 미분값은 상수이기 때문에 입력값과 상관없는 결과를 얻게된다)
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;왜 비션형 함수를 사용해야하는가?&lt;/strong&gt;
선형함수를 사용했을 때는 은닉층을 사용하는 이점이 없기 때문이다. 
다시 말해 선형함수를 여러층으로 구성한다 하더라도 이는 선형함수를 세번 연속 반복한 것에 지나지 않는다는 의미와 같기 때문이다. 
$y = ax$라는 선형함수가 있다고 한다면 이 것을 3층으로 구성하면 $y = a(a(a(x)))$ 와 동일한 것으로 이는 $y = a^3(x)$와 같다. 굳이 은닉층 없이 선형함수로 네트워크를 구성하는 것은 의미가 없다는 뜻이다. 
1.2.2.부터는 모두 비선형함수이다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/linear_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;122-binary-step-function-step-function&quot;&gt;1.2.2. Binary Step Function (=Step Function)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;임계치를 기준으로 출력을 해준다.&lt;/li&gt;
  &lt;li&gt;0보다 크면 1 / 0보다 작으면 0으로 분류를 해준다.&lt;/li&gt;
  &lt;li&gt;이 함수로는 비선형 문제, 다중 분류 문제를 해결할 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/step_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;123-sigmoid-function&quot;&gt;1.2.3. Sigmoid Function&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;미분 식이 단순한 형태를 가진다.&lt;/li&gt;
  &lt;li&gt;출력값의 범위가 0과 1로 제한되어 Exploding Gradient 문제를 방지한다.&lt;/li&gt;
  &lt;li&gt;하지만 역으로 Vanishing Gradiend 문제가 발생한다.&lt;/li&gt;
  &lt;li&gt;exp 연산 비용이 크다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/sigmoid_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;s(t)=\frac{1}{1+e^{-t}}&lt;/script&gt;

&lt;p&gt;($e^{-t}$ : 자연로그의 역함수인 지수 함수)
($e$ : 오일러 상수; 근사값=$2.718281828459…$)&lt;/p&gt;

&lt;h3 id=&quot;124-tahn-function&quot;&gt;1.2.4. Tahn Function&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;장단점이 sigmoid와 유사하다.&lt;/li&gt;
  &lt;li&gt;Sigmoid와 같이 잘 사용하지 않는 함수이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/tahn_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;125-relu-function&quot;&gt;1.2.5 Relu Function&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;선형 함수의 개선된 버전이다. ( Rectified Linear Function )&lt;/li&gt;
  &lt;li&gt;CNN에서 좋은 성능을 보였고, 현재 딥러닝에서 가장 많이 사용하는 활성화 함수이다.&lt;/li&gt;
  &lt;li&gt;실제 뇌와 같이 모든 정보에 반응하는 것이 나닌 일부 정보에 대해 무시와 수용을 통해 보다 효율적인 결과를 낸다.&lt;/li&gt;
  &lt;li&gt;미분값이 상수가 아닌 함수이며 backpropagation을 허용한다.&lt;/li&gt;
  &lt;li&gt;비선형함수이고 도함수를 가지며 backpropagation을 허용한다.
    &lt;ul&gt;
      &lt;li&gt;도함수 : (유)도함수, 미분 원하는 함수를 미분계수 구하는 식에 a대신 x로 넣었을 떄 모두 유도 된 함수를 도함수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/relu_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;126-swish--leacky-relu--elu&quot;&gt;1.2.6 Swish &amp;amp; Leacky ReLU &amp;amp; ELU&lt;/h3&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/swish_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/leaky_relu_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/elu_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;13-다차원-배열-연산&quot;&gt;1.3. 다차원 배열 연산&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;앞서 설명한 가중치의 값을 보다 편하게 하기 위해서 행렬 연산을 이용하는 것이다. 한 두개의 신경망 층은 인간이 계산할 수 있을지 모르겠지만 그 이상의 수 많은 차원의 수많은 뉴런층으로 구성된 신경망의 weight를 일일이 계산하는 것은 불가능한 일이다. 이를 컴퓨팅적으로도 쉽게 할 수 있도록 돕는 것이 행렬 연산이다.&lt;/li&gt;
  &lt;li&gt;여기서 중요한 개념은 다차원 배열(행렬) 간의 곱 연산이다. 행렬의 곱이 성립하기 위해서는 기본적으로 아래의 조건을 따라야 한다. 
&lt;script type=&quot;math/tex&quot;&gt;a \times b  *  c \times d  =  a \times d \ (when \ b = c )&lt;/script&gt;
    &lt;ul&gt;
      &lt;li&gt;$*$(곱 연산)의 안쪽에 있는 $b$와 $c$의 값이 일치해야 하며, 곱 연산을 했을 때 결과값은 $a \times d$의 형태로 나온다는 점이다. 이는 한쪽이 1차원 배열일 때도 동일하게 적용된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/times.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;이런식으로 어떤 층의 노드(뉴런)의 개수가 몇 개가 되든 (위에서는 3개) 한 번의 연산으로 이 작업을 빠르게 수행할 수 있다. 행렬의 내적은 신경망에서 아주 중요한 개념인 것이다. 층이 몇 개이든 이와 같은 방법으로 가중치를 계속해서 계산해 나가는 것이라고 보면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;14-신경망-용어-정의&quot;&gt;1.4. 신경망 용어 정의&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;타깃(target) : 기대 출력&lt;/li&gt;
  &lt;li&gt;매핑(mapping) : 입력과 타깃의 관계로 입력을 representation로 변환, 연관시키는 것&lt;/li&gt;
  &lt;li&gt;가중치(weight) : 머신 러닝, 딥러닝 모두 결국은 가장 효율적인 식을 찾는 것이 목표이며, 이런 식 또는 식에 필요한 파라미터&lt;/li&gt;
  &lt;li&gt;손실함수(loss function) : 타깃과 출력값의 차이를 계산하는 함수&lt;/li&gt;
  &lt;li&gt;역전파(Backpropagation) : 손실함수의 결과를 개선하기 위해서 다시 결과에서부터 가중치를 수정하는 과정,  이를 옵티마이저(optimizer)가 담당&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;15-신경망의-훈련-순서&quot;&gt;1.5. 신경망의 훈련 순서&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;데이터를 입력한다.&lt;/li&gt;
  &lt;li&gt;여러 layer를 통해 예상 결과값을 만든다. (매핑)&lt;/li&gt;
  &lt;li&gt;실제 값과 비교해서 그 차이를 구한다. (타깃과 손실함수)&lt;/li&gt;
  &lt;li&gt;차이를 줄이기 위한 방법으로 앞의 layer들의 가중치를 수정해준다. (역전파)&lt;/li&gt;
  &lt;li&gt;이 방법의 반복으로 규칙을 계속 개선한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/flowchart.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;16-신경망-3층-구현하기&quot;&gt;1.6. 신경망 3층 구현하기&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init_network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'b3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b3&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a3&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-loss-function&quot;&gt;2. Loss Function&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;Neural Net을 거쳐서 나온 결과값과 실제 결과 값의 차이를 계산하는 함수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl2/loss_function.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;21-손실함수를-왜-사용하는가&quot;&gt;2.1. 손실함수를 왜 사용하는가?&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Loss Function이 있어야 학습이 올바르게 진행되는지를 알 수 있다.&lt;/li&gt;
  &lt;li&gt;Loss function은 연속적으로 변화되는 값을 표시한다.
    &lt;ul&gt;
      &lt;li&gt;정답률을 파라미터로 사용하면,&lt;/li&gt;
      &lt;li&gt;100개 중 33개가 정답으로 판명된다면 정답률은 33%이다.&lt;/li&gt;
      &lt;li&gt;만약 정확도를 개선한다 하더라도 33.32%와 값이 연속적인 값으로 변화하지 않는다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;22-손실함수-종류&quot;&gt;2.2. 손실함수 종류&lt;/h2&gt;
&lt;h3 id=&quot;221-mse&quot;&gt;2.2.1. MSE&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;MSE = \frac{1}{n} \sum_{i=1}^N (y_i-\tilde{y}_i)^2&lt;/script&gt;

&lt;h3 id=&quot;222-cross-function&quot;&gt;2.2.2. Cross Function&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathcal{L} (y_i-\tilde{y}_i) = - \sum_{i=1}^N y_i \log \hat{y_i}&lt;/script&gt;

&lt;h2 id=&quot;23-손실함수-테스트&quot;&gt;2.3. 손실함수 테스트&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Mean Squared Error 를 python으로 구현 해보자.&lt;/li&gt;
  &lt;li&gt;Cross Entropy Error를 python을 구현 해보자.&lt;/li&gt;
  &lt;li&gt;실제 테스트를 해보자.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://subinium.github.io/Keras-1/&quot;&gt;https://subinium.github.io/Keras-1/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sacko.tistory.com/17?category=632408&quot;&gt;https://sacko.tistory.com/17?category=632408&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sacko.tistory.com/37?category=632408&quot;&gt;https://sacko.tistory.com/37?category=632408&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/deep%20learning/2019/11/21/DL(2)-mulit-layer-network-activate-function-loss-function-copy/</link>
        <guid isPermaLink="true">http://localhost:4000/deep%20learning/2019/11/21/DL(2)-mulit-layer-network-activate-function-loss-function-copy/</guid>
        
        <category>Activate Function</category>
        
        <category>Loss Function</category>
        
        <category>Deep Learning</category>
        
        
        <category>Deep Learning</category>
        
      </item>
    
      <item>
        <title>딥러닝(1) - 퍼셉트론</title>
        <description>&lt;h1 id=&quot;1-들어가기-전에&quot;&gt;1. 들어가기 전에&lt;/h1&gt;
&lt;h2 id=&quot;11-ai의-역사&quot;&gt;1.1. AI의 역사&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1943년: 최초 신경망 모델 제안&lt;/li&gt;
  &lt;li&gt;1950년: 앨런 튜링이 튜링 테스트 제안&lt;/li&gt;
  &lt;li&gt;(첫 번째 AI 붐) 1950년대 후반 ~ 1970년대 전반
    &lt;ul&gt;
      &lt;li&gt;1956년 : 미국 다트머스의 학회에서 AI 이란 용어 처음 사용&lt;/li&gt;
      &lt;li&gt;1957년 : 코넬 항공 연구소 프랑크 로젠이 Perceptron 고안&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(두 번째 AI 붐) 1980년대: 주로 컴퓨터가 자율적으로 배우고 결정하는 종류가 아닌 인간으로부터 지식을 얻음&lt;/li&gt;
  &lt;li&gt;1990년대: 세계 체스 챔피언을 물리 친 AI&lt;/li&gt;
  &lt;li&gt;(세 번째 AI 붐) 2010년대: 딥 러닝 (머신 러닝)이라는 새로운 기술이 각광&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/history.jpg&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;12-ai-ml-dl&quot;&gt;1.2. AI, ML, DL&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;AI(Artificial Intelligence): 사고나 학습 등 인간이 가진 지적 능력을 컴퓨터를 통해 구현하는 기술&lt;/li&gt;
  &lt;li&gt;ML(Machine Learning): 컴퓨터가 스스로 학습하여 인공지능의 성능을 향상시키는 기술&lt;/li&gt;
  &lt;li&gt;DL(Deep Learning): 인간의 뉴런과 비슷한 인공신경망 방식으로 정보를 처리하는 기술&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/ai_ml_dl.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;13-machine-learning&quot;&gt;1.3. Machine Learning&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;먼저 그림과 같이 컴퓨터에게 문제와 답을 알려줍니다.&lt;/li&gt;
  &lt;li&gt;이후, 관련 문제를 내면 컴퓨터가 정답을 알아 맞추게 됩니다.
    &lt;blockquote&gt;
      &lt;p&gt;이것이 가능한 이유는 컴퓨터가 데이터(문제) 답(label)으로 학습하며 직접 프로그램(알고리즘)을 작성하기 때문&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/ml.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;종류&quot;&gt;종류&lt;/h3&gt;
&lt;h4 id=&quot;1-지도학습-supervised-learning&quot;&gt;1) 지도학습 (Supervised Learning)&lt;/h4&gt;
&lt;p&gt;훈련데이터와 정답을 가지며, 데이터를 분류/예측하는 함수를 만들어내는 기계학습 방법&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;분류: KNN(K-Nearest Neighbors), 나이브 베이즈, 결정트리, 서포트 벡터머신, 아프리오 알고리즘&lt;/li&gt;
  &lt;li&gt;회귀: 선형회귀(Linear Regression), 신경망&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-비지도학습-unsupervisedpredictive-learning&quot;&gt;2) 비지도학습 (Unsupervised/Predictive Learning)&lt;/h4&gt;
&lt;p&gt;정답없이 훈련데이터만 가지고 데이터로부터 숨겨진 패턴을 탐색하는 기계학습의 방법&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;클러스터링: 연관규칙(apriori), k-means&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-강화학습-reinforcement-learning&quot;&gt;3) 강화학습 (Reinforcement Learning)&lt;/h4&gt;
&lt;p&gt;어떤 환경에서 정의된 에이전트가 현재 상태를 인식하여 선택 가능한 행동들 중 보상을 최대화하는 행동 혹은 행동 순서를 선택하는 방법&lt;/p&gt;

&lt;h2 id=&quot;14-deep-learning&quot;&gt;1.4. Deep Learning&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;딥 러닝은 최신 인공 신경망(Artificial neural network) 기술로 인간 두뇌의 메커니즘을 시뮬레이션&lt;/li&gt;
  &lt;li&gt;인간의 뇌는 정보를 전달하기 위해 뉴런(neuron)과 뉴런들을 연결하는 시냅스(synapse)로 구성&lt;/li&gt;
  &lt;li&gt;인공 신경망(또는 단순히 신경망이라고 함)은 이러한 뉴런과 시냅스를 모델링&lt;/li&gt;
  &lt;li&gt;이 모델은 두 번째 AI 붐 중에 적극적으로 연구되었지만 레이어 매우 작았고, 이후 기술 발전으로 인해 대규모 네트워크로 확장되어 컴퓨터가 심층 학습을 실행할 수 있게됨&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/neural_network.jpg&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h1 id=&quot;2-perceptron&quot;&gt;2. Perceptron&lt;/h1&gt;

&lt;h2 id=&quot;21-개념&quot;&gt;2.1. 개념&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1943년 미국 신경외과 의사인 워렌 멕컬록에 의해서 발단이 되었고, 1957년 코넬 항공 연구소(Cornell Aeronautical Lab)의 프랑크 로젠블라트(Frank Rosenblatt)가 퍼셉트론 알고리즘을 고안했습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;neuron과-threshold&quot;&gt;Neuron과 Threshold&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;뉴런은 특정 자극(impulse) 이 있다면 그 자극이 어느 역치(threshold) 이상이여야 활성화(activation)&lt;/li&gt;
  &lt;li&gt;활동전위(action potential)가 축삭(axon)을 따라 내려가면서 세포막 안팎의 극성이 변화 -&amp;gt; 다른 뉴런에서 온 신호에 반응하여 막이 역치(threshold) 전위에 도달하면 Na+ 및 K+ 개폐 이온 채널이 여닫힘 -&amp;gt; 활동전위가 시작될 때 Na+ 채널이 열리고 Na+가 축삭 안으로 들어와 탈분극(Depolarization) -&amp;gt; 재분극은 K+ 채널이 열리고 K+가 축삭 밖으로 나갈 때 일어남 -&amp;gt; 채널의 개폐로 세포 안팎 극성이 변화 -&amp;gt; 신경 자극은 한 방향으로만 이동하여 축삭 말단(axon ending)에서 다른 뉴런으로 신호를 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/action_potential.gif&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/action_potential.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h3 id=&quot;perceptron과-theta&quot;&gt;Perceptron과 $\theta$&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;뉴런을 모방함&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/neural_network_perceptron.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;입력(input) 신호의 총합이 정해진 임계값($\theta$) 넘었을 때 $1$을 출력(output), 넘지 못하면 $0$ 또는 $-1$ 출력&lt;/li&gt;
  &lt;li&gt;각 입력신호에 고유한 weight 부여되며 기계학습은 이 weight(입력을 조절하니 매개변수로도 볼 수 있음)의 값을 정하는 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron_1.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron_2.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron_3.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron_4.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;22-학습-방법&quot;&gt;2.2. 학습 방법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;처음에는 인간이 임의로 weight로 시작&lt;/li&gt;
  &lt;li&gt;머신이 학습 데이터를 퍼셉트론 모형에 입력하며 분류가 잘못됐을 때 weight를 개선 (인간이 문제 틀렸을 때 다시 푸는 것과 유사 -&amp;gt; 학습이라고 부름)&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/machine_learning.jpg&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;23-가중치weight와-편향bias&quot;&gt;2.3. 가중치(weight)와 편향(bias)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;앞의 퍼셉트론 수식에서 나오는 세타$\theta$를 $-b$로 치환하여 좌변으로 넘기면 아래와 같이 되며 여기에서 $b$를 편향(bias)라고 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix}
b+w_1x_1+w_2x_2&lt;0 \Rightarrow 0\\
b+w_1x_1+w_2x_2 \geqq 0 \Rightarrow 1
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;기계학습 분야에서는 모델이 학습 데이터에 과적합(overfitting)되는 것을 방지하는 것이 중요
    &lt;ul&gt;
      &lt;li&gt;과적합: 모델이 엄청 유연해서 학습 데이터는 귀신같이 잘 분류하지만, 다른 평가 데이터를 넣어봤을 때는 제대로 성능을 발휘하지 못하는 것을 말한다. 어느 데이터를 넣어도 일반적으로 잘 들어맞는 모델을 만드는 것이 중요하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;편향이 높을 수록 그만큼 분류의 기준이 엄격하다는 것을 의미하며 모델이 간단해지는 경향이 있고 (변수가 적고 더 일반화 되는 경우) 오히려 과소적합(underfitting)의 위험이 발생하게 된다.&lt;/li&gt;
  &lt;li&gt;편향이 낮을수록 한계점이 낮아 데이터의 허용범위가 넓어지는 만큼 학습 데이터에만 잘 들어맞는 모델이 만들어질 수 있으며 모델이 더욱 복잡해질 것이다. 허용범위가 넓어지는 만큼 필요 없는 노이즈가 포함될 가능성도 높다. 이를 편향과 분산의 트레이드오프 관계라고 보통 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;24-선형-분류linear-classifier&quot;&gt;2.4. 선형 분류(linear classifier)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;퍼셉트론의 출력 값은 앞에서 말했듯이 1 또는 0(or -1)이기 때문에 학습 데이터가 선형적으로 분리될 수 있을 때 적합한 알고리즘&lt;/li&gt;
  &lt;li&gt;선형 분류는 평면 상에 선을 쫙 그어서 여기 넘으면 A, 못 넘으면 B 이런식으로 선을 기준으로 분류하는 것 의미&lt;/li&gt;
  &lt;li&gt;학습이 반복될수록 선 기울기 달라짐 (학습을 하면서 weight가 계속 조정됨)&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron_example.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;25-퍼셉트론의-한계점&quot;&gt;2.5. 퍼셉트론의 한계점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;AND와 OR과 같은 선형 데이터는 분류 가능하지만, XOR과 같은 형태의 비선형 데이터는 분류가 불가능하다
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;AND 게이트: x1과 x2 중 모두(and) 1일때 1을 출력&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_1$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_2$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$y$&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;

        &lt;blockquote&gt;
          &lt;h4 id=&quot;python-numpy-패키지&quot;&gt;python numpy 패키지&lt;/h4&gt;
          &lt;ol&gt;
            &lt;li&gt;숫자배열 연산을 위한 라이브러리입니다.&lt;/li&gt;
            &lt;li&gt;numpy array는 파이썬 리스트보다 속도가 빠르며 리스트간 연산에 편의성을 제공합니다.&lt;/li&gt;
            &lt;li&gt;sorting이나 indexing, intersection을 찾는 경우에도 속도가 빠릅니다.&lt;/li&gt;
            &lt;li&gt;평균, 중앙값, 최빈값, 사분위수, 분산, 표준편차를 찾는 경우에도 리스트보다 훨씬 코드가 간단하고 속도가 빠릅니다.&lt;/li&gt;
          &lt;/ol&gt;
        &lt;/blockquote&gt;

        &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#   print(x1, x2)
#   print(w*x)
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array의 곱셈의 합
&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; ==&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;OR 게이트: x1과 x2 중 하나만(or) 1이면 1을 출력&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_1$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_2$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$y$&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;

        &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; ==&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;NAND 게이트: x1과 x2 중 하나만(or) 0이면 1을 출력&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_1$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_2$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$y$&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;

        &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NAND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; ==&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;XOR 게이트: x1과 x2 중 어느 한쪽이 1일 때만 1을 출력 (둘다 1이면 0 출력)&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_1$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$x_2$&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;$y$&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;

        &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/xor.gif&quot; width=&quot;100%&quot; /&gt;&lt;/center&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;한계점이 밝혀지면서 한동안 소외 받았고, 퍼셉트론을 제시한 로젠블랫은 자살 같은 사고로 세상을 떠났고 시간이 흐른 뒤에야 그의 업적이 재조명 받았다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;26-다층-퍼셉트론multi-layer-perceptron을-통한-한계-극복&quot;&gt;2.6. 다층 퍼셉트론(Multi Layer Perceptron)을 통한 한계 극복&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;단층 퍼셉트론: AND, OR, NAND 게이트와 같이 입력층에 가중치를 곱해 바로 출력되는 퍼셉트론
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/perceptron.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
  &lt;/li&gt;
  &lt;li&gt;다층 퍼셉트론: 퍼셉트론을 층으로 쌓은 것으로,입력층과 출력층 사이 은닉층이 존재하는 것
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/multi_perceptron.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
  &lt;/li&gt;
  &lt;li&gt;위와 같은 다층 퍼셉트론(AND, OR, NAND를 조합)으로 XOR 게이트를 구현할 수 있음
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/XOR_1.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;
    &lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/dl1/gate.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;$x_1$&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;$x_2$&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;$s_1$&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;$s_2$&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;$y$&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;XOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; ==&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://journal.jp.fujitsu.com/en/2016/02/09/01/&quot;&gt;https://journal.jp.fujitsu.com/en/2016/02/09/01/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sacko.tistory.com/10?category=632408&quot;&gt;https://sacko.tistory.com/10?category=632408&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.neuraldesigner.com/blog/perceptron-the-main-component-of-neural-networks&quot;&gt;https://www.neuraldesigner.com/blog/perceptron-the-main-component-of-neural-networks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chaitjo/Perceptron&quot;&gt;https://github.com/chaitjo/Perceptron&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ecee.colorado.edu/~ecen4831/lectures/NNet3.html&quot;&gt;http://ecee.colorado.edu/~ecen4831/lectures/NNet3.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/deep%20learning/2019/11/14/DL(1)-perceptron/</link>
        <guid isPermaLink="true">http://localhost:4000/deep%20learning/2019/11/14/DL(1)-perceptron/</guid>
        
        <category>Perceptron</category>
        
        <category>Deep Learning</category>
        
        
        <category>Deep Learning</category>
        
      </item>
    
      <item>
        <title>(MySQL Workbench) MySQL Dump ERROR</title>
        <description>&lt;h1 id=&quot;mysql-workbench---mysql-dump-error&quot;&gt;MySQL Workbench - MySQL Dump ERROR&lt;/h1&gt;
&lt;h2 id=&quot;내용&quot;&gt;내용&lt;/h2&gt;
&lt;p&gt;MySQL Workbench에서 Data Export 시,
Unknown table ‘column_statistics’ in information_schema (1109) Error 나오면서 실패&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql -V
mysql  Ver 15.1 Distrib 10.3.13-MariaDB, for osx10.14 (x86_64) using readline 5.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;해결&quot;&gt;해결&lt;/h2&gt;
&lt;p&gt;MySQL Workbench -&amp;gt; Preference -&amp;gt; Administration -&amp;gt; Path to mysqldump Tool: /usr/local/Cellar/mariadb/10.3.13_1/bin/mysqldump&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql%20workbench/2019/11/12/mysqlworkbench-mysqldump-error/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql%20workbench/2019/11/12/mysqlworkbench-mysqldump-error/</guid>
        
        <category>MySQL</category>
        
        <category>mysqldump</category>
        
        
        <category>MySQL Workbench</category>
        
      </item>
    
      <item>
        <title>(Docker) Go Docker 빌드 및 실행</title>
        <description>&lt;h1 id=&quot;macos-docker-설치&quot;&gt;(macOS) Docker 설치&lt;/h1&gt;
&lt;p&gt;Install Docker Desktop on Mac
https://docs.docker.com/docker-for-mac/install/&lt;/p&gt;

&lt;h1 id=&quot;docker-image-빌드-및-실행&quot;&gt;Docker image 빌드 및 실행&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;(Dockerfile 없으면) Dockerfile 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Dockerfile References: https://docs.docker.com/engine/reference/builder/

# Start from the latest golang base image
FROM golang:latest

# Add Maintainer Info
LABEL maintainer=&quot;mioscode &amp;lt;mioscode@email.com&amp;gt;&quot;

# Set the Current Working Directory inside the container
WORKDIR /app

## Copy go mod and sum files
# COPY go.mod go.sum ./

## Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
# RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# 
RUN go get github.com/labstack/echo \
 &amp;amp;&amp;amp; go get github.com/dgrijalva/jwt-go

# Build the Go app
RUN go build -o main .

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD [&quot;./main&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;build the Docker image&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker build -t project_name .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;You can list all the available images by typing the following command&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker image ls
REPOSITORY                    TAG                            IMAGE ID            CREATED             SIZE
go-docker                     latest                         ed03a0732734        21 seconds ago      830MB    
golang                        latest                           2422e4d43e15     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Running the Docker image&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run -d -p 8080:8080 project_name
84e43b3651aa0ebf7b1ed843127dd2f4d179bab006e6bcf55a873772f838e99c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Finding Running containers&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
84e43b3651aa        project_name             &quot;./main&quot;            8 minutes ago       Up 8 minutes        0.0.0.0:8080-&amp;gt;8080/tcp   practical_shirley
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Stopping the container&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker container stop 84e43b3651aa
84e43b3651aa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/docker/2019/10/20/go-docker-build-and-run/</link>
        <guid isPermaLink="true">http://localhost:4000/docker/2019/10/20/go-docker-build-and-run/</guid>
        
        <category>Go</category>
        
        <category>Docker</category>
        
        
        <category>Docker</category>
        
      </item>
    
      <item>
        <title>(mac) terminal 명령어</title>
        <description>&lt;h1 id=&quot;mac-terminal-명령어&quot;&gt;(mac) terminal 명령어&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;명령어&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
      &lt;th&gt;옵션, 기타&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man &amp;lt;명령어&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;명령어 도움말 보기&lt;/td&gt;
      &lt;td&gt;종료-&amp;gt;q&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;디렉토리 변경 (change directory) (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;dir&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~/&lt;/code&gt; 사용자의 홈 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~&amp;lt;userid&amp;gt;&lt;/code&gt; userid의 홈 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd -&lt;/code&gt; 바로 앞에 작업한 디렉토리로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd &amp;lt;디렉토리명&amp;gt;&lt;/code&gt; 지정한 directory로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd /&lt;/code&gt; 최상위 root directory로 이동&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ..&lt;/code&gt; 현재 작업 directory의 parent directory로 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 경로 하위 파일/디렉토리 나열 (list of directory) &lt;br /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; 디렉토리 내의 모든파일(.으로 시작되는 파일 포함)을 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 파일의 아이노드(inode)번호를 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; 파일의 크기를 쉬운 단위로 표시(k: 킬로바이트, m: 메가바이트)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 파일의 다양한 정보를 함께 출력(소유자 정보, 권한 정보, 크기, 날짜)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; 파일을 쉼표로 구분하여 가로로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; kb 단위의파일크기를 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; 파일을 최근에 생성된 시간순으로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-F&lt;/code&gt; 파일의 형태와 함께 출력한다(&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 실행파일, &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; 심볼릭링크, &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 디렉토리)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브 디렉토리의 내용을 포함하여 출력(즉 하위 디렉토리 내용을 모두 출력)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-S&lt;/code&gt; 파일을 크기순으로 출력&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt; 도움말 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;관리자 권한으로 실행&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo su root&lt;/code&gt; 루트로 로그인&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;전체 경로 확인&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find &amp;lt;옵션&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일을 이름, 수정날짜, 소유주, 허가 등을 기준으로 하여 검색&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-name &amp;lt;파일명&amp;gt;&lt;/code&gt; 파일명과 일치하는 파일을 찾기&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;. -name &amp;lt;파일명&amp;gt;&lt;/code&gt;현재 디렉토리에서 해당 파일 찾기&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-print&lt;/code&gt; 현재의 경로 이름을 표시&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep &amp;lt;옵션&amp;gt; &amp;lt;패턴&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 안 내용 찾기&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; 파일 내에서 패턴과 일치하는 줄의 총수를 구한다.&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; 여러 개의 파일을 검색할 때, 출력에 파일명이 나타나는 것을 방지한다.&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 대, 소문자를 구별하지 않는다&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; 일치하는 줄의 줄 번호도 같이 출력한다&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; 패턴과 일치하지 않는 줄만 출력한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;history&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;히스토리 보기&lt;/td&gt;
      &lt;td&gt;종료-&amp;gt;q&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;history \ grep &amp;lt;검색어&amp;gt;&lt;/code&gt; 히스토리 안 내용찾기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;화면 클리어 (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;clr&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;ip 보기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat -nat | grep TIME_WAIT | wc -l&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;네트워크&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ps &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 자신이 실행한 프로세스 목록을 출력&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lsof -i :&amp;lt;port번호&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;특정 포트 사용중인 프로세스 출력&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lsof -i -P | grep -i &quot;listen&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;사용중인 프로세스 중 열린(listen) 포트 확인&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill &amp;lt;-signalID&amp;gt; &amp;lt;PID&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;프로세스 kill&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-signalID&lt;/code&gt; 프로세서에게 보낼 시그널을 지정한다. 시그널은 번호로 지정될 도 있고 시그널 이름으로 지정될 수도 있다.(&lt;code class=&quot;highlighter-rouge&quot;&gt;-9&lt;/code&gt;)&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 시그널 종류를 나열한다. 시그널의 종류는 시그널 번호 순서대로 이름으로 나열된다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jobs &amp;lt;옵션&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 진행중인 작업들을 출력&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 현재 작업하고 있는 디렉토리와 프로세스 그룹 ID를 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir &amp;lt;옵션&amp;gt; &amp;lt;디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;새로운 디렉토리 만들기 (make directory)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 만들고자하는 디렉토리의 상위 디렉토리가 없는 경우 상위 디렉토리까지 같이 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir &amp;lt;옵션&amp;gt; &amp;lt;디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;디렉토리 삭제 (remove directory)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 제거된 디렉토리에 대한 메시지가 표시됨&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 제거된 디렉토리에 대한 메시지가 표시되지 않음(Default)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch &amp;lt;파일명.확장자&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 생성&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm &amp;lt;옵션&amp;gt; &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 삭제, 삭제하고자 하는 디렉토리에 파일이나 부 디렉토리가 없어야만 삭제가 가능 (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 디렉토리 안의 파일을 삭제할 때 사용자에게 확인을 요구하지 않음&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 인수 list 에서 지정한 디렉토리 혹은 그 아래의 subdirectory를 삭제&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-rf&lt;/code&gt; 디렉토리 안에 파일, 디렉토리 등 모든 내용물들도 같이 삭제&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; whrite permission 이 없는 파일의 삭제를 위해 대화식으로 확인&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 디렉토리 dir-name과 비어있는 부모 디렉토리를 사용자가 제거할 수 있으며, 전체 경로명이 삭제 되거나 어떤 이유로 인해 경로명의 일부가 남은것과 무관하게 표준출력에 메세지가 출력됨&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s -p&lt;/code&gt; 선택항목 지정시 표준오류에 출력되는 메시지를 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp &amp;lt;옵션&amp;gt; &amp;lt;원본파일명&amp;gt; &amp;lt;목적파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;복사 (copy) (window: &lt;code class=&quot;highlighter-rouge&quot;&gt;copy&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 파일 복사시 동일 파일명이 있을시에 사용자에게 덮어 쓸 것인지를 물어봄&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 동일파일명 발생시에도 모두 강제적으로 복사함&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 원본 파일의 시간 및 소유 권한 보존&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 포함된 자식 디렉토리까지 모두 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mv &amp;lt;옵션&amp;gt; &amp;lt;원본파일명&amp;gt; &amp;lt;새로운파일명/이동할디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일의 위치를 바꾸거나(경로) 이름을 바꾸는데(존재하지 않는 파일명) 사용&lt;br /&gt;한번에 여러 개의 파일 이동도 가능(마지막만 이동할 디렉토리면됨)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 대상 파일이 존재할 대 새로운 파일로 대체&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 대상파일이 있을 때 확인 후 작업, 같은 이름의 파일이 이미 존재하여서 그것을 덮어쓰기를 하지 않으려면 사용&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 파일의 이동 과정을 보여준다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;텍스트 파일 열기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi &amp;lt;파일명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;vim 편집기 실행&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ln -s &amp;lt;타겟 경로&amp;gt; &amp;lt;심볼릭 링크 경로&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;심볼릭 링크 걸기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod &amp;lt;옵션&amp;gt; &amp;lt;파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 권한 변경&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브디렉토리까지 모든 파일의 권한 변경&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;777&lt;/code&gt; 모든 권리&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;755&lt;/code&gt; 읽기만&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;700&lt;/code&gt; 오너만 조작 가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chown &amp;lt;옵션&amp;gt; &amp;lt;파일명/디렉토리명&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 소유자 변경&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 서브디렉토리까지 모든 파일의 권한 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zip &amp;lt;압축파일명.zip&amp;gt; &amp;lt;파일 또는 폴더&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;파일 또는 폴더를 zip으로 압축&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip &amp;lt;압축파일명.zip&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;압축 풀기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;diff&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;두개의 파일이 일치되도록 변경시키기 위한 정보를 제공 man (differential file comparator)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;whoami&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;현재 사용자&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;https://macinjune.com/all-posts/mac/terminal/terminal-mv-command%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EC%98%AE%EA%B8%B0%EA%B8%B0/
https://slayer95.tistory.com/entry/Tip%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%84%B0%EB%AF%B8%EB%84%90-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/terminal/2019/10/10/mac-terminal-command/</link>
        <guid isPermaLink="true">http://localhost:4000/terminal/2019/10/10/mac-terminal-command/</guid>
        
        <category>mac</category>
        
        <category>terminal</category>
        
        <category>command</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>(Python) jupyter notebook 실행</title>
        <description>&lt;h1 id=&quot;jupyter-notebook-실행&quot;&gt;jupyter notebook 실행&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /Users/&amp;lt;사용자계정&amp;gt;/anaconda/python.app -m notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;notebook-저장-경로-변경해서-저장&quot;&gt;notebook 저장 경로 변경해서 저장&lt;/h1&gt;
&lt;p&gt;주피터 노트북은 기본적으로 C:\Users&amp;lt;사용자계정&amp;gt; 폴더에 노트북 파일을 저장
노트북 파일 저장 경로를 바꾸려면 –notebook-dir 옵션에 폴더를 지정&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /Users/&amp;lt;사용자계정&amp;gt;/anaconda/python.app -m notebook --notebook-dir &amp;lt;경로&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://dojang.io/mod/page/view.php?id=2457&quot;&gt;https://dojang.io/mod/page/view.php?id=2457&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/python/2019/09/04/python-jupyter-run/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/09/04/python-jupyter-run/</guid>
        
        <category>Python</category>
        
        <category>jupyter</category>
        
        <category>notebook</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>(mac) terminal에서 port 실행 중인 PID kill</title>
        <description>&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./server.py
Traceback (most recent call last):
  File &quot;./server.py&quot;, line 7, in &amp;lt;module&amp;gt;
    s.bind((host, port))        # Bind to the port
OSError: [Errno 98] Address already in use
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;go&quot;&gt;Go&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./server
2019/09/02 20:12:33 InitDB1
2019/09/02 20:12:33 InitDB2
2019/09/02 20:12:33 Check JWT1
2019/09/02 20:12:33 config%!(EXTRA middleware.JWTConfig={&amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; &amp;lt;nil&amp;gt; [65 38 72 105 83 35 86 81 117 48 88 55] map[]   0xc0001a0000   &amp;lt;nil&amp;gt;})

   ____    __
  / __/___/ /  ___
 / _// __/ _ \/ _ \
/___/\__/_//_/\___/ v4.1.10
High performance, minimalist Go web framework
https://echo.labstack.com
____________________________________O/_______
                                    O\
{&quot;time&quot;:&quot;2019-09-02T20:12:33.851741+09:00&quot;,&quot;level&quot;:&quot;FATAL&quot;,&quot;prefix&quot;:&quot;echo&quot;,&quot;file&quot;:&quot;server.go&quot;,&quot;line&quot;:&quot;86&quot;,&quot;message&quot;:&quot;listen tcp :32101: bind: address already in use&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;
&lt;h2 id=&quot;오류에서-언급한-포트-사용중인-프로세스-확인&quot;&gt;오류에서 언급한 포트 사용중인 프로세스 확인&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsof -i :&amp;lt;port 번호&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsof -i :32101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;프로세스-강제-종료&quot;&gt;프로세스 강제 종료&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kill -9 &amp;lt;process id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;https://stackoverflow.com/questions/17780291/python-socket-error-errno-98-address-already-in-use&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/terminal/2019/09/02/kill-process-using-port/</link>
        <guid isPermaLink="true">http://localhost:4000/terminal/2019/09/02/kill-process-using-port/</guid>
        
        <category>mac</category>
        
        <category>terminal</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>Git 명령어</title>
        <description>&lt;h1 id=&quot;create&quot;&gt;Create&lt;/h1&gt;
&lt;p&gt;원하는 작업 폴더 새로 만들고 폴더 안으로 이동해서 새로운 git 저장소 만들기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd 작업디렉토리
$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;clone&quot;&gt;Clone&lt;/h1&gt;
&lt;h2 id=&quot;local-저장소-복제&quot;&gt;(local) 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone /로컬/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-저장소-복제&quot;&gt;(remote) 저장소 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone 사용자명@호스트:/원격/저장소/경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;변경-사항-제거&quot;&gt;변경 사항 제거&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;로컬 변경을 수행 할 때 파일 범주는 세 가지
Type 1. Staged Tracked files : 준비 됨 – 준비 영역으로 이동 / 색인에 추가됨
Type 2. Unstaged Tracked files : 추적 된 – 수정 된 파일
Type 3. Unstaged UnTracked files a.k.a UnTracked files : 새 파일. 항상 무대 뒤에서. 준비가되면 추적된다는 의미입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;무인-추적-파일-만-제거-type-2&quot;&gt;무인 추적 파일 만 제거 (Type 2)&lt;/h2&gt;
&lt;h3 id=&quot;all&quot;&gt;All&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout . 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;특정-파일&quot;&gt;특정 파일&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -- &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ex) src/hello.c 의 변경을 취소하는 경우&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -- src/hello.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;unstaged-untracked-파일-만-제거-type-3&quot;&gt;Unstaged UnTracked 파일 만 제거 (Type 3)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clean -f 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;단계별-추적-및-비-스테이지-추적-파일을-제거-type-1-type-2&quot;&gt;단계별 추적 및 비 스테이지 추적 파일을 제거 (Type 1, Type 2)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git reset --hard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;모든-변경-사항을-제거-type-1-type-2-type-3&quot;&gt;모든 변경 사항을 제거 (Type 1, Type 2, Type 3)&lt;/h2&gt;
&lt;p&gt;모든 수정 사항을 버리므로 주의&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git stash -u
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;commit&quot;&gt;Commit&lt;/h1&gt;
&lt;h2 id=&quot;변경-파일-index에-추가&quot;&gt;변경 파일 Index에 추가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;변경-내용-확정-commit--head에-반영&quot;&gt;변경 내용 확정 (Commit) = Head에 반영&lt;/h2&gt;
&lt;p&gt;변경 파일들을 로컬 저장소에 등록하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 명령어 사용 &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;은 message&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit -m &quot;이번 확정본에 대한 설명&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;push&quot;&gt;Push&lt;/h1&gt;
&lt;p&gt;변경 내용 발행&lt;/p&gt;

&lt;h2 id=&quot;remote-서버-주소를-git에-등록&quot;&gt;remote 서버 주소를 git에 등록&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin https://~~~.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 origin을 사용하면 원격 저장소에 접근 가능해진다&lt;/p&gt;

&lt;h2 id=&quot;변경-내용-remote-서버에-올리기&quot;&gt;변경 내용 remote 서버에 올리기&lt;/h2&gt;
&lt;p&gt;새로 만든 로컬 branch를 리모트 저장소에 전송하기 전까지는 다른 사람 접근 불가&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;branch-관리&quot;&gt;Branch 관리&lt;/h1&gt;
&lt;h2 id=&quot;local-branch-새로-만들고-변경&quot;&gt;(local) branch 새로 만들고 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -b &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-기존-branch-변경&quot;&gt;(local) 기존 branch 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-branch-삭제&quot;&gt;(local) branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch -d &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;local-branch-목록-보기&quot;&gt;(local) branch 목록 보기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-branch-목록-보기&quot;&gt;(remote) branch 목록 보기&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git branch -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-branch-삭제&quot;&gt;(remote) branch 삭제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin --delete &amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-새로운-branch-복제&quot;&gt;(remote) 새로운 branch 복제&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -t origin/&amp;lt;branch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;pull&quot;&gt;Pull&lt;/h1&gt;
&lt;p&gt;로컬 저장소를 원격 저장소에 맞춰 갱신
원격 저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고(fetch), 병합(merge)&lt;/p&gt;

&lt;h2 id=&quot;remote-fetch&quot;&gt;(remote) fetch&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remote-local-pull&quot;&gt;(remote-&amp;gt;local) pull&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git pull origin &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;status&quot;&gt;Status&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;merge&quot;&gt;Merge&lt;/h1&gt;
&lt;p&gt;다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에 병합하려면 아래 명령 실행&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git merge &amp;lt;brunch 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;충돌 나면 충돌 부분 수정해서 해결&lt;/p&gt;

&lt;p&gt;충돌을 해결했다면, 아래 명령으로 git에게 아까의 파일을 병합하라고 명령&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add &amp;lt;파일 이름&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교 가능&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff &amp;lt;원래 brunch&amp;gt; &amp;lt;비교 대상 brunch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rogerdudler.github.io/git-guide/index.ko.html&quot;&gt;https://rogerdudler.github.io/git-guide/index.ko.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeday.me/ko/qa/20190306/4868.html&quot;&gt;https://codeday.me/ko/qa/20190306/4868.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/09/02/git-command/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/09/02/git-command/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>(Rust) 설치 및 실행 + nightly 버전</title>
        <description>&lt;h1 id=&quot;rust-설치&quot;&gt;Rust 설치&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;설치-확인&quot;&gt;설치 확인&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;nightly-rust&quot;&gt;nightly Rust&lt;/h1&gt;
&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup toolchain install nightly
info: syncing channel updates for 'nightly-x86_64-apple-darwin'
info: latest update on 2019-07-09, rust version 1.38.0-nightly (78ca1bda3 2019-07-08)
info: downloading component 'rustc'
 58.7 MiB /  58.7 MiB (100 %)   7.7 MiB/s in  7s ETA:  0s
info: downloading component 'rust-std'
168.5 MiB / 168.5 MiB (100 %)   7.9 MiB/s in 21s ETA:  0s
info: downloading component 'cargo'
info: downloading component 'rust-docs'
 11.6 MiB /  11.6 MiB (100 %)   8.7 MiB/s in  1s ETA:  0s
info: installing component 'rustc'
 58.7 MiB /  58.7 MiB (100 %)   9.7 MiB/s in  5s ETA:  0s
info: installing component 'rust-std'
168.5 MiB / 168.5 MiB (100 %)  17.5 MiB/s in  9s ETA:  0s
info: installing component 'cargo'
info: installing component 'rust-docs'
 11.6 MiB /  11.6 MiB (100 %)   1.1 MiB/s in  8s ETA:  0s

  nightly-x86_64-apple-darwin installed - rustc 1.38.0-nightly (78ca1bda3 2019-07-08)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;실행&quot;&gt;실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup run nightly rustc --version
rustc 1.38.0-nightly (78ca1bda3 2019-07-08)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;디폴트-설정&quot;&gt;디폴트 설정&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup default nightly
info: using existing install for 'nightly-x86_64-apple-darwin'
info: default toolchain set to 'nightly-x86_64-apple-darwin'

  nightly-x86_64-apple-darwin unchanged - rustc 1.38.0-nightly (78ca1bda3 2019-07-08)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;참고-업데이트&quot;&gt;(참고) 업데이트&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup update

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;build&quot;&gt;Build&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd &amp;lt;프로젝트 폴더&amp;gt;
$ cargo build --release
    Finished release [optimized] target(s) in 0.30s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;error&quot;&gt;Error&lt;/h1&gt;
&lt;h2 id=&quot;내용&quot;&gt;내용&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo build --release
   Compiling rocket v0.4.1
error[E0432]: unresolved import `std::boxed::FnBox`
 --&amp;gt; /Users/somi.han/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.1/src/fairing/ad_hoc.rs:2:5
  |
2 | use std::boxed::FnBox;
  |     ^^^^^^^^^^^^^^^^^ no `FnBox` in `boxed`

error: aborting due to previous error

For more information about this error, try `rustc --explain E0432`.
error: Could not compile `rocket`.

To learn more, run the command again with --verbose.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;해결&quot;&gt;해결&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo --version
cargo 1.37.0-nightly (4c1fa54d1 2019-06-24)
$ cargo update
$ cargo build --release

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rustup.rs#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/rust/2019/07/09/rust-install-build/</link>
        <guid isPermaLink="true">http://localhost:4000/rust/2019/07/09/rust-install-build/</guid>
        
        <category>Rust</category>
        
        <category>nightly</category>
        
        
        <category>Rust</category>
        
      </item>
    
      <item>
        <title>(Vue.js) Quasar 1.0 CLI 설치하기</title>
        <description>&lt;h1 id=&quot;0-환경&quot;&gt;0. 환경&lt;/h1&gt;
&lt;p&gt;node &amp;gt;= 8, npm &amp;gt;= 5 설치되어있는지 확인한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm version    
{ npm: '6.4.1',
  ares: '1.15.0',
  cldr: '33.1',
  http_parser: '2.8.0',
  icu: '62.1',
  modules: '64',
  napi: '3',
  nghttp2: '1.34.0',
  node: '10.15.3',
  openssl: '1.1.0j',
  tz: '2018e',
  unicode: '11.0',
  uv: '1.23.2',
  v8: '6.8.275.32-node.51',
  zlib: '1.2.11' }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ node -v
v10.15.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;1-quasar-cli-설치&quot;&gt;1. Quasar CLI 설치&lt;/h1&gt;
&lt;p&gt;Uninstall quasar-cli if you have it from &amp;lt;1.0 versions&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm uninstall -g quasar-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Node.js &amp;gt;= 8.9.0 is required.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g @quasar/cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;v1.0 + CLI는 v1.0 이전 프로젝트 폴더와도 호환되므로 이전 프로젝트가 더 이상 실행되지 않는다고 걱정할 필요 없다.
Quasar 프로젝트 폴더를 생성하기 위해 vue cli를  더 이상 설치하지 않아도 된다.&lt;/p&gt;

&lt;h1 id=&quot;2-quasar-프로젝트-생성&quot;&gt;2. Quasar 프로젝트 생성&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quasar create &amp;lt;ProjectName&amp;gt;
  ___                             
 / _ \ _   _  __ _ ___  __ _ _ __ 
| | | | | | |/ _` / __|/ _` | '__|
| |_| | |_| | (_| \__ \ (_| | |   
 \__\_\\__,_|\__,_|___/\__,_|_|   

? Project name (internal usage for dev) custody_vue_client
? Project product name (must start with letter if building mobile apps) Quasar App
? Project description A Quasar Framework app
? Author somee.han &amp;lt;somee.han@aiotholdings.com&amp;gt;
? Pick your favorite CSS preprocessor: (can be changed later) Sass
? Pick a Quasar components &amp;amp; directives import strategy: (can be changed later) Auto import
? Check the features needed for your project: ESLint, Vuex, Axios, Vue-i18n, IE11 support
? Pick an ESLint preset: Standard
? Cordova/Capacitor id (disregard if not building mobile apps) com.aiotholdings.custody.mobild.app
? Should we run `npm install` for you after the project has been created? (recommended) NPM

...

 [*] Quasar Project initialization finished!

To get started:

  cd ArgusPoC
  quasar dev

Documentation can be found at: https://quasar.dev

Quasar is relying on donations to evolve. We'd be very grateful if you can
read our manifest on &quot;Why donations are important&quot;: https://quasar.dev/why-donate
Donation campaign: https://donate.quasar.dev
Any amount is very welcomed.
If invoices are required, please first contact razvan@quasar.dev

Please give us a star on Github if you appreciate our work:
https://github.com/quasarframework/quasar

Enjoy! - Quasar Team

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-실행&quot;&gt;3. 실행&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ProjectName
$ quasar dev
...
 app:dev-server Opening default browser at http://localhost:8080/ +11s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://quasar.dev/quasar-cli/installation&quot;&gt;https://quasar.dev/quasar-cli/installation&lt;/a&gt;
&lt;a href=&quot;https://godffs.tistory.com/3268&quot;&gt;https://godffs.tistory.com/3268&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/quasar/2019/07/02/vuejs-quasar-cli-install/</link>
        <guid isPermaLink="true">http://localhost:4000/quasar/2019/07/02/vuejs-quasar-cli-install/</guid>
        
        <category>Vue.js</category>
        
        <category>Quasar</category>
        
        
        <category>Quasar</category>
        
      </item>
    
      <item>
        <title>(Git) 원격저장소 url 변경</title>
        <description>&lt;h1 id=&quot;1-우선-git-이-있는-프로젝트로-이동&quot;&gt;1. 우선 .git 이 있는 프로젝트로 이동&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd myproj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-원격-url을-확인하려면&quot;&gt;2. 원격 URL을 확인하려면&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
origin	ssh://future@imot1/home/git/myproj.git (fetch)
origin	ssh://future@imot1/home/git/myproj.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-이제-다음과-같은-명령으로-변경할-수-있다&quot;&gt;3. 이제 다음과 같은 명령으로 변경할 수 있다.&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote set-url origin ssh://future@localhost:10022/home/git/myproj.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-다시-확인해-보면&quot;&gt;4. 다시 확인해 보면&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
origin	ssh://future@localhost:10022/home/git/myproj.git (fetch)
origin	ssh://future@localhost:10022/home/git/myproj.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;이제는-기존과-동일하게-동작&quot;&gt;이제는 기존과 동일하게 동작&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://egloos.zum.com/mcchae/v/11237088&quot;&gt;http://egloos.zum.com/mcchae/v/11237088&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/github/2019/06/27/git-url-change/</link>
        <guid isPermaLink="true">http://localhost:4000/github/2019/06/27/git-url-change/</guid>
        
        <category>Github</category>
        
        
        <category>Github</category>
        
      </item>
    
      <item>
        <title>마스터링 이더리움 1장~5장</title>
        <description>&lt;h1 id=&quot;1장-이더리움이란-무엇인가&quot;&gt;1장. 이더리움이란 무엇인가?&lt;/h1&gt;
&lt;h2 id=&quot;이더리움&quot;&gt;이더리움?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;“스마트 컨트랙트라는 프로그램을 실행하는 오픈 소스에 기반을 둔, 전 세계에 걸쳐 탈중앙화된 컴퓨팅 인프라스트럭처다.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Blockchain Computer&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;World Computer&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Globally Accesible singleton state and virtual machine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;State Machine&lt;/li&gt;
  &lt;li&gt;Decentralized Computer&lt;/li&gt;
  &lt;li&gt;Platform
    &lt;ul&gt;
      &lt;li&gt;for developer&lt;/li&gt;
      &lt;li&gt;smart contract&lt;/li&gt;
      &lt;li&gt;decentralized application (DApp)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;비트코인-vs-이더리움&quot;&gt;비트코인 vs 이더리움&lt;/h2&gt;
&lt;h3 id=&quot;공통점&quot;&gt;공통점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;P2P&lt;/li&gt;
  &lt;li&gt;Byzantine fault-tolerant consensus&lt;/li&gt;
  &lt;li&gt;디지털 서명과 해쉬&lt;/li&gt;
  &lt;li&gt;디지털 화폐
    &lt;h3 id=&quot;차이점&quot;&gt;차이점&lt;/h3&gt;
    &lt;p&gt;| |비트코인|이더리움|
|—|—|—|
|목적|디지털 화폐 지급 네트워크|유틸리티 화폐|
|컨셉|디지털 화폐|스마트 컨트랙트|
|설계|스크립트 언어|가상 머신 운영(범용 프로그래밍)|
|언어|지불 조건에 대한 단순한 참/거짓 평가에 제한|튜링 완전 언어|
|트랜잭션|send from alice to bob|send from alice to bob if… (date=jan 1,2018, bob’s balance &amp;lt; 10eth)|&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2장-이더리움-기초&quot;&gt;2장. 이더리움 기초&lt;/h1&gt;
&lt;h2 id=&quot;이더-화폐-단위&quot;&gt;이더 화폐 단위&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이더(ether): 기본 단위&lt;/li&gt;
  &lt;li&gt;웨이(wei): 가장 작은 단위
    &lt;ul&gt;
      &lt;li&gt;$1 \ ETH = 1 * 10^{18} \ wei$ (100경(quintillion)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이더의 가치는 항상 이더리움 내부에서 웨이로 표시된 부호 없는 정숫값으로 표현됨
    &lt;ul&gt;
      &lt;li&gt;1이더를 거래할 때, 그 트랜잭션은 1000000000000000000웨이 값으로 인코딩해서 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;월드-컴퓨터&quot;&gt;월드 컴퓨터&lt;/h2&gt;
&lt;h3 id=&quot;evmethereum-virtual-machine-evm&quot;&gt;EVM(Ethereum Virtual Machine, EVM)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;글로벌 싱글톤
    &lt;ul&gt;
      &lt;li&gt;전 세계에 걸친 단일 인스턴스 컴퓨터처럼 작동&lt;/li&gt;
      &lt;li&gt;세상 어디에서든 실행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이더리움 네트워크의 각 노드는 컨트랙트 실행을 확인하기 위해 EVM의 로컬 사본을 실행하고, 이더리움 블록체인은 트랜잭션과 스마트 컨트랙트를 처리할 때 월드 컴퓨터의 변화하는 상태를 기록한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;외부-소유-계정eoa-externally-owned-account-및-컨트랙트contract-account&quot;&gt;외부 소유 계정(EOA, Externally Owned Account) 및 컨트랙트(contract account)&lt;/h2&gt;
&lt;p&gt;| |EOA|컨트랙트|
|—|:-:|:-:|
|개인키 유무|O|X|
|스마트 컨트랙트 코드|X|O|
|역할|자금 또는 컨트랙트에 대한 접근 제어|스마트 컨트랙트의 로직으로 제어|
|트랜잭션 시작|가능(개인키 있으므로)|불가능(개인키 없으므로)|&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스마트 컨트랙트 코드: 컨트랙트 계정 생성 시 이더리움 블록체인에 기록되고 EVM에 의해 실행되는 소프트웨어 프로그램&lt;/li&gt;
  &lt;li&gt;컨트랙트에는 EOA와 마찬가지로 주소가 있으며, 이더를 보내고 받을 수 있다&lt;/li&gt;
  &lt;li&gt;트랜잭션 목적지가 컨트랙트 주소일 때, 트랜잭션과 트랜잭션 데이터를 입력으로 사용하여 컨트랙트가 EVM에서 실행된다(run)&lt;/li&gt;
  &lt;li&gt;컨트랙트는 블록체인에 바이트코드를 등록하는 특별한 트랜잭션에 의해 생성됨&lt;/li&gt;
  &lt;li&gt;컨트랙트가 블록체인에서 생성되면 지갑과 마찬가지로 이더리움 주소를 갖게됨&lt;/li&gt;
  &lt;li&gt;누군가 컨트랙트 주소로 트랜잭션을 보낼 때마다 그 트랜잭션에는 이더, 데이터 또는 둘다 포함할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;트랜잭션이 이더를 포함하면 커트랙트 잔액에 &lt;strong&gt;예치된다&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;데이터가 포함되면 데이터에서는 컨트랙트에 명명된 함수를 지정하고 호출(call)하여 함수에 인수를 전달할 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컨트랙트 계정은 트랜잭션을 실행할 수 없지만, 복잡한 실행 경로를 구축하여 다른 컨트랙트를 호출해서 컨트랙트에 반응(react)할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;예: 다중 서명 스마트 트랜잭션 지갑에 지급요청 트랜잭션을 전송하여 일부 ETH를 다른 주소로 보낼 수 있음
        &lt;ul&gt;
          &lt;li&gt;일반적인 DApp 프로그래밍 패턴은 컨트랙트 A가 컨트랙트 B를 호출하게 하는 것인데, 이렇게 하면 컨트랙트 A의 사용자들 간에 공유된 상태를 유지할 수 있게 됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3장-이더리움-클라이언트&quot;&gt;3장. 이더리움 클라이언트&lt;/h1&gt;
&lt;h2 id=&quot;클라이언트&quot;&gt;클라이언트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Parity, written in Rust&lt;/li&gt;
  &lt;li&gt;Geth, written in Go&lt;/li&gt;
  &lt;li&gt;cpp-ethereum, written in C++&lt;/li&gt;
  &lt;li&gt;py-evm, written in Python&lt;/li&gt;
  &lt;li&gt;Mantis, written in Scala&lt;/li&gt;
  &lt;li&gt;Harmony, written in Java&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4장-암호학&quot;&gt;4장. 암호학&lt;/h1&gt;
&lt;h2 id=&quot;공개키-암호화&quot;&gt;공개키 암호화&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이전 자료 대체&lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;이더리움-주소&quot;&gt;이더리움 주소&lt;/h2&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Keccak-256 단방향 해시 함수를 사용하는 공개키 또는 컨트랙트에서 파생한 고유 식별자(unique identifier)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;private key k&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;k=f8f8a2f43c8376......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;public key K(x, y 좌표가 연결되고 16진수로 표현됨)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;K=6e145ccef...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Keccak-256을 사용해서 공개키의 해시를 계산&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Keccak256(K)=2a5bc342....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;마지막 20바이트(최하위 바이트)만 이더리움 주소로 사용&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;001d3flef827552ae1114027bd3ecf1f086a0f9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;접두어 0x로 표시되어 16진수로 인코딩&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x001d3flef827552ae1114027bd3ecf1f086a0f9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;5장-지갑&quot;&gt;5장. 지갑&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;넓은 의미
이더리움 주요 사용자 인터페이스를 제공하는 소프트웨어 애플리케이션&lt;/li&gt;
    &lt;li&gt;좁은 의미(개발자 시각)
사용자의 키를 보괂고 관리하기 위해 사용되는 시스템을 의미하며 모든 지갑은 키 관리 구성요소를 갖고 있다. (그 자체로 전부인 지갑, 브라우저 일부, DApp의 일부 등)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;h3 id=&quot;지갑-설계-고려사항&quot;&gt;지갑 설계 고려사항&lt;/h3&gt;
&lt;p&gt;편의성, 프라이버시 사이 균형&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;편리함&lt;/th&gt;
      &lt;th&gt;불편함&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;프라이버시 좋음&lt;/td&gt;
      &lt;td&gt;모든 트랜잭션에 새로운 키 사용&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;프라이버시 나쁨&lt;/td&gt;
      &lt;td&gt;하나의 개인키와 주소를 가지고 이를 재사용해서 모든 것을 처리&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;지갑-형태&quot;&gt;지갑 형태&lt;/h2&gt;
&lt;p&gt;지갑이 포함하는 키가 서로 관련이 있느냐 없느냐에 따라 구분&lt;/p&gt;
&lt;h3 id=&quot;1-비결정적-지갑nondeterministic-wallet&quot;&gt;1. 비결정적 지갑(nondeterministic wallet)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;JBOK(Just a Bunch Of Keys, 그냥 열쇠뭉치)&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;첫 번째 이더리움 지갑(이더리움 사전 판매용으로 생성)은 각 지갑 파일에 부작위로 추출된 단일 개인키를 저장함&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-결정적-지갑deterministic-wallet&quot;&gt;2. 결정적 지갑(deterministic wallet)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;모든 키가 seed라고 하는 단일 마스터 키로부터 파생
모든 키는 서로 관련이 있고 원래의 시드를 갖고 있다면 다시 키를 파생시킬 수 있다
여러 가지 키 파생(key derivation)방식이 있는데 가장 많이 사용하는 방식은 트리 같은 구조(&lt;strong&gt;HD 지갑&lt;/strong&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;hd지갑&quot;&gt;HD지갑(&lt;/h4&gt;
</description>
        <pubDate>Wed, 26 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ethereum/2019/06/26/mastering-ethereum-1-5/</link>
        <guid isPermaLink="true">http://localhost:4000/ethereum/2019/06/26/mastering-ethereum-1-5/</guid>
        
        <category>Ethereum</category>
        
        <category>Blockchian</category>
        
        
        <category>Ethereum</category>
        
      </item>
    
      <item>
        <title>Jekyll Admin 실행</title>
        <description>&lt;h1 id=&quot;1-jekyll-admin-플러그인-추가&quot;&gt;1. Jekyll Admin 플러그인 추가&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 파일 오픈해서 아래와 같이 추가&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'jekyll-admin', group: :jekyll_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;루트 디렉토리에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; 실행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;http://localhost:4000/admin 접속 시 관리자 보임&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll-admin/blob/master/README.md&quot;&gt;https://github.com/jekyll/jekyll-admin/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/06/11/jekyll-admin/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/06/11/jekyll-admin/</guid>
        
        <category>Jekyll</category>
        
        <category>Github</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>ECC, ECDSA 이해하기 (ft. 수학)</title>
        <description>&lt;h1 id=&quot;0-목적&quot;&gt;0. 목적&lt;/h1&gt;
&lt;p&gt;ECDSA 작동 방식, 알고리즘, 디지털 서명 확인 방법 및 그러한 서명을 위조하는 것이 불가능한 방법을 설명한다.&lt;/p&gt;

&lt;h2 id=&quot;기본-내용&quot;&gt;기본 내용&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ECDSA는 정수만 사용(실수는 사용하지 않는다)&lt;/li&gt;
  &lt;li&gt;일반적으로 ECDSA는 총 160bits를 사용(49자릿수)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-필요한-수학-개념&quot;&gt;1. 필요한 수학 개념&lt;/h1&gt;

&lt;h2 id=&quot;modular&quot;&gt;Modular&lt;/h2&gt;
&lt;p&gt;한 방향으로는 쉽지만 다른 방향으로는 어려운 일방향 함수를 고안하기 위해 탄생되었다.
시계 연산으로도 알려져있다.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;x\ mod\ p&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;46\ mod\ 12 \equiv 10&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;modular-합동&quot;&gt;Modular 합동&lt;/h2&gt;
&lt;p&gt;정수 $a, b$와 양의 정수 $m$에 대하여 $a-b$가 $m$으로 나누어 떨어진다면, $a$와 $b$ 는 모듈로 $m$ 합동(a is congruent to b modulo m)이다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a\equiv b\ (mod\ m)&lt;/script&gt;

&lt;h2 id=&quot;modular-합동의-필요충분조건&quot;&gt;Modular 합동의 필요충분조건&lt;/h2&gt;
&lt;p&gt;$a\equiv b\ (mod\ m)$의 필요충분조건은, $a\ mod\ m = b\ mod\ m$이다.&lt;/p&gt;

&lt;p&gt;정수 $a, b$가 모듈로 $m$ 합동이기 위한 필요충분조건은, $a = b+km$을 만족하는 $k$의 존재이다.
($a-b=km$이란 뜻이므로 합동의 정의와 같다)&lt;/p&gt;

&lt;h2 id=&quot;modular-사칙연산&quot;&gt;Modular 사칙연산&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a+b)\ mod\ m&amp;=&amp;((a\ mod\ m)+(b\ mod\ m))\ mod\ m\\
(a-b)\ mod\ m&amp;=&amp;((a\ mod\ m)-(b\ mod\ m))\ mod\ m\\
(a\times b)\ mod\ m&amp;=&amp;((a\ mod\ m)\times(b\ mod\ m))\ mod\ m\\
(a\div b)\ mod\ m&amp;=&amp;((a\ mod\ m)\div(b\ mod\ m))\ mod\ m ????
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;사칙연산 중 나눗셈에 닫혀있다. 
역원의 곱셈으로 변경하면 성립된다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;modular-역원&quot;&gt;Modular 역원&lt;/h2&gt;
&lt;p&gt;$b^{-1}$은 모듈러 group 중에서 $b$와 곱하고 모듈러를 취했을 때 $1$이되는 값이다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(b\times b^{-1})\ mod\ m \equiv 1&lt;/script&gt;

&lt;p&gt;$m$과 서로소인 수($m$과 공통 소인수가 없는 수)만 모듈러 역원($mod\ m$)을 가진다.&lt;/p&gt;

&lt;p&gt;모듈러 group에서 곱셈에 대한 역원을 구하는 방법은 여러가지가 있다.
가장 무식하게는 group 내 모든 원소($0$ ~ $m-1$)에 대해서 곱셈을 해본 후 모듈러를 취했을때 1이 나오는 값을 찾으면 된다.&lt;/p&gt;

&lt;p&gt;하지만 수학적으로 더 빠르게 구할 수 있는 방법을 알아보자.&lt;/p&gt;

&lt;h3 id=&quot;페르마의-소정리&quot;&gt;페르마의 소정리&lt;/h3&gt;

&lt;p&gt;정수 $a$를 선택해서 거듭제곱 $a^2, a^3, a^4 … (mod\ p)$를 계산하면 어떤 규칙성이 있는가?&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/fermat_little_theorem.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;패턴을 찾으면, $a\equiv 0$이 아니면 $a^2\equiv 1\ (mod\ 3), a^4\equiv 1\ (mod\ 5), a^6\equiv 1\ (mod\ 7)$&lt;/p&gt;

&lt;p&gt;소수 $p$와 서로소인 정수 $a$에 대해 다음과 같은 식이 존재한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^{p-1}\equiv 1\quad (mod\ p)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^p\equiv a\ mod\ p&lt;/script&gt;

&lt;p&gt;식을 전개하면,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a^{p-1}=a\times a^{p-2}\equiv 1 \ (mod\ p)&lt;/script&gt;

&lt;p&gt;$a의$ 역원을 한번에 구할 수 있다. ($a^{p-2}$)&lt;/p&gt;

&lt;p&gt;단, $m$은 소수여야하고 $a$는 $m$과 서로소라는 가정이 충족되어야 한다.&lt;/p&gt;

&lt;p&gt;다시 구하려던 식을 정리해보자.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{m-2}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;h4 id=&quot;소스코드&quot;&gt;소스코드&lt;/h4&gt;
&lt;p&gt;재귀&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;long long get_pow(long long a, long long b, long long mod){
    if(b==0) return 1;
    if(b&amp;amp;1) return a * get_pow(a*a%mod, (b-1)/2, mod) % mod;
    return get_pow(a*a%mod, b/2, mod) % mod;
}
 
long long mod_inverse(long long a, long long mod){
    long long b = mod-2;
    return get_pow(a,b,mod);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;반복문&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;long long mod_inverse(long long a, long long mod){
    long long ret = 1;
    int b = mod-2;
    while(b!=0){
        if(b&amp;amp;1) ret = (ret*a)%mod;
        a = (a*a)%mod;
        b&amp;gt;&amp;gt;=1;
    }
    return ret;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;확장-유클리드-알고리즘&quot;&gt;확장 유클리드 알고리즘&lt;/h3&gt;
&lt;p&gt;페르마의 소정리는 $m$이 소수라는 제약조건이 있다.&lt;/p&gt;

&lt;p&gt;확장 유클리드 호제법은 $m$이 소수가 아니어도 $a$와 $m$이 서로소라는 조건만 만족하면 곱셈에 대한 역원을 구할 수 있다.&lt;/p&gt;

&lt;p&gt;확장 유클리드 알고리즘(Extended Euclidian Algorithm)은 유클리드 호제법을 확장한 것이다.
$a$와 $b$에 대해서 아래 식을 만족하는 정수 $x, y$짝을 찾아낼 수 있다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ax+by=gcd(a,b)&lt;/script&gt;

&lt;h4 id=&quot;계산방법&quot;&gt;계산방법&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;(초기조건)&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_0=1, x_1=0, y_0=0, y_1=1, r_0=a, r_1=b&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;(진행)&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{matrix}
q_i&amp;\gets&amp; |r_{i-1}/r_i|\ (i\ge 1)\\
r_i&amp;\gets&amp; r_{i-2}-r_{i-1}\times q_{i-1}\ (i\ge 2)\\
x_i&amp;\gets&amp; x_{i-2}-x_{i-1}\times q_{i-1}\\
y_i&amp;\gets&amp; y_{i-2}-y_{i-1}\times q_{i-1}
\end{matrix} %]]&gt;&lt;/script&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$x_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$y_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$r_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$q_i$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor a/b\rfloor$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a\ mob\ b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;(예제) $15x+6y=3$을 만족시키는 $x,y$ 찾기&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$x_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$y_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$r_i$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$q_i$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a=15$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b=6$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor 15/6\rfloor=2$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=2$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1-0\times 2=1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$0-1\times 2=-2$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$15\ mod\ 6=3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\lfloor 6/3\rfloor=2$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$i=3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$6\ mod\ 3=0$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;$r_i$이 $0$이 되는 순간 나머지가 $0$이 되는, 즉 식이 나누어 떨어지는 $x, y$를 찾았다는 의미이다.&lt;/p&gt;

&lt;p&gt;즉, $x_{i-1}$와 $y_{i-1}$이 우리가 구하고자하는 답이다.&lt;/p&gt;

&lt;p&gt;검산해보면,
&lt;script type=&quot;math/tex&quot;&gt;15x+6y=15\times 1+6\times (-2)=15-12=3&lt;/script&gt;
인 것을 확인할 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;소스코드-1&quot;&gt;소스코드&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;int exgcd(int a, int b, int &amp;amp;cx, int &amp;amp;cy){
	if(b == 0){
		cx = 1;
		cy = 0;
		return a;
	}
	int nx, ny;
	int g = exgcd(b, a % b, nx, ny);
	cx = ny;
	cy = nx - (a / b) * ny;
	return g;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;확장 유클리드 호제법과 모듈러 곱셈에 대한 역원을 연결해보자.&lt;/p&gt;

&lt;p&gt;$a$의 곱셈에 대한 역원을 $x$라고 하면 
&lt;script type=&quot;math/tex&quot;&gt;ax\equiv 1\ (mod\ m)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;모듈로 합동의 필요충분조건에 의해 아래와 같이 전개된다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ax=1+my&lt;/script&gt;

&lt;p&gt;이 식을 다시쓰면 확장 유클리드 호제법과 같은 식으로 변환할 수 있다.
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{matrix}
ax&amp;=&amp;1+my\\
ax-my&amp;=&amp;1
\end{matrix} %]]&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;그리고 앞에서 전제한 대로 $a$와 $m$이 서로소라면 아래와 같이 변경가능하다.
&lt;script type=&quot;math/tex&quot;&gt;ax-my=gcd(a,m)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;($a$와 $m$의 최대공약수가 1(즉, 서로소)이면 해가 존재하고, 그렇지 않으면 a−1은 존재하지 않는다)&lt;/p&gt;

&lt;p&gt;따라서 $a$와 $m$에 대해서 확장 유클리드 호제법을 이용해서 $x$와 $y$를 구하면 $a$의 곱셈에 대한 역원 $x$를 구할 수 있다.&lt;/p&gt;

&lt;p&gt;이를 이용해서 처음에 구하려던 식을 정리해보자.&lt;/p&gt;

&lt;p&gt;다시 구하려던 식을 정리해보자.
확장 유클리드 호제법을 이용해서 $bx−my=1$ 를 만족하는 $b$의 곱셈에 대한 역원 $x$를 구하면 아래와 같이 바꿀 수 있다.
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{matrix} 
(a\div b)\ mod\ m &amp;=&amp; (a\times b^{-1})\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(b^{-1}\ mod\ m))\ mod\ m\\
&amp;=&amp;((a\ mod\ m)\times(x^{m}\ mod\ m))\ mod\ m
\end{matrix} %]]&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;소수의-modular-연산&quot;&gt;소수의 Modular 연산&lt;/h2&gt;
&lt;p&gt;소수 $17$ 사용하되, 약수인 $3$ 사용&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix} 
3^1\, mod\, 17 \equiv 3
\\3^2\, mod\, 17 \equiv 9
\\3^3\, mod\, 17 \equiv 10
\\3^4\, mod\, 17 \equiv 13
\\3^5\, mod\, 17 \equiv 5
\\3^6\, mod\, 17 \equiv 15
\\3^7\, mod\, 17 \equiv 11
\\3^8\, mod\, 17 \equiv 16
\\3^9\, mod\, 17 \equiv 14
\\3^{10}\, mod\, 17 \equiv 8
\\3^{11}\, mod\, 17 \equiv 7
\\3^{12}\, mod\, 17 \equiv 4
\\3^{13}\, mod\, 17 \equiv 12
\\3^{14}\, mod\, 17 \equiv 2
\\3^{15}\, mod\, 17 \equiv 6
\\3^{16}\, mod\, 17 \equiv 1
\end{matrix}&lt;/script&gt;

&lt;p&gt;연산의 해가 획일적으로 분포
$3$을 generator라고 한다.&lt;/p&gt;

&lt;p&gt;만약 $3$에 어떤 지수인 $x$를 올리면 그 해는 똑같은 확률로 $0$에서 $17$사이의 하나의 정수가 된다.&lt;/p&gt;

&lt;p&gt;단, 반대의 경우는 어렵다.
$mod$ 연산값으로 $12$이 주어지고 지수인 $13$ 찾기 어렵고, 계속 계산하는 방법 밖에 없다.&lt;/p&gt;

&lt;p&gt;이것을 &lt;strong&gt;이산로그 문제&lt;/strong&gt;라고 한다.&lt;/p&gt;

&lt;h1 id=&quot;2-타원곡선-elliptic-curve&quot;&gt;2. 타원곡선 (Elliptic Curve)&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;수학의 역사에서 타원의 둘레를 구하는 적분의 과정에서 도출된 식이라 타원곡선이라 부름&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일반적으로 타원 곡선 방정식은 다음과 같다.
&lt;script type=&quot;math/tex&quot;&gt;y^2+b_1xy+b_2y=x^3+a_1x^2+a_2x+a_3&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;실수상의 타원 곡선은 다음과 같은 특별한 범주에 속하는 타원 곡선을 사용한다.
&lt;script type=&quot;math/tex&quot;&gt;y^2 = x^3 + ax + b&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;우변인 $x^3+ax+b$가 중근을 갖지 않으면, 즉 $4a^3+27b^2=0$이 아니면 타원곡선은 군(Group)을 정의 할 수 있는 대수적 특성을 제공한다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;h2 id=&quot;특징&quot;&gt;특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;$X$축을 중심으로 대칭
    &lt;ul&gt;
      &lt;li&gt;어떤 $x$ 좌표 에 대해서도(정수만 사용), $X$축에 대칭 되는 두 값의 $y$을 가진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;타원곡선에서 직각이 아니도록 그은 모든 직선은 곡선과 항상 3번 교차&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;연산&quot;&gt;연산&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;표현&lt;/th&gt;
      &lt;th&gt;예&lt;/th&gt;
      &lt;th&gt;연산&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;스칼라(scalar)&lt;/td&gt;
      &lt;td&gt;소문자&lt;/td&gt;
      &lt;td&gt;p, n, a, b&lt;/td&gt;
      &lt;td&gt;덧셈, 곱셈, 역원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;점(point)&lt;/td&gt;
      &lt;td&gt;대문자&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;덧셈, 곱셈&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;점point&quot;&gt;점(point)&lt;/h3&gt;
&lt;h4 id=&quot;덧셈법칙&quot;&gt;덧셈법칙&lt;/h4&gt;
&lt;p&gt;(일반적인 좌표의 덧셈이 아니라 타원곡선 위에서의 덧셈 정의)&lt;/p&gt;

&lt;p&gt;곡선위의 점 $P, Q$를 정해 직선으로 연결한 뒤 연장선 상에서 지나는 또 다른 점($-R$)을 찾고 이를 $X$축에 그대로 대칭시키면 곡선 위의 $R$ 좌표가 등장한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P+Q=R&lt;/script&gt;

&lt;p&gt;&amp;lt;/center&amp;gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_addition.png&quot; width=&quot;100%&quot; /&gt;&amp;lt;/center&amp;gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;서로 다른 두점 $P+Q$&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix}\lambda=(y_2-y_1)/(x_2-x_1)\\ x_3=\lambda^2-x_1-x_2\\ y_3=\lambda(x_1-x_3)-y_1 \end{matrix}&lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;같은 점 $P$&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{matrix}\lambda=(3x_1^2+a)/(2y_1)\\ x_3=\lambda^2-x_1-x_2\\ y_3=\lambda(x_1-x_3)-y_1 \end{matrix}&lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;수학적으로 이런 경우 교점이 무한대 있다고 말한다. 그리고 그점을 $O$이라고 정의하고 무한원점(point at infinity)혹은 영점(zero point)라고 부른다. 이것이 바로 이 군의 덧셈에 대한 항등원이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;곱셈법칙&quot;&gt;곱셈법칙&lt;/h4&gt;
&lt;p&gt;타원곡선 덧셉에 대한 정의로(같은 점) 스칼라 곱셈 연산도 표현 가능하다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;kP=P+P+P+...&lt;/script&gt;

&lt;center&gt;&lt;img src=&quot;https://blog.cloudflare.com/content/images/image02.gif&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;P에서 접선을 그려 이를 지나는 또 다른 점을 찾고, 그 대칭인 2P를 찾는다. (P+P=2P)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2P와 P를 교차하는 연장선을 그어서 이를 지나는 또 다른 점을 찾고, 대칭인 3P를 찾는다. (2P+P=3P)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반복&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;덧셈을 할 때 R 의 대칭점을 취해야하는 이유를 이미 추측 할 수 있다. 
그렇지 않으면 동일한 점을 여러 번 더할때 항상 동일한 선과 동일한 세 교차점이 나타난다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;군group&quot;&gt;군(Group)&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;G에 속한 임의의 점 P, Q에 대해서 P + Q 또한 G에 속한다&lt;/li&gt;
  &lt;li&gt;(P + Q) + R = P + (Q+ R)&lt;/li&gt;
  &lt;li&gt;ideal point 0이 있으며 P + 0 = 0 + P = P&lt;/li&gt;
  &lt;li&gt;Q가 P의 역원이면 P + Q = 0&lt;/li&gt;
  &lt;li&gt;P + Q = Q + P&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;trap-door-function&quot;&gt;Trap door Function&lt;/h2&gt;
&lt;p&gt;점 곱셈의 특수성은 $R=k\times P$일 때 $R$과 $P$를 알고 있어도 $k$의 값을 알 수 없다.
뺼셈, 나눗셈이 없으므로 $k=R/P$로 해결할 수 없다.&lt;/p&gt;

&lt;h1 id=&quot;3-ecc-elliptic-curve-cryptography&quot;&gt;3. ECC (Elliptic Curve Cryptography)&lt;/h1&gt;
&lt;p&gt;ECC는 유한 필드에 대한 타원 곡선을 기반으로하는 공개 키 암호화에 대한 접근 방식이다.&lt;/p&gt;

&lt;h2 id=&quot;유한체finite-field-상의-타원곡선elliptic-curve&quot;&gt;유한체(Finite Field) 상의 타원곡선(Elliptic Curve)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;유한체(Finite Field)&lt;/strong&gt;
“집합에 속해 있는 원소의 수가 한정되어 있으며, 덧셈, 곱셈 연산에 대하여 닫혀 있는 집합”을 의미한다.&lt;br /&gt;
“닫혀 있다” 란, 연산의 결과 값도 집합에 속해있다는 것을 의미한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;암호학에서는 그래프와 부딪히는 값(k)의 추측을 더욱 어렵게 하기 위해서 정의역과 치역을 소수 p 체계로 한정한다.&lt;/li&gt;
  &lt;li&gt;또한 암호학에서 필수적이 속성은 그룹에 한정된 수의 포인트가 있다는 것이다(실수에 계산은 반올림 근사로 인해 느리고 부정확함). 암호화 어플리케이션은 빠르고 정확한 산술 연산이 필요하다.&lt;/li&gt;
  &lt;li&gt;유한체는 컴퓨터 계산에 매우 적합하므로 타원곡선에 사용된다. ECC는 p를 가지고 mod 연산을 하는데 이는 유한체이다.&lt;/li&gt;
  &lt;li&gt;참고로, 타원곡선이 암호학에 적합한 이유는, 실수(Real Number)상에서 연산을 하든, 유한체 상에서 연산을 하든, 동일한 수학법칙이 적용되기 때문이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;수식&quot;&gt;수식&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;y^2 \equiv (x^3 + ax + b)\,\, mod\, p&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;집합&quot;&gt;집합&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;E(F_p) = \left\{(x,y)|y^2=x^3+ax+b\right\}\cup \left\{O\right\}&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;특징-1&quot;&gt;특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;방정식에 $mod\ p$하면 $y^2$의 값은 $0$에서 $p-1$이다.&lt;/li&gt;
  &lt;li&gt;정수만 사용하고 있기 떄문에, 사각수(제곱수)는 작은 그룹이며 가능한 점들의 갯수를 $N$이라고 한다. ($N&amp;lt;p$)&lt;/li&gt;
  &lt;li&gt;어떤 $x$ 좌표에 대해서든 두 점을 가지기 때문에, 가능한 $x$ 좌표는 $N/2$개 이다. 즉, 이 타원 곡선은 유한 한 수의 점을 가지고 있다.(정수 계산과 modular 때문)&lt;/li&gt;
  &lt;li&gt;이렇게 바뀐 타원곡선함수는 곡선이 아닌 점들이 뭉쳐 있는 구름 형태이다.&lt;/li&gt;
  &lt;li&gt;암호학에서는 타원곡선의 난이도를 높이기 위해 곡선에 부딪히는 횟수도 소수 단위로 한정한다.&lt;/li&gt;
  &lt;li&gt;또 일정한 한계치 값을 넘치면 새로운 값에서 함수를 시작시키는 등 제약을 도입하게 되는데 이렇게 추가적으로 암호화한 값은 해독하기가 매우 어렵다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;E: y^2=x^3+x \ over\ Z_{23}\ (p=23)&lt;/script&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_finite_filed.png&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;만약 $x=9$라고할 때 $y^2\ mod\ 23=(729+ 9)\ mod\ 23=738\ mod\ 23=2$이다.
이때 만족하는 $y$는 $5*\ mod\ 23=2$이므로 $y$는 $5$가 될 수 있다.&lt;/p&gt;

&lt;p&gt;이때 갈루아 필드의 $p$가 조금만 더 커지면 우리는 $y$를 쉽게 찾을 수 없게 된다.
따라서 이를 통해 암호학에 적용 할 수 있게 된다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://blog.cloudflare.com/content/images/image01.gif&quot; width=&quot;70%&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://mioscode.github.io/assets/images/ecc_torus.png&quot; width=&quot;70%&quot; /&gt;&lt;/center&gt;

&lt;h1 id=&quot;4-ecdsa-elliptic-curve-digital-signature-algorithm&quot;&gt;4. ECDSA (Elliptic Curve Digital Signature Algorithm)&lt;/h1&gt;
&lt;p&gt;비트코인 등 블록체인 기반 기술에서는 키 쌍의 생성에 ECDSA를 사용하여 키 길이 256 비트 이상을 사용한다.
미국국립표준기술원(NIST)에서 개발한 secp256k1 표준에 정의된 타원 곡선을 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;y^2\ mod\ p=(x^3+7)\ mod\ p&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;p=2^{256}-2^{32}-2^9-2^8-2^7-2^6-2^4-1&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;domain-parameterssecp256k1&quot;&gt;Domain Parameters(secp256k1)&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;값&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;p&lt;/td&gt;
      &lt;td&gt;FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFC2F&lt;/td&gt;
      &lt;td&gt;modulo prime number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000=0&lt;/td&gt;
      &lt;td&gt;방정식 계수&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000007=7&lt;/td&gt;
      &lt;td&gt;방정식 계수&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;02 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 (compressed form)&lt;/td&gt;
      &lt;td&gt;Base Point/Generator Point&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt;FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B BFD25E8C D0364141&lt;/td&gt;
      &lt;td&gt;order of point G(G를 n번 더하면 무한원점이 되는 값)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;h&lt;/td&gt;
      &lt;td&gt;01&lt;/td&gt;
      &lt;td&gt;cofactor&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;총 점의 수 N값은 Schoof’s algorithm을 통해 구한다(Hasse’s theorem on elliptic curves과 중국인의 나머지정리를 기반으로 만들어짐).&lt;/li&gt;
  &lt;li&gt;전체 집합 원소의 수 N에서 부분집합의 수인 n을 결정한다(n은 소수이면서 N의 약수).&lt;/li&gt;
  &lt;li&gt;보조 인자(cofactor)인 $h=N/n$ 를 구한다.&lt;/li&gt;
  &lt;li&gt;타원곡선 위 임의의 점 $P$를 골라서 기준점 $G=hP$를 구한다.&lt;/li&gt;
  &lt;li&gt;$G$가 $0$이면 다른 $P$를 골라서 반복한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;기본-원리&quot;&gt;기본 원리&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;타원곡선에서 임의의 점(&lt;strong&gt;Point of Origin&lt;/strong&gt;)을 선택한다.&lt;/li&gt;
  &lt;li&gt;임의의 숫자(&lt;strong&gt;Private Key&lt;/strong&gt;)를 생성한다.&lt;/li&gt;
  &lt;li&gt;원점과 임의의 숫자를 사용하는 마법의 수학 방정식을 쓰면 타원곡선 위에서 두번째 점(&lt;strong&gt;Public Key&lt;/strong&gt;)이 된다.&lt;/li&gt;
  &lt;li&gt;파일의 &lt;strong&gt;Hash&lt;/strong&gt;와 함께 이 &lt;strong&gt;Private Key&lt;/strong&gt;를 마법의 방정식에 넣으면 &lt;strong&gt;서명&lt;/strong&gt;이 부여된다. 서명은 &lt;strong&gt;R&lt;/strong&gt;과 &lt;strong&gt;S&lt;/strong&gt; 두 부분으로 나뉜다.&lt;/li&gt;
  &lt;li&gt;서명이 올바른지 확인하려면 &lt;strong&gt;Public Key&lt;/strong&gt;,&lt;strong&gt;S&lt;/strong&gt;,&lt;strong&gt;R&lt;/strong&gt;를 또다른 마법의 방정식에 넣으면 &lt;strong&gt;R&lt;/strong&gt;이 나오는 것을 확인한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-private-key-d&quot;&gt;(1) Private Key (d)&lt;/h2&gt;
&lt;p&gt;RSA와 달리 Private Key를 먼저 정한다.
난수생성기를 사용하여 ${1, …, p-1}$ 범위 중 랜덤 integer $d$를 선택한다. (20 bytes=160 bit)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;$y^2=x^3-2x+15$
$G=[4,5]$
$d_A=3$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-public-key-q&quot;&gt;(2) Public Key (Q)&lt;/h2&gt;
&lt;p&gt;타원곡선의 publlic key는 generation point인 시작점 $G$가 private key에 해당하는 숫자, $d$만큼 타원곡선 상의 덧셈 연산을 실행해 곡선에 안착한 좌표, $Q$에 해당한다&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Q(x,y)=d\times G(x_0, y_0)&lt;/script&gt;

&lt;p&gt;$G$는 이미 알려져있고, $Q$는 Public Key 생성 후 공개되지만, 이 두 값으로 $d$를 유추해 내기 굉장히 어렵다(ECDLP,Elliptic Curve Discrete Logarithm Problem).
직접 대입 방식 말고는 아직까지 해답이 없다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;$Q_A=d_A&lt;em&gt;G=3&lt;/em&gt;[4,5]=[13,22]$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-sign&quot;&gt;(3) Sign&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;파일의 해시(파일 고유 번호)와 함께 개인키를 방정식에 넣으면 서명됨&lt;/li&gt;
  &lt;li&gt;서명은 각각 20바이트의 $r$과 $s$ 두값으로 나뉨 $(r,s)$&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;r&quot;&gt;$r$&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;먼저 임의의 값인 ‘$k$(20 bytes)’를 생성하고 점의 곱셈을 사용하여 $P=k\times G$를 계산한다.&lt;/li&gt;
  &lt;li&gt;점 $P$의 $x$값이 ‘$r$’을 나타낸다(20 bytes).&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;s&quot;&gt;$s$&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;$s$를 계산하려면 메시지의 SHA1 해시를 만들어야한다. 이 값은 매우 큰 정수로 간주되는 20 bytes 값을 제공하며 ‘$z$’라고 한다.&lt;/li&gt;
  &lt;li&gt;다음 등식을 사용하여 $s$ 를 계산할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;s=k^{-1}(z+dA\times r)\ mod\ P&lt;/script&gt;

&lt;h2 id=&quot;4-검증&quot;&gt;(4) 검증&lt;/h2&gt;
&lt;p&gt;public key만 있으면 가능하다.
아래 방정식을 통해 점 P를 계산한다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P=s^{-1}\times z \times G+s^{-1}\times r \times Qa&lt;/script&gt;

&lt;p&gt;점 $P$의 $X$좌표가 $r$과 같으면 서명이 유효함을 의미하고 그렇지 않으면 유효하지 않다.&lt;/p&gt;

&lt;h3 id=&quot;검증식-증명&quot;&gt;검증식 증명&lt;/h3&gt;
&lt;p&gt;검증식이 서명식으로 전개되는 것을 증명한다.&lt;/p&gt;

&lt;p&gt;$P=s^{-1}\times z \times G+s^{-1}\times r \times Qa$
$(Qa=dA\times G)$
$P=s^{-1}\times z \times G+s^{-1}\times r \times dA\times G$
$k\times G=s^{-1}(z+dA\times r)\times G$
$k=s^{-1}(z+dA\times r)$
$s=k^{-1}(z+dA\times r)$&lt;/p&gt;

&lt;h3 id=&quot;5-public-key-recover-ethereum&quot;&gt;(5) Public Key Recover (Ethereum)&lt;/h3&gt;
&lt;p&gt;For $j$ from $0$ to $h$ do the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Let $x = r + jn$.&lt;/li&gt;
  &lt;li&gt;Convert the integer $x$ to an octet string $X$ of length $mlen$ using the conversion routine specified in Section 2.3.7, where $mlen = \lceil(log_{2} p)/8e\rceil$ or $mlen = \lceil m/8e\rceil$.&lt;/li&gt;
  &lt;li&gt;Convert the octet string 0216kX to an elliptic curve point R using the conversion routine specified in Section 2.3.4. If this conversion routine outputs “invalid”, then do another iteration of Step 1.&lt;/li&gt;
  &lt;li&gt;If $nR \ne O$, then do another iteration of Step 1.&lt;/li&gt;
  &lt;li&gt;Compute e from M using Steps 2 and 3 of ECDSA signature verification.&lt;/li&gt;
  &lt;li&gt;For k from 1 to 2 do the following.
    &lt;ol&gt;
      &lt;li&gt;Compute a candidate public key as:&lt;/li&gt;
    &lt;/ol&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;Q=r^{-1}(sR-eG)&lt;/script&gt;

    &lt;ol&gt;
      &lt;li&gt;Verify that $Q$ is the authentic public key. (For example, verify the signature of a certification authority in a certificate which has been truncated by the omission of $Q$ from the certificate.) If $Q$ is authenticated, stop and output $Q$.&lt;/li&gt;
      &lt;li&gt;Change $R$ to $-R$.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;go-ethereumcryptosecp256k1secp256go&quot;&gt;go-ethereum/crypto/secp256k1/secp256.go&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;// RecoverPubkey returns the public key of the signer.
// msg must be the 32-byte hash of the message to be signed.
// sig must be a 65-byte compact ECDSA signature containing the
// recovery id as the last element.
func RecoverPubkey(msg []byte, sig []byte) ([]byte, error) {
	if len(msg) != 32 {
		return nil, ErrInvalidMsgLen
	}
	if err := checkSignature(sig); err != nil {
		return nil, err
	}

	var (
		pubkey  = make([]byte, 65)
		sigdata = (* /*line :103:15*/_Ctype_uchar /*line :103:22*/)(unsafe.Pointer(&amp;amp;sig[0]))
		msgdata = (* /*line :104:15*/_Ctype_uchar /*line :104:22*/)(unsafe.Pointer(&amp;amp;msg[0]))
	)
	if func() _Ctype_int{ _cgo0 := /*line :106:35*/context; var _cgo1 *_Ctype_uchar = /*line :106:44*/(*_Ctype_uchar)(unsafe.Pointer(&amp;amp;pubkey[0])); var _cgo2 *_Ctype_uchar = /*line :106:84*/sigdata; var _cgo3 *_Ctype_uchar = /*line :106:93*/msgdata; _cgoCheckPointer(_cgo0); return _Cfunc_secp256k1_ext_ecdsa_recover(_cgo0, _cgo1, _cgo2, _cgo3); }() == 0 {
		return nil, ErrRecoverFailed
	}
	return pubkey, nil
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;보안&quot;&gt;보안&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;$s$를 계산하려면 ‘$k$’(난수)와 ‘$dA$’(개인 키)가 필요하지만 서명을 검증하기 위해서는 $r$과 $Qa$(공개 키)만 있으면 된다.&lt;/li&gt;
  &lt;li&gt;$r=k&lt;em&gt;G$ 와 $Qa=dA&lt;/em&gt;G$ 그리고 ECDSA 포인트 곱셈에서 트랩 도어 기능으로 인해, $Qa$와 $R$을 알지 못하여 $dA$ 또는 $k$를 계산할 수 없으므로 보안적으로 안전하다.&lt;/li&gt;
  &lt;li&gt;개인 키를 찾을 수있는 방법이 없으며 개인 키를 모른 채 서명을 위조 할 방법이 없다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://noasax.github.io/problem%20solving/2017/09/24/Division-in-modular.html&quot;&gt;https://noasax.github.io/problem%20solving/2017/09/24/Division-in-modular.html&lt;/a&gt;
&lt;a href=&quot;https://www.weeklyps.com/entry/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0?category=795989&quot;&gt;https://www.weeklyps.com/entry/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0?category=795989&lt;/a&gt;
&lt;a href=&quot;https://www.instructables.com/id/Understanding-how-ECDSA-protects-your-data/&quot;&gt;https://www.instructables.com/id/Understanding-how-ECDSA-protects-your-data/&lt;/a&gt;
&lt;a href=&quot;https://www.mk.co.kr/news/economy/view/2019/03/168095/&quot;&gt;https://www.mk.co.kr/news/economy/view/2019/03/168095/&lt;/a&gt;
&lt;a href=&quot;http://slidesplayer.org/slide/11329530/&quot;&gt;http://slidesplayer.org/slide/11329530/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/math/2019/06/10/understanding-ECC-ECDSA/</link>
        <guid isPermaLink="true">http://localhost:4000/math/2019/06/10/understanding-ECC-ECDSA/</guid>
        
        <category>math</category>
        
        <category>cryptography</category>
        
        <category>ECC</category>
        
        <category>ECDSA</category>
        
        
        <category>math</category>
        
      </item>
    
      <item>
        <title>Rust 설치, Hello World</title>
        <description>&lt;h1 id=&quot;1-rustup-설치&quot;&gt;1. Rustup 설치&lt;/h1&gt;
&lt;p&gt;rustup: a command line tool for managing Rust versions and associated tools
&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(macOS)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;11-error&quot;&gt;1.1. Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) Proceed with installation (default)
2) Customize installation
3) Cancel installation
&amp;gt;1

error: could not write rcfile file: '/Users/somi.han/.profile'
info: caused by: Permission denied (os error 13)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;12-solution&quot;&gt;1.2. Solution&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra&quot;&gt;https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–no-modify-path    Don’t configure the PATH environment variable&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Rust!

This will download and install the official compiler for the Rust programming
language, and its package manager, Cargo.

It will add the cargo, rustc, rustup and other commands to Cargo's bin
directory, located at:

  /Users/somi.han/.cargo/bin

This path needs to be in your PATH environment variable, but will not be added
automatically.

You can uninstall at any time with rustup self uninstall and these changes will
be reverted.

....

Rust is installed now. Great!

To get started you need Cargo's bin directory ($HOME/.cargo/bin) in your PATH
environment variable.

To configure your current shell run source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;터미널을 다시 시작하는 대신 Rust를 바로 사용하려면 쉘에서 다음 명령을 실행하여 시스템 PATH에 수동으로 Rust를 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-hello-world&quot;&gt;2. Hello World&lt;/h1&gt;
&lt;h2 id=&quot;21-프로젝트-생성&quot;&gt;2.1. 프로젝트 생성&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo new (프로젝트 이름) --bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;프로젝트 이름으로 된 폴더가 생기며, 안에 Rust의 Hello, world를 출력하는 코드파일과 cargo 프로젝트 속성 파일이 생김&lt;/p&gt;
&lt;h2 id=&quot;22-컴파일&quot;&gt;2.2. 컴파일&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cargo run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-rust-nightly-install&quot;&gt;3. Rust nightly install&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;31-toolchain-설치&quot;&gt;3.1. toolchain 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup toolchain install nightly
info: syncing channel updates for 'nightly-x86_64-apple-darwin'
376.4 KiB / 376.4 KiB (100 %) 188.2 KiB/s in  2s ETA:  0s
info: latest update on 2019-06-07, rust version 1.37.0-nightly (5eeb567a2 2019-06-06)
info: downloading component 'rustc'
 81.9 MiB /  81.9 MiB (100 %)  11.2 MiB/s in  8s ETA:  0s
info: downloading component 'rust-std'
 56.1 MiB /  56.1 MiB (100 %)   9.8 MiB/s in  5s ETA:  0s
info: downloading component 'cargo'
info: downloading component 'rust-docs'
 11.2 MiB /  11.2 MiB (100 %)   9.5 MiB/s in  1s ETA:  0s
info: installing component 'rustc'
 81.9 MiB /  81.9 MiB (100 %)  12.5 MiB/s in  6s ETA:  0s
info: installing component 'rust-std'
 56.1 MiB /  56.1 MiB (100 %)  14.7 MiB/s in  3s ETA:  0s
info: installing component 'cargo'
info: installing component 'rust-docs'
 11.2 MiB /  11.2 MiB (100 %)   2.1 MiB/s in  5s ETA:  0s

  nightly-x86_64-apple-darwin installed - rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;32-테스트-실행&quot;&gt;3.2. 테스트 실행&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup run nightly rustc --version
rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;33-nightly로-디폴트-변경&quot;&gt;3.3. nightly로 디폴트 변경&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rustup default nightly
info: using existing install for 'nightly-x86_64-apple-darwin'
info: default toolchain set to 'nightly-x86_64-apple-darwin'

  nightly-x86_64-apple-darwin unchanged - rustc 1.37.0-nightly (5eeb567a2 2019-06-06)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/&lt;/a&gt;
&lt;a href=&quot;https://doc.rust-lang.org/book/title-page.html&quot;&gt;https://doc.rust-lang.org/book/title-page.html&lt;/a&gt;
&lt;a href=&quot;http://sarojaba.github.io/rust-doc-korean/doc/tutorial.html&quot;&gt;http://sarojaba.github.io/rust-doc-korean/doc/tutorial.html&lt;/a&gt;
&lt;a href=&quot;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&quot;&gt;https://github.com/rust-lang/rustup.rs/blob/master/README.md#working-with-nightly-rust&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/rust/2019/06/05/rust-install/</link>
        <guid isPermaLink="true">http://localhost:4000/rust/2019/06/05/rust-install/</guid>
        
        <category>Rust</category>
        
        
        <category>Rust</category>
        
      </item>
    
      <item>
        <title>mysql 명령어</title>
        <description>&lt;h1 id=&quot;login&quot;&gt;Login&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql -u root -p
Enter password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;database-보기&quot;&gt;Database 보기&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| test               |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;user-추가&quot;&gt;User 추가&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; create user '사용자'@'localhost' identified by '비밀번호';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DB 권한 부여하기&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; grant all privileges on *.* to '사용자'@'localhost';
MariaDB [(none)]&amp;gt; grant all privileges on DB이름.* to '사용자'@'localhost';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;모든 DB에 접근 가능하도록 하려면 &lt;em&gt;.&lt;/em&gt;, 특정 DB에만 접근 가능하도록 하려면 DB이름으로 지정해주면 된다.&lt;/p&gt;

&lt;h1 id=&quot;사용자-계정-삭제&quot;&gt;사용자 계정 삭제&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; drop user '사용자'@'localhost';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;외부에서-접속-가능한-사용자&quot;&gt;외부에서 접속 가능한 사용자&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [(none)]&amp;gt; create user '사용자'@'%' identified by '비밀번호'; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;’%’ 의 의미는 외부에서의 접근을 허용&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql/2019/06/04/mysql-command/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql/2019/06/04/mysql-command/</guid>
        
        <category>MySQL</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>macOS 에서 mysql 실행 시 Can't read dir of '/usr/local/etc/my.cnf.d' 해결</title>
        <description>&lt;h2 id=&quot;error&quot;&gt;Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql.server start

/usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
Starting MariaDB
./usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
/usr/local/Cellar/mariadb/10.3.13_1/bin/my_print_defaults: Can't read dir of '/usr/local/etc/my.cnf.d' (Errcode: 2 &quot;No such file or directory&quot;)
Fatal error in defaults handling. Program aborted
190604 10:28:40 mysqld_safe Logging to '/usr/local/var/mysql/macbook-2.local.err'.
190604 10:28:40 mysqld_safe Starting mysqld daemon with databases from /usr/local/var/mysql
/usr/local/bin/mysql.server: line 264: kill: (5900) - No such process
 ERROR!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;✗ mkdir /usr/local/etc/my.cnf.d

✗ mysql.server start

Starting MariaDB
.190604 10:29:02 mysqld_safe Logging to '/usr/local/var/mysql/macbook-2.local.err'.
190604 10:29:02 mysqld_safe Starting mysqld daemon with databases from /usr/local/var/mysql
 SUCCESS!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/issues/31760&quot;&gt;https://github.com/Homebrew/legacy-homebrew/issues/31760&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql/2019/06/04/mac-mysql-can't-read-dir-of-usr-local-etc-my.cnf.d/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql/2019/06/04/mac-mysql-can't-read-dir-of-usr-local-etc-my.cnf.d/</guid>
        
        <category>mac</category>
        
        <category>MySQL</category>
        
        <category>error</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>Python Anaconda environment.yml error 해결</title>
        <description>&lt;h2 id=&quot;error-1&quot;&gt;Error 1&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ conda env create -f environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Preparing transaction: done
Verifying transaction: done
Executing transaction: done
Invalid requirement: 'libcxxabi=4.0.1'
= is not a valid operator. Did you mean == ?

CondaValueError: pip returned an error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;원래는 이 명령을 통해 jekyll이 내장하고 있는 서버를 동작시키고 이를 로컬 PC(localhost:4000)에서 확인 가능한데, 에러&lt;/p&gt;

&lt;h2 id=&quot;처리&quot;&gt;처리&lt;/h2&gt;
&lt;p&gt;프로젝트 폴더 environment.yml 에서 pip 밑에&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx=4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi=4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran=3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;를 아래로 수정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx==4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi==4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran==3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;error-2&quot;&gt;Error 2&lt;/h2&gt;
&lt;p&gt;위 내용대로 수정 후 업데이트&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ conda env update -f environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Could not find a version that satisfies the requirement libcxx==4.0.1 (from -r /Volumes/data_mb2/project/Server/condaenv.m4ug0hfc.requirements.txt (line 7)) (from versions: )
No matching distribution found for libcxx==4.0.1 (from -r /Volumes/data_mb2/project/Server/condaenv.m4ug0hfc.requirements.txt (line 7))

CondaValueError: pip returned an error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;프로젝트 폴더 environment.yml 에서 pip 밑에&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;libcxx=4.0.1&lt;/li&gt;
  &lt;li&gt;libcxxabi=4.0.1&lt;/li&gt;
  &lt;li&gt;libgfortran=3.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;모두 삭제&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ContinuumIO/anaconda-issues/issues/10183&quot;&gt;https://github.com/ContinuumIO/anaconda-issues/issues/10183&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/python/2019/06/03/python-anaconda-environment-error/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2019/06/03/python-anaconda-environment-error/</guid>
        
        <category>Python</category>
        
        <category>Anaconda</category>
        
        <category>error</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Jekyll Github page 오류 해결</title>
        <description>&lt;h2 id=&quot;error&quot;&gt;Error&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;원래는 이 명령을 통해 jekyll이 내장하고 있는 서버를 동작시키고 이를 로컬 PC(localhost:4000)에서 확인 가능한데, 에러 발생&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:319:in `check_for_activated_spec!': You have already activated addressable 2.6.0, but your Gemfile requires addressable 2.5.2. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:31:in `block in setup'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/spec_set.rb:148:in `each'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/spec_set.rb:148:in `each'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:26:in `map'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:26:in `setup'
from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler.rb:107:in `setup'
from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/lib/jekyll/plugin_manager.rb:50:in `require_from_bundler'
from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/exe/jekyll:11:in `&amp;lt;top (required)&amp;gt;'
from /usr/local/bin/jekyll:22:in `load'
from /usr/local/bin/jekyll:22:in `&amp;lt;main&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;번들러는 Ruby에서 필요한 정확한 gem과 버전을 추적하고 설치하여 루비 프로젝트를 위한 일관된 환경을 제공한다.
번들러는 의존성 지옥에서 벗어나게 하고, 필요한 gem이 개발, 스테이징, 프로덕션에 있는지 확인해준다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: /Users/somi.han/Dropbox/mioscode.github.io/_config.yml
Remote Theme: Using theme mmistakes/minimal-mistakes
Source: /Users/somi.han/Dropbox/mioscode.github.io
Destination: /Users/somi.han/Dropbox/mioscode.github.io/_site
Incremental build: disabled. Enable with --incremental
Generating...
Remote Theme: Using theme mmistakes/minimal-mistakes
Jekyll Feed: Generating feed for posts
GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.
done in 4.287 seconds.
Auto-regeneration: enabled for '/Users/somi.han/Dropbox/mioscode.github.io'
Server address: http://127.0.0.1:4000
Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://aisiunme.github.io/jekyll/2018/07/25/troubleshooting-in-jekyll-serve/&quot;&gt;https://aisiunme.github.io/jekyll/2018/07/25/troubleshooting-in-jekyll-serve/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2019/05/23/jekyll-github-page-error/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2019/05/23/jekyll-github-page-error/</guid>
        
        <category>Github Page</category>
        
        <category>error</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>(mac) 단축키</title>
        <description>&lt;h2 id=&quot;chrome&quot;&gt;Chrome&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 닫은창 복구&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;~&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;아래로 스크롤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;Space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;위로 스크롤&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;작업창-컨트롤&quot;&gt;작업창 컨트롤&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+(&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;)+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;작업창 전환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+(&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;)+&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;특정 프로그램 내 작업창 전환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇥ Tab&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;~&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;크롬 내 탭 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;작업창 하나 외 숨기기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;현재 작업창 숨기기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;F3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;모든창 숨기기&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;mission-control&quot;&gt;Mission Control&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;왼쪽 또는 오른쪽으로 한 작업공간 이동&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;,&lt;kbd&gt;2&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;첫번째, 두번째 작업공간 이동&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;전체&quot;&gt;전체&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;,&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;줄 내 이동 (맨앞, 맨뒤)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;finder&quot;&gt;Finder&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌫ Delete&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;, &lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌥ Option&lt;/kbd&gt;+&lt;kbd&gt;V&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;잘라내기, 붙여넣기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;/&lt;kbd&gt;2&lt;/kbd&gt;/&lt;kbd&gt;3&lt;/kbd&gt;/&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;보기 모드&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;스크린샷&quot;&gt;스크린샷&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;key&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;+&lt;kbd&gt;space bar&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;촬영 대상이 하늘색으로 강조&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;스크린샷 클립보드에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일, 화면&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;3&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;클립보드, 화면&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;파일, 영역 선택&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;⇧ Shift&lt;/kbd&gt;+&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;+&lt;kbd&gt;⌃ Ctrl&lt;/kbd&gt;+&lt;kbd&gt;4&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;클립보드, 영역 선택&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 22 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mac/2019/05/22/mac-shortcuts/</link>
        <guid isPermaLink="true">http://localhost:4000/mac/2019/05/22/mac-shortcuts/</guid>
        
        <category>mac</category>
        
        <category>shorcuts</category>
        
        
        <category>mac</category>
        
      </item>
    
      <item>
        <title>Eclipse에 ERMaster plugin 설치</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Eclipse 실행&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Install New Software&lt;/strong&gt; 선택&lt;/li&gt;
  &lt;li&gt;URL: http://ermaster.sourceforge.net/update-site/&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31693697/cant-install-ermaster-plugin-in-eclipse&quot;&gt;https://stackoverflow.com/questions/31693697/cant-install-ermaster-plugin-in-eclipse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ermaster/2019/04/15/ERMaster-plugin-in-Eclipse/</link>
        <guid isPermaLink="true">http://localhost:4000/ermaster/2019/04/15/ERMaster-plugin-in-Eclipse/</guid>
        
        <category>Eclipse</category>
        
        <category>ERMaster</category>
        
        
        <category>ERMaster</category>
        
      </item>
    
  </channel>
</rss>
